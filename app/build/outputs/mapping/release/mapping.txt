android.support.v7.widget.ActivityChooserModel$OnChooseActivityListener -> android.support.v7.widget.av:
    boolean onChooseActivity(android.support.v7.widget.ActivityChooserModel,android.content.Intent) -> a
com.squareup.picasso.BitmapHunter$6 -> com.squareup.a.bj:
    com.squareup.picasso.Transformation val$transformation -> a
    void <init>(com.squareup.picasso.Transformation) -> <init>
    void run() -> run
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.b.z:
android.support.v7.widget.GridLayoutManager$SpanSizeLookup -> android.support.v7.widget.an:
    android.util.SparseIntArray mSpanIndexCache -> a
    boolean mCacheSpanIndices -> b
    void <init>() -> <init>
    int getSpanSize(int) -> a
    void invalidateSpanIndexCache() -> a
    int getCachedSpanIndex(int,int) -> c
    int getSpanIndex(int,int) -> b
    int findReferenceIndexFromCache(int) -> d
    int getSpanGroupIndex(int,int) -> e
android.support.design.R$id -> android.support.design.e:
    int action0 -> action0
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_root -> action_bar_root
    int action_bar_spinner -> action_bar_spinner
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_divider -> action_divider
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar -> action_mode_bar
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int add -> add
    int alertTitle -> alertTitle
    int all -> all
    int always -> always
    int auto -> auto
    int beginning -> beginning
    int bottom -> bottom
    int buttonPanel -> buttonPanel
    int cancel_action -> cancel_action
    int center -> center
    int center_horizontal -> center_horizontal
    int center_vertical -> center_vertical
    int checkbox -> checkbox
    int chronometer -> chronometer
    int clip_horizontal -> clip_horizontal
    int clip_vertical -> clip_vertical
    int collapseActionView -> collapseActionView
    int contentPanel -> contentPanel
    int custom -> custom
    int customPanel -> customPanel
    int decor_content_parent -> decor_content_parent
    int default_activity_button -> default_activity_button
    int design_bottom_sheet -> design_bottom_sheet
    int design_menu_item_action_area -> design_menu_item_action_area
    int design_menu_item_action_area_stub -> design_menu_item_action_area_stub
    int design_menu_item_text -> design_menu_item_text
    int design_navigation_view -> design_navigation_view
    int disableHome -> disableHome
    int edit_query -> edit_query
    int end -> end
    int end_padder -> end_padder
    int enterAlways -> enterAlways
    int enterAlwaysCollapsed -> enterAlwaysCollapsed
    int exitUntilCollapsed -> exitUntilCollapsed
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int fill -> fill
    int fill_horizontal -> fill_horizontal
    int fill_vertical -> fill_vertical
    int fixed -> fixed
    int home -> home
    int homeAsUp -> homeAsUp
    int icon -> icon
    int ifRoom -> ifRoom
    int image -> image
    int info -> info
    int item_touch_helper_previous_elevation -> item_touch_helper_previous_elevation
    int left -> left
    int line1 -> line1
    int line3 -> line3
    int listMode -> listMode
    int list_item -> list_item
    int media_actions -> media_actions
    int middle -> middle
    int mini -> mini
    int multiply -> multiply
    int navigation_header_container -> navigation_header_container
    int never -> never
    int none -> none
    int normal -> normal
    int parallax -> parallax
    int parentPanel -> parentPanel
    int pin -> pin
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int radio -> radio
    int right -> right
    int screen -> screen
    int scroll -> scroll
    int scrollIndicatorDown -> scrollIndicatorDown
    int scrollIndicatorUp -> scrollIndicatorUp
    int scrollView -> scrollView
    int scrollable -> scrollable
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int select_dialog_listview -> select_dialog_listview
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int snackbar_action -> snackbar_action
    int snackbar_text -> snackbar_text
    int snap -> snap
    int spacer -> spacer
    int split_action_bar -> split_action_bar
    int src_atop -> src_atop
    int src_in -> src_in
    int src_over -> src_over
    int start -> start
    int status_bar_latest_event_content -> status_bar_latest_event_content
    int submenuarrow -> submenuarrow
    int submit_area -> submit_area
    int tabMode -> tabMode
    int text -> text
    int text2 -> text2
    int textSpacerNoButtons -> textSpacerNoButtons
    int text_input_password_toggle -> text_input_password_toggle
    int time -> time
    int title -> title
    int title_template -> title_template
    int top -> top
    int topPanel -> topPanel
    int touch_outside -> touch_outside
    int up -> up
    int useLogo -> useLogo
    int view_offset_helper -> view_offset_helper
    int withText -> withText
    int wrap_content -> wrap_content
    void <init>() -> <init>
android.support.v4.widget.PopupWindowCompatApi23 -> android.support.v4.widget.c:
    void <init>() -> <init>
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
    void setWindowLayoutType(android.widget.PopupWindow,int) -> b
android.support.v4.widget.TextViewCompat$TextViewCompatImpl -> android.support.v4.widget.t:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
android.support.v7.widget.RecyclerView$3 -> android.support.v7.widget.gs:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.b.ag:
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> a
    void <init>() -> <init>
    android.os.Bundle toBundle() -> b
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.a.a.x:
    void <init>() -> <init>
android.support.v7.recyclerview.R$styleable -> android.support.v7.b.a:
    int[] RecyclerView -> RecyclerView
    int RecyclerView_android_descendantFocusability -> RecyclerView_android_descendantFocusability
    int RecyclerView_android_orientation -> RecyclerView_android_orientation
    int RecyclerView_layoutManager -> RecyclerView_layoutManager
    int RecyclerView_reverseLayout -> RecyclerView_reverseLayout
    int RecyclerView_spanCount -> RecyclerView_spanCount
    int RecyclerView_stackFromEnd -> RecyclerView_stackFromEnd
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.widget.CompoundButtonCompatApi23 -> android.support.v4.widget.g:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> a
android.support.v7.widget.Toolbar$1 -> android.support.v7.widget.bg:
    android.support.v7.widget.Toolbar this$0 -> a
    void <init>(android.support.v7.widget.Toolbar) -> <init>
    boolean onMenuItemClick(android.view.MenuItem) -> a
com.android.volley.toolbox.HurlStack$UrlRewriter -> com.android.a.a.p:
    java.lang.String rewriteUrl(java.lang.String) -> a
android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy -> android.support.design.widget.cl:
    void onAnimationStart() -> a
    void onAnimationEnd() -> b
    void onAnimationCancel() -> c
android.support.v7.widget.AdapterHelper -> android.support.v7.widget.x:
    android.support.v4.util.Pools$Pool mUpdateOpPool -> a
    java.util.ArrayList mPendingUpdates -> b
    java.util.ArrayList mPostponedList -> c
    android.support.v7.widget.AdapterHelper$Callback mCallback -> d
    java.lang.Runnable mOnItemProcessedCallback -> e
    boolean mDisableRecycler -> f
    android.support.v7.widget.OpReorderer mOpReorderer -> g
    int mExistingUpdateTypes -> h
    void <init>(android.support.v7.widget.AdapterHelper$Callback) -> <init>
    void <init>(android.support.v7.widget.AdapterHelper$Callback,boolean) -> <init>
    void reset() -> a
    void preProcess() -> b
    void consumePostponedUpdates() -> c
    void applyMove(android.support.v7.widget.AdapterHelper$UpdateOp) -> d
    void applyRemove(android.support.v7.widget.AdapterHelper$UpdateOp) -> e
    void applyUpdate(android.support.v7.widget.AdapterHelper$UpdateOp) -> f
    void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp) -> g
    void dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp,int) -> h
    int updatePositionWithPostponed(int,int) -> i
    boolean canFindInPreLayout(int) -> j
    void applyAdd(android.support.v7.widget.AdapterHelper$UpdateOp) -> k
    void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp) -> l
    boolean hasPendingUpdates() -> m
    boolean hasAnyUpdateTypes(int) -> n
    int findPositionOffset(int) -> o
    int findPositionOffset(int,int) -> p
    void consumeUpdatesInOnePass() -> q
    int applyPendingUpdatesToPosition(int) -> r
    boolean hasUpdates() -> s
    android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> t
    void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp) -> u
    void recycleUpdateOpsAndClearList(java.util.List) -> v
com.murrayc.galaxyzoo.app.ClassifyActivity$4 -> com.murrayc.galaxyzoo.app.by:
    com.murrayc.galaxyzoo.app.ClassifyActivity this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.ClassifyActivity) -> <init>
    void onCancel(android.content.DialogInterface) -> onCancel
com.squareup.picasso.PicassoExecutorService$PicassoFutureTask -> com.squareup.a.ax:
    com.squareup.picasso.BitmapHunter hunter -> a
    void <init>(com.squareup.picasso.BitmapHunter) -> <init>
    int compareTo(com.squareup.picasso.PicassoExecutorService$PicassoFutureTask) -> a
    int compareTo(java.lang.Object) -> compareTo
android.support.v7.widget.ActionMenuView$1 -> android.support.v7.widget.fd:
android.support.annotation.Nullable -> android.support.annotation.b:
android.support.v7.view.menu.SubMenuWrapperICS -> android.support.v7.view.menu.k:
    void <init>(android.content.Context,android.support.v4.internal.view.SupportSubMenu) -> <init>
    android.support.v4.internal.view.SupportSubMenu getWrappedObject() -> a
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem getItem() -> getItem
android.support.v7.widget.RecyclerView$State -> android.support.v7.widget.e:
    int mTargetPosition -> a
    int mLayoutStep -> b
    android.util.SparseArray mData -> c
    int mItemCount -> d
    int mPreviousLayoutItemCount -> e
    int mDeletedInvisibleItemCountSincePreviousLayout -> f
    boolean mStructureChanged -> g
    boolean mInPreLayout -> h
    boolean mRunSimpleAnimations -> i
    boolean mRunPredictiveAnimations -> j
    boolean mTrackOldChangeHolders -> k
    boolean mIsMeasuring -> l
    int mFocusedItemPosition -> m
    long mFocusedItemId -> n
    int mFocusedSubChildId -> o
    void <init>() -> <init>
    void assertLayoutStep(int) -> a
    boolean isPreLayout() -> b
    boolean willRunPredictiveAnimations() -> c
    int getTargetScrollPosition() -> d
    boolean hasTargetScrollPosition() -> e
    int getItemCount() -> f
    java.lang.String toString() -> toString
    int access$1700(android.support.v7.widget.RecyclerView$State) -> g
    int access$1702(android.support.v7.widget.RecyclerView$State,int) -> h
    boolean access$1802(android.support.v7.widget.RecyclerView$State,boolean) -> i
    int access$2100(android.support.v7.widget.RecyclerView$State) -> j
    boolean access$2202(android.support.v7.widget.RecyclerView$State,boolean) -> k
    boolean access$2300(android.support.v7.widget.RecyclerView$State) -> l
    boolean access$2402(android.support.v7.widget.RecyclerView$State,boolean) -> m
    boolean access$2502(android.support.v7.widget.RecyclerView$State,boolean) -> n
    boolean access$2302(android.support.v7.widget.RecyclerView$State,boolean) -> o
    boolean access$2500(android.support.v7.widget.RecyclerView$State) -> p
    boolean access$2702(android.support.v7.widget.RecyclerView$State,boolean) -> q
    boolean access$2700(android.support.v7.widget.RecyclerView$State) -> r
    boolean access$1800(android.support.v7.widget.RecyclerView$State) -> s
    int access$2102(android.support.v7.widget.RecyclerView$State,int) -> t
    int access$2802(android.support.v7.widget.RecyclerView$State,int) -> u
    boolean access$2400(android.support.v7.widget.RecyclerView$State) -> v
    int access$5802(android.support.v7.widget.RecyclerView$State,int) -> w
android.support.v7.app.AlertController$2 -> android.support.v7.c.aw:
    android.view.View val$top -> a
    android.view.View val$bottom -> b
    android.support.v7.app.AlertController this$0 -> c
    void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View) -> <init>
    void onScrollChange(android.support.v4.widget.NestedScrollView,int,int,int,int) -> a
android.support.v7.widget.ActivityChooserModel$DefaultSorter -> android.support.v7.widget.fb:
    java.util.Map mPackageNameToActivityMap -> a
    android.support.v7.widget.ActivityChooserModel this$0 -> b
    void <init>(android.support.v7.widget.ActivityChooserModel) -> <init>
    void sort(android.content.Intent,java.util.List,java.util.List) -> a
    void <init>(android.support.v7.widget.ActivityChooserModel,android.support.v7.widget.ActivityChooserModel$1) -> <init>
android.support.v7.appcompat.R$layout -> android.support.v7.a.g:
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_up_container -> abc_action_bar_up_container
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item_material -> abc_action_mode_close_item_material
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_alert_dialog_button_bar_material -> abc_alert_dialog_button_bar_material
    int abc_alert_dialog_material -> abc_alert_dialog_material
    int abc_dialog_title_material -> abc_dialog_title_material
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_header_item_layout -> abc_popup_menu_header_item_layout
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen_content_include -> abc_screen_content_include
    int abc_screen_simple -> abc_screen_simple
    int abc_screen_simple_overlay_action_mode -> abc_screen_simple_overlay_action_mode
    int abc_screen_toolbar -> abc_screen_toolbar
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_select_dialog_material -> abc_select_dialog_material
    int notification_media_action -> notification_media_action
    int notification_media_cancel_action -> notification_media_cancel_action
    int notification_template_big_media -> notification_template_big_media
    int notification_template_big_media_narrow -> notification_template_big_media_narrow
    int notification_template_lines -> notification_template_lines
    int notification_template_media -> notification_template_media
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    int select_dialog_item_material -> select_dialog_item_material
    int select_dialog_multichoice_material -> select_dialog_multichoice_material
    int select_dialog_singlechoice_material -> select_dialog_singlechoice_material
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
    void <init>() -> <init>
android.support.v7.app.TwilightCalculator -> android.support.v7.c.y:
    android.support.v7.app.TwilightCalculator sInstance -> a
    long sunset -> b
    long sunrise -> c
    int state -> d
    void <init>() -> <init>
    android.support.v7.app.TwilightCalculator getInstance() -> a
    void calculateTwilight(long,double,double) -> b
android.support.v7.view.menu.BaseMenuWrapper -> android.support.v7.view.menu.l:
    android.content.Context mContext -> a
    java.util.Map mMenuItems -> b
    java.util.Map mSubMenus -> c
    void <init>(android.content.Context,java.lang.Object) -> <init>
    android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> a
    android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> b
    void internalClear() -> c
    void internalRemoveGroup(int) -> d
    void internalRemoveItem(int) -> e
com.squareup.picasso.Downloader$Response -> com.squareup.a.y:
    java.io.InputStream stream -> a
    android.graphics.Bitmap bitmap -> b
    boolean cached -> c
    long contentLength -> d
    void <init>(java.io.InputStream,boolean,long) -> <init>
    java.io.InputStream getInputStream() -> a
    android.graphics.Bitmap getBitmap() -> b
    long getContentLength() -> c
android.support.v4.view.ViewPropertyAnimatorCompatKK -> android.support.v4.a.aq:
    void <init>() -> <init>
    void setUpdateListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> a
android.support.v7.widget.DialogTitle -> android.support.v7.widget.DialogTitle:
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void onMeasure(int,int) -> onMeasure
com.murrayc.galaxyzoo.app.QuestionFragment$Callbacks -> com.murrayc.galaxyzoo.app.aq:
    void onClassificationFinished() -> g
android.support.v4.view.ViewCompatLollipop$OnApplyWindowInsetsListenerBridge -> android.support.v4.a.bl:
    java.lang.Object onApplyWindowInsets(android.view.View,java.lang.Object) -> a
android.support.v7.widget.FitWindowsLinearLayout -> android.support.v7.widget.FitWindowsLinearLayout:
    android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> a
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setOnFitSystemWindowsListener(android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
android.support.v4.graphics.drawable.DrawableCompatLollipop -> android.support.v4.j.a.a:
    void <init>() -> <init>
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> a
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> b
    void setTint(android.graphics.drawable.Drawable,int) -> c
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> d
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> e
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> f
    void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> g
    boolean canApplyTheme(android.graphics.drawable.Drawable) -> h
    android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> i
    void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> j
com.murrayc.galaxyzoo.app.ZooFragment$1 -> com.murrayc.galaxyzoo.app.bu:
    com.murrayc.galaxyzoo.app.ZooFragment this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.ZooFragment,android.content.Context) -> <init>
    void onPostExecute(com.murrayc.galaxyzoo.app.LoginUtils$LoginDetails) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
android.support.v7.widget.SuggestionsAdapter -> android.support.v7.widget.cd:
    android.app.SearchManager mSearchManager -> a
    android.support.v7.widget.SearchView mSearchView -> b
    android.app.SearchableInfo mSearchable -> c
    android.content.Context mProviderContext -> d
    java.util.WeakHashMap mOutsideDrawablesCache -> e
    int mCommitIconResId -> f
    boolean mClosed -> g
    int mQueryRefinement -> h
    android.content.res.ColorStateList mUrlColor -> i
    int mText1Col -> j
    int mText2Col -> k
    int mText2UrlCol -> l
    int mIconName1Col -> m
    int mIconName2Col -> n
    int mFlagsCol -> o
    void <init>(android.content.Context,android.support.v7.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    void setQueryRefinement(int) -> a
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> b
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> c
    void changeCursor(android.database.Cursor) -> d
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> e
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> f
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> g
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> h
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> i
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> j
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> k
    java.lang.CharSequence convertToString(android.database.Cursor) -> l
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> m
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> n
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> o
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> p
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> q
    android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> r
    android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> s
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> t
    java.lang.String getStringOrNull(android.database.Cursor,int) -> u
    android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> v
    android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> w
android.support.v4.graphics.drawable.DrawableCompatJellybeanMr1 -> android.support.v4.j.a.c:
    java.lang.reflect.Method sSetLayoutDirectionMethod -> a
    boolean sSetLayoutDirectionMethodFetched -> b
    java.lang.reflect.Method sGetLayoutDirectionMethod -> c
    boolean sGetLayoutDirectionMethodFetched -> d
    void <init>() -> <init>
    boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> a
    int getLayoutDirection(android.graphics.drawable.Drawable) -> b
android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl -> android.support.v4.widget.r:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
android.support.v7.widget.LinearLayoutManager$SavedState -> android.support.v7.widget.ar:
    int mAnchorPosition -> a
    int mAnchorOffset -> b
    boolean mAnchorLayoutFromEnd -> c
    android.os.Parcelable$Creator CREATOR -> d
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.support.v7.widget.LinearLayoutManager$SavedState) -> <init>
    boolean hasValidAnchor() -> a
    void invalidateAnchor() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.design.widget.Snackbar$1 -> android.support.design.widget.l:
    void <init>() -> <init>
    boolean handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.ContactsPhotoRequestHandler -> com.squareup.a.bk:
    android.content.UriMatcher matcher -> a
    android.content.Context context -> b
    void <init>(android.content.Context) -> <init>
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> b
    java.io.InputStream getInputStream(com.squareup.picasso.Request) -> b
    void <clinit>() -> <clinit>
android.support.v7.widget.RecyclerView$ItemAnimator -> android.support.v7.widget.b:
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener -> a
    java.util.ArrayList mFinishedListeners -> b
    long mAddDuration -> c
    long mRemoveDuration -> d
    long mMoveDuration -> e
    long mChangeDuration -> f
    void <init>() -> <init>
    long getMoveDuration() -> a
    long getAddDuration() -> b
    long getRemoveDuration() -> c
    long getChangeDuration() -> d
    void setListener(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> e
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List) -> f
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder) -> g
    boolean animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> h
    boolean animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> i
    boolean animatePersistence(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> j
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> k
    int buildAdapterChangeFlagsForAnimations(android.support.v7.widget.RecyclerView$ViewHolder) -> l
    void runPendingAnimations() -> m
    void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> n
    void endAnimations() -> o
    boolean isRunning() -> p
    void dispatchAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> q
    void onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> r
    boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder) -> s
    boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List) -> t
    void dispatchAnimationsFinished() -> u
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> v
android.support.v4.app.FragmentManager -> android.support.v4.b.i:
    void <init>() -> <init>
    android.support.v4.app.FragmentTransaction beginTransaction() -> d
    android.support.v4.app.Fragment findFragmentById(int) -> ac
    boolean popBackStackImmediate() -> f
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> i
android.support.v7.widget.DefaultItemAnimator$5 -> android.support.v7.widget.he:
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> a
    android.support.v4.view.ViewPropertyAnimatorCompat val$animation -> b
    android.support.v7.widget.DefaultItemAnimator this$0 -> c
    void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v4.view.ViewPropertyAnimatorCompat) -> <init>
    void onAnimationStart(android.view.View) -> a
    void onAnimationCancel(android.view.View) -> c
    void onAnimationEnd(android.view.View) -> b
android.support.v7.widget.AppCompatSpinner$1 -> android.support.v7.widget.fe:
    android.support.v7.widget.AppCompatSpinner$DropdownPopup val$popup -> a
    android.support.v7.widget.AppCompatSpinner this$0 -> b
    void <init>(android.support.v7.widget.AppCompatSpinner,android.view.View,android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> a
    boolean onForwardingStarted() -> b
android.support.v7.widget.ActivityChooserModel -> android.support.v7.widget.aw:
    java.lang.String LOG_TAG -> a
    java.lang.Object sRegistryLock -> b
    java.util.Map sDataModelRegistry -> c
    java.lang.Object mInstanceLock -> d
    java.util.List mActivities -> e
    java.util.List mHistoricalRecords -> f
    android.content.Context mContext -> g
    java.lang.String mHistoryFileName -> h
    android.content.Intent mIntent -> i
    android.support.v7.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> j
    int mHistoryMaxSize -> k
    boolean mCanReadHistoricalData -> l
    boolean mReadShareHistoryCalled -> m
    boolean mHistoricalRecordsChanged -> n
    boolean mReloadActivities -> o
    android.support.v7.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> p
    android.support.v7.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> a
    void <init>(android.content.Context,java.lang.String) -> <init>
    void setIntent(android.content.Intent) -> b
    int getActivityCount() -> c
    android.content.pm.ResolveInfo getActivity(int) -> d
    int getActivityIndex(android.content.pm.ResolveInfo) -> e
    android.content.Intent chooseActivity(int) -> f
    android.content.pm.ResolveInfo getDefaultActivity() -> g
    void setDefaultActivity(int) -> h
    void persistHistoricalDataIfNeeded() -> i
    int getHistorySize() -> j
    void ensureConsistentState() -> k
    boolean sortActivitiesIfNeeded() -> l
    boolean loadActivitiesIfNeeded() -> m
    boolean readHistoricalDataIfNeeded() -> n
    boolean addHistoricalRecord(android.support.v7.widget.ActivityChooserModel$HistoricalRecord) -> o
    void pruneExcessiveHistoricalRecordsIfNeeded() -> p
    void readHistoricalDataImpl() -> q
    android.content.Context access$200(android.support.v7.widget.ActivityChooserModel) -> r
    java.lang.String access$300() -> s
    java.lang.String access$400(android.support.v7.widget.ActivityChooserModel) -> t
    boolean access$502(android.support.v7.widget.ActivityChooserModel,boolean) -> u
    void <clinit>() -> <clinit>
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.bb:
com.murrayc.galaxyzoo.app.SubjectExtrasFragment$2 -> com.murrayc.galaxyzoo.app.bk:
    com.murrayc.galaxyzoo.app.SubjectExtrasFragment this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.SubjectExtrasFragment) -> <init>
    void onClick(android.view.View) -> onClick
android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImpl -> android.support.design.widget.bf:
    void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.a.ar:
    void <init>() -> <init>
    boolean isCtrlPressed(android.view.KeyEvent) -> a
android.support.v7.widget.RecyclerViewAccessibilityDelegate -> android.support.v7.widget.ab:
    android.support.v7.widget.RecyclerView mRecyclerView -> a
    android.support.v4.view.AccessibilityDelegateCompat mItemDelegate -> b
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    boolean shouldIgnore() -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.AccessibilityDelegateCompat getItemDelegate() -> c
    boolean access$000(android.support.v7.widget.RecyclerViewAccessibilityDelegate) -> d
android.support.v7.widget.RecyclerView$LayoutManager$Properties -> android.support.v7.widget.ah:
    int orientation -> a
    int spanCount -> b
    boolean reverseLayout -> c
    boolean stackFromEnd -> d
    void <init>() -> <init>
android.support.v7.widget.Toolbar$SavedState -> android.support.v7.widget.ay:
    int expandedMenuItemId -> a
    boolean isOverflowOpen -> b
    android.os.Parcelable$Creator CREATOR -> c
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.a:
    java.lang.Object[] mBaseCache -> a
    int mBaseCacheSize -> b
    java.lang.Object[] mTwiceBaseCache -> c
    int mTwiceBaseCacheSize -> d
    int[] mHashes -> e
    java.lang.Object[] mArray -> f
    int mSize -> g
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> b
    void allocArrays(int) -> c
    void freeArrays(int[],java.lang.Object[],int) -> d
    void <init>() -> <init>
    void <init>(int) -> <init>
    void clear() -> clear
    void ensureCapacity(int) -> e
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfKey(java.lang.Object) -> f
    int indexOfValue(java.lang.Object) -> g
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> h
    java.lang.Object valueAt(int) -> i
    java.lang.Object setValueAt(int,java.lang.Object) -> j
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> k
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.bf:
android.support.v4.view.LayoutInflaterCompatLollipop -> android.support.v4.a.bo:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventJellyBeanImpl -> android.support.v4.a.a.z:
    void <init>() -> <init>
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.a.ac:
    void <init>() -> <init>
    long getFrameTime() -> a
    float getAlpha(android.view.View) -> y
    void setLayerType(android.view.View,int,android.graphics.Paint) -> z
    int getLayerType(android.view.View) -> aa
    int resolveSizeAndState(int,int,int) -> ab
    int getMeasuredWidthAndState(android.view.View) -> ac
    int getMeasuredState(android.view.View) -> ad
    float getTranslationX(android.view.View) -> ae
    float getTranslationY(android.view.View) -> af
    android.graphics.Matrix getMatrix(android.view.View) -> ag
    void setTranslationX(android.view.View,float) -> ah
    void setTranslationY(android.view.View,float) -> ai
    void setAlpha(android.view.View,float) -> aj
    void jumpDrawablesToCurrentState(android.view.View) -> ak
    void setSaveFromParentEnabled(android.view.View,boolean) -> al
    void setActivated(android.view.View,boolean) -> am
    int combineMeasuredStates(int,int) -> an
    void offsetLeftAndRight(android.view.View,int) -> b
    void offsetTopAndBottom(android.view.View,int) -> c
android.support.v4.app.BaseFragmentActivityHoneycomb -> android.support.v4.b.t:
    void <init>() -> <init>
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.design.widget.Snackbar$7 -> android.support.design.widget.h:
    android.support.design.widget.Snackbar this$0 -> a
    void <init>(android.support.design.widget.Snackbar) -> <init>
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v4.widget.CompoundButtonCompatGingerbread -> android.support.v4.widget.i:
    java.lang.reflect.Field sButtonDrawableField -> a
    boolean sButtonDrawableFieldFetched -> b
    void <init>() -> <init>
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> a
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> b
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> c
android.support.design.widget.BottomSheetBehavior -> android.support.design.widget.BottomSheetBehavior:
    float mMaximumVelocity -> a
    int mPeekHeight -> b
    boolean mPeekHeightAuto -> c
    int mPeekHeightMin -> d
    int mMinOffset -> e
    int mMaxOffset -> f
    boolean mHideable -> g
    boolean mSkipCollapsed -> h
    int mState -> i
    android.support.v4.widget.ViewDragHelper mViewDragHelper -> j
    boolean mIgnoreEvents -> k
    int mLastNestedScrollDy -> l
    boolean mNestedScrolled -> m
    int mParentHeight -> n
    java.lang.ref.WeakReference mViewRef -> o
    java.lang.ref.WeakReference mNestedScrollingChildRef -> p
    android.support.design.widget.BottomSheetBehavior$BottomSheetCallback mCallback -> q
    android.view.VelocityTracker mVelocityTracker -> r
    int mActivePointerId -> s
    int mInitialY -> t
    boolean mTouchingScrollingChild -> u
    android.support.v4.widget.ViewDragHelper$Callback mDragCallback -> v
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View) -> a
    void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> b
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> k
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> c
    boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> e
    boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> c
    void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> d
    void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> e
    boolean onNestedPreFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> f
    void setPeekHeight(int) -> g
    void setHideable(boolean) -> h
    void setSkipCollapsed(boolean) -> i
    void setStateInternal(int) -> j
    void reset() -> k
    boolean shouldHide(android.view.View,float) -> l
    android.view.View findScrollingChild(android.view.View) -> m
    float getYVelocity() -> n
    void dispatchOnSlide(int) -> o
    int access$100(android.support.design.widget.BottomSheetBehavior) -> p
    boolean access$200(android.support.design.widget.BottomSheetBehavior) -> q
    int access$300(android.support.design.widget.BottomSheetBehavior) -> r
    java.lang.ref.WeakReference access$400(android.support.design.widget.BottomSheetBehavior) -> s
    java.lang.ref.WeakReference access$500(android.support.design.widget.BottomSheetBehavior) -> t
    void access$600(android.support.design.widget.BottomSheetBehavior,int) -> u
    void access$700(android.support.design.widget.BottomSheetBehavior,int) -> v
    int access$800(android.support.design.widget.BottomSheetBehavior) -> w
    boolean access$900(android.support.design.widget.BottomSheetBehavior) -> x
    boolean access$1000(android.support.design.widget.BottomSheetBehavior,android.view.View,float) -> y
    int access$1100(android.support.design.widget.BottomSheetBehavior) -> z
    int access$1200(android.support.design.widget.BottomSheetBehavior) -> aa
    android.support.v4.widget.ViewDragHelper access$1300(android.support.design.widget.BottomSheetBehavior) -> ab
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.a.dc:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> b
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> e
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> f
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> g
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> h
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> i
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> b
com.murrayc.galaxyzoo.app.ClassifyActivity$2 -> com.murrayc.galaxyzoo.app.bw:
    com.murrayc.galaxyzoo.app.ClassifyActivity this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.ClassifyActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.view.ActionMode -> android.support.v7.view.a:
    java.lang.Object mTag -> a
    boolean mTitleOptionalHint -> b
    void <init>() -> <init>
    void setTag(java.lang.Object) -> a
    java.lang.Object getTag() -> f
    void setTitle(java.lang.CharSequence) -> h
    void setTitle(int) -> i
    void setSubtitle(java.lang.CharSequence) -> g
    void setSubtitle(int) -> j
    void setTitleOptionalHint(boolean) -> m
    boolean getTitleOptionalHint() -> g
    boolean isTitleOptional() -> n
    void setCustomView(android.view.View) -> f
    void invalidate() -> d
    void finish() -> c
    android.view.Menu getMenu() -> b
    java.lang.CharSequence getTitle() -> k
    java.lang.CharSequence getSubtitle() -> l
    android.view.View getCustomView() -> o
    android.view.MenuInflater getMenuInflater() -> a
android.support.v4.widget.TextViewCompatJbMr1 -> android.support.v4.widget.d:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
android.support.v4.view.animation.FastOutSlowInInterpolator -> android.support.v4.a.b.b:
    float[] VALUES -> a
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
    void <clinit>() -> <clinit>
android.support.design.widget.BottomSheetBehavior$SettleRunnable -> android.support.design.widget.w:
    android.view.View mView -> a
    int mTargetState -> b
    android.support.design.widget.BottomSheetBehavior this$0 -> c
    void <init>(android.support.design.widget.BottomSheetBehavior,android.view.View,int) -> <init>
    void run() -> run
com.murrayc.galaxyzoo.app.provider.client.ZooniverseClient$RequestMoreItemsException -> com.murrayc.galaxyzoo.app.provider.a.h:
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Exception) -> <init>
android.support.graphics.drawable.VectorDrawableCompat -> android.support.a.a.s:
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> a
    android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState mVectorState -> b
    android.graphics.PorterDuffColorFilter mTintFilter -> c
    android.graphics.ColorFilter mColorFilter -> d
    boolean mMutated -> e
    boolean mAllowCaching -> f
    android.graphics.drawable.Drawable$ConstantState mCachedConstantStateDelegate -> g
    float[] mTmpFloats -> h
    android.graphics.Matrix mTmpMatrix -> i
    android.graphics.Rect mTmpBounds -> j
    void <init>() -> <init>
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    android.graphics.drawable.Drawable mutate() -> mutate
    java.lang.Object getTargetByName(java.lang.String) -> a
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void draw(android.graphics.Canvas) -> draw
    int getAlpha() -> getAlpha
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> b
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean isStateful() -> isStateful
    boolean onStateChange(int[]) -> onStateChange
    int getOpacity() -> getOpacity
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    boolean canApplyTheme() -> canApplyTheme
    android.support.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> c
    android.support.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> d
    int applyAlpha(int,float) -> e
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> f
    void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> g
    void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> h
    void setAllowCaching(boolean) -> i
    boolean needMirroring() -> j
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    int getChangingConfigurations() -> getChangingConfigurations
    void invalidateSelf() -> invalidateSelf
    void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    boolean setVisible(boolean,boolean) -> setVisible
    void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    boolean setState(int[]) -> setState
    void setChangingConfigurations(int) -> setChangingConfigurations
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int[] getState() -> getState
    boolean getPadding(android.graphics.Rect) -> getPadding
    int getMinimumHeight() -> getMinimumHeight
    int getMinimumWidth() -> getMinimumWidth
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    void clearColorFilter() -> clearColorFilter
    int getLayoutDirection() -> getLayoutDirection
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    boolean isAutoMirrored() -> isAutoMirrored
    void setAutoMirrored(boolean) -> setAutoMirrored
    void jumpToCurrentState() -> jumpToCurrentState
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    void setHotspot(float,float) -> setHotspot
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$1) -> <init>
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState,android.support.graphics.drawable.VectorDrawableCompat$1) -> <init>
    int access$900(int,float) -> k
    void <clinit>() -> <clinit>
com.squareup.picasso.Request$Builder -> com.squareup.a.t:
    android.net.Uri uri -> a
    int resourceId -> b
    java.lang.String stableKey -> c
    int targetWidth -> d
    int targetHeight -> e
    boolean centerCrop -> f
    boolean centerInside -> g
    boolean onlyScaleDown -> h
    float rotationDegrees -> i
    float rotationPivotX -> j
    float rotationPivotY -> k
    boolean hasRotationPivot -> l
    java.util.List transformations -> m
    android.graphics.Bitmap$Config config -> n
    com.squareup.picasso.Picasso$Priority priority -> o
    void <init>(android.net.Uri,int,android.graphics.Bitmap$Config) -> <init>
    boolean hasImage() -> a
    boolean hasSize() -> b
    com.squareup.picasso.Request$Builder resize(int,int) -> c
    com.squareup.picasso.Request build() -> d
android.support.v7.widget.RecyclerView$SavedState$1 -> android.support.v7.widget.hi:
    void <init>() -> <init>
    android.support.v7.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    android.support.v7.widget.RecyclerView$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> b
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v7.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> android.support.v7.view.menu.ao:
    android.view.CollapsibleActionView mWrappedView -> a
    void <init>(android.view.View) -> <init>
    void onActionViewExpanded() -> u
    void onActionViewCollapsed() -> t
    android.view.View getWrappedView() -> a
com.android.volley.VolleyLog -> com.android.a.s:
    java.lang.String TAG -> a
    boolean DEBUG -> b
    void <init>() -> <init>
    void v(java.lang.String,java.lang.Object[]) -> a
    void d(java.lang.String,java.lang.Object[]) -> b
    void e(java.lang.String,java.lang.Object[]) -> c
    void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> d
    java.lang.String buildMessage(java.lang.String,java.lang.Object[]) -> e
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentManagerImpl -> android.support.v4.b.c:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentHostCallback mHost -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    java.lang.reflect.Field sAnimationListenerField -> r
    boolean mNeedMenuInvalidate -> s
    boolean mStateSaved -> t
    boolean mDestroyed -> u
    java.lang.String mNoTransactionsBecause -> v
    boolean mHavePendingDeferredStart -> w
    android.os.Bundle mStateBundle -> x
    android.util.SparseArray mStateArray -> y
    java.lang.Runnable mExecCommit -> z
    android.view.animation.Interpolator DECELERATE_QUINT -> aa
    android.view.animation.Interpolator DECELERATE_CUBIC -> ab
    android.view.animation.Interpolator ACCELERATE_QUINT -> ac
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ad
    void <init>() -> <init>
    boolean modifiesAlpha(android.view.animation.Animation) -> a
    boolean shouldRunOnHWLayer(android.view.View,android.view.animation.Animation) -> b
    void throwException(java.lang.RuntimeException) -> c
    android.support.v4.app.FragmentTransaction beginTransaction() -> d
    boolean executePendingTransactions() -> e
    boolean popBackStackImmediate() -> f
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> g
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> i
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> j
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> k
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> l
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> m
    void setHWLayerAnimListenerIfAlpha(android.view.View,android.view.animation.Animation) -> n
    boolean isStateAtLeast(int) -> o
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> p
    void moveToState(android.support.v4.app.Fragment) -> q
    void moveToState(int,boolean) -> r
    void moveToState(int,int,int,boolean) -> s
    void startPendingDeferredFragments() -> t
    void makeActive(android.support.v4.app.Fragment) -> u
    void makeInactive(android.support.v4.app.Fragment) -> v
    void addFragment(android.support.v4.app.Fragment,boolean) -> w
    void removeFragment(android.support.v4.app.Fragment,int,int) -> x
    void hideFragment(android.support.v4.app.Fragment,int,int) -> y
    void showFragment(android.support.v4.app.Fragment,int,int) -> z
    void detachFragment(android.support.v4.app.Fragment,int,int) -> aa
    void attachFragment(android.support.v4.app.Fragment,int,int) -> ab
    android.support.v4.app.Fragment findFragmentById(int) -> ac
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> ad
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> ae
    void checkStateLoss() -> af
    void enqueueAction(java.lang.Runnable,boolean) -> ag
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> ah
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> ai
    void freeBackStackIndex(int) -> aj
    boolean execPendingActions() -> ak
    void doPendingDeferredStart() -> al
    void reportBackStackChanged() -> am
    void addBackStackState(android.support.v4.app.BackStackRecord) -> an
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> ao
    android.support.v4.app.FragmentManagerNonConfig retainNonConfig() -> ap
    void saveFragmentViewState(android.support.v4.app.Fragment) -> aq
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> ar
    android.os.Parcelable saveAllState() -> as
    void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig) -> at
    void attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> au
    void noteStateNotSaved() -> av
    void dispatchCreate() -> aw
    void dispatchActivityCreated() -> ax
    void dispatchStart() -> ay
    void dispatchResume() -> az
    void dispatchPause() -> ba
    void dispatchStop() -> bb
    void dispatchReallyStop() -> bc
    void dispatchDestroyView() -> bd
    void dispatchDestroy() -> be
    void dispatchMultiWindowModeChanged(boolean) -> bf
    void dispatchPictureInPictureModeChanged(boolean) -> bg
    void dispatchConfigurationChanged(android.content.res.Configuration) -> bh
    void dispatchLowMemory() -> bi
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> bj
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> bk
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> bl
    boolean dispatchContextItemSelected(android.view.MenuItem) -> bm
    void dispatchOptionsMenuClosed(android.view.Menu) -> bn
    int reverseTransit(int) -> bo
    int transitToStyleIndex(int,boolean) -> bp
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> z
    android.support.v4.view.LayoutInflaterFactory getLayoutInflaterFactory() -> bq
    void <clinit>() -> <clinit>
android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> android.support.v7.view.menu.ag:
    android.view.ActionProvider mInner -> a
    android.support.v7.view.menu.MenuItemWrapperICS this$0 -> b
    void <init>(android.support.v7.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    android.view.View onCreateActionView() -> a
    boolean onPerformDefaultAction() -> e
    boolean hasSubMenu() -> b
    void onPrepareSubMenu(android.view.SubMenu) -> c
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.b.bo:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void <init>(android.support.v4.app.LoaderManagerImpl,int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> <init>
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    boolean cancel() -> f
    void destroy() -> g
    void onLoadCanceled(android.support.v4.content.Loader) -> h
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> i
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> j
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> k
android.support.v7.appcompat.R$style -> android.support.v7.a.i:
    int AlertDialog_AppCompat -> AlertDialog_AppCompat
    int AlertDialog_AppCompat_Light -> AlertDialog_AppCompat_Light
    int Animation_AppCompat_Dialog -> Animation_AppCompat_Dialog
    int Animation_AppCompat_DropDownUp -> Animation_AppCompat_DropDownUp
    int Base_AlertDialog_AppCompat -> Base_AlertDialog_AppCompat
    int Base_AlertDialog_AppCompat_Light -> Base_AlertDialog_AppCompat_Light
    int Base_Animation_AppCompat_Dialog -> Base_Animation_AppCompat_Dialog
    int Base_Animation_AppCompat_DropDownUp -> Base_Animation_AppCompat_DropDownUp
    int Base_DialogWindowTitleBackground_AppCompat -> Base_DialogWindowTitleBackground_AppCompat
    int Base_DialogWindowTitle_AppCompat -> Base_DialogWindowTitle_AppCompat
    int Base_TextAppearance_AppCompat -> Base_TextAppearance_AppCompat
    int Base_TextAppearance_AppCompat_Body1 -> Base_TextAppearance_AppCompat_Body1
    int Base_TextAppearance_AppCompat_Body2 -> Base_TextAppearance_AppCompat_Body2
    int Base_TextAppearance_AppCompat_Button -> Base_TextAppearance_AppCompat_Button
    int Base_TextAppearance_AppCompat_Caption -> Base_TextAppearance_AppCompat_Caption
    int Base_TextAppearance_AppCompat_Display1 -> Base_TextAppearance_AppCompat_Display1
    int Base_TextAppearance_AppCompat_Display2 -> Base_TextAppearance_AppCompat_Display2
    int Base_TextAppearance_AppCompat_Display3 -> Base_TextAppearance_AppCompat_Display3
    int Base_TextAppearance_AppCompat_Display4 -> Base_TextAppearance_AppCompat_Display4
    int Base_TextAppearance_AppCompat_Headline -> Base_TextAppearance_AppCompat_Headline
    int Base_TextAppearance_AppCompat_Inverse -> Base_TextAppearance_AppCompat_Inverse
    int Base_TextAppearance_AppCompat_Large -> Base_TextAppearance_AppCompat_Large
    int Base_TextAppearance_AppCompat_Large_Inverse -> Base_TextAppearance_AppCompat_Large_Inverse
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Medium -> Base_TextAppearance_AppCompat_Medium
    int Base_TextAppearance_AppCompat_Medium_Inverse -> Base_TextAppearance_AppCompat_Medium_Inverse
    int Base_TextAppearance_AppCompat_Menu -> Base_TextAppearance_AppCompat_Menu
    int Base_TextAppearance_AppCompat_SearchResult -> Base_TextAppearance_AppCompat_SearchResult
    int Base_TextAppearance_AppCompat_SearchResult_Subtitle -> Base_TextAppearance_AppCompat_SearchResult_Subtitle
    int Base_TextAppearance_AppCompat_SearchResult_Title -> Base_TextAppearance_AppCompat_SearchResult_Title
    int Base_TextAppearance_AppCompat_Small -> Base_TextAppearance_AppCompat_Small
    int Base_TextAppearance_AppCompat_Small_Inverse -> Base_TextAppearance_AppCompat_Small_Inverse
    int Base_TextAppearance_AppCompat_Subhead -> Base_TextAppearance_AppCompat_Subhead
    int Base_TextAppearance_AppCompat_Subhead_Inverse -> Base_TextAppearance_AppCompat_Subhead_Inverse
    int Base_TextAppearance_AppCompat_Title -> Base_TextAppearance_AppCompat_Title
    int Base_TextAppearance_AppCompat_Title_Inverse -> Base_TextAppearance_AppCompat_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu -> Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Title -> Base_TextAppearance_AppCompat_Widget_ActionMode_Title
    int Base_TextAppearance_AppCompat_Widget_Button -> Base_TextAppearance_AppCompat_Widget_Button
    int Base_TextAppearance_AppCompat_Widget_Button_Inverse -> Base_TextAppearance_AppCompat_Widget_Button_Inverse
    int Base_TextAppearance_AppCompat_Widget_DropDownItem -> Base_TextAppearance_AppCompat_Widget_DropDownItem
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Widget_Switch -> Base_TextAppearance_AppCompat_Widget_Switch
    int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Title -> Base_TextAppearance_Widget_AppCompat_Toolbar_Title
    int Base_ThemeOverlay_AppCompat -> Base_ThemeOverlay_AppCompat
    int Base_ThemeOverlay_AppCompat_ActionBar -> Base_ThemeOverlay_AppCompat_ActionBar
    int Base_ThemeOverlay_AppCompat_Dark -> Base_ThemeOverlay_AppCompat_Dark
    int Base_ThemeOverlay_AppCompat_Dark_ActionBar -> Base_ThemeOverlay_AppCompat_Dark_ActionBar
    int Base_ThemeOverlay_AppCompat_Dialog -> Base_ThemeOverlay_AppCompat_Dialog
    int Base_ThemeOverlay_AppCompat_Dialog_Alert -> Base_ThemeOverlay_AppCompat_Dialog_Alert
    int Base_ThemeOverlay_AppCompat_Light -> Base_ThemeOverlay_AppCompat_Light
    int Base_Theme_AppCompat -> Base_Theme_AppCompat
    int Base_Theme_AppCompat_CompactMenu -> Base_Theme_AppCompat_CompactMenu
    int Base_Theme_AppCompat_Dialog -> Base_Theme_AppCompat_Dialog
    int Base_Theme_AppCompat_DialogWhenLarge -> Base_Theme_AppCompat_DialogWhenLarge
    int Base_Theme_AppCompat_Dialog_Alert -> Base_Theme_AppCompat_Dialog_Alert
    int Base_Theme_AppCompat_Dialog_FixedSize -> Base_Theme_AppCompat_Dialog_FixedSize
    int Base_Theme_AppCompat_Dialog_MinWidth -> Base_Theme_AppCompat_Dialog_MinWidth
    int Base_Theme_AppCompat_Light -> Base_Theme_AppCompat_Light
    int Base_Theme_AppCompat_Light_DarkActionBar -> Base_Theme_AppCompat_Light_DarkActionBar
    int Base_Theme_AppCompat_Light_Dialog -> Base_Theme_AppCompat_Light_Dialog
    int Base_Theme_AppCompat_Light_DialogWhenLarge -> Base_Theme_AppCompat_Light_DialogWhenLarge
    int Base_Theme_AppCompat_Light_Dialog_Alert -> Base_Theme_AppCompat_Light_Dialog_Alert
    int Base_Theme_AppCompat_Light_Dialog_FixedSize -> Base_Theme_AppCompat_Light_Dialog_FixedSize
    int Base_Theme_AppCompat_Light_Dialog_MinWidth -> Base_Theme_AppCompat_Light_Dialog_MinWidth
    int Base_V11_ThemeOverlay_AppCompat_Dialog -> Base_V11_ThemeOverlay_AppCompat_Dialog
    int Base_V11_Theme_AppCompat_Dialog -> Base_V11_Theme_AppCompat_Dialog
    int Base_V11_Theme_AppCompat_Light_Dialog -> Base_V11_Theme_AppCompat_Light_Dialog
    int Base_V12_Widget_AppCompat_AutoCompleteTextView -> Base_V12_Widget_AppCompat_AutoCompleteTextView
    int Base_V12_Widget_AppCompat_EditText -> Base_V12_Widget_AppCompat_EditText
    int Base_V21_ThemeOverlay_AppCompat_Dialog -> Base_V21_ThemeOverlay_AppCompat_Dialog
    int Base_V21_Theme_AppCompat -> Base_V21_Theme_AppCompat
    int Base_V21_Theme_AppCompat_Dialog -> Base_V21_Theme_AppCompat_Dialog
    int Base_V21_Theme_AppCompat_Light -> Base_V21_Theme_AppCompat_Light
    int Base_V21_Theme_AppCompat_Light_Dialog -> Base_V21_Theme_AppCompat_Light_Dialog
    int Base_V22_Theme_AppCompat -> Base_V22_Theme_AppCompat
    int Base_V22_Theme_AppCompat_Light -> Base_V22_Theme_AppCompat_Light
    int Base_V23_Theme_AppCompat -> Base_V23_Theme_AppCompat
    int Base_V23_Theme_AppCompat_Light -> Base_V23_Theme_AppCompat_Light
    int Base_V7_ThemeOverlay_AppCompat_Dialog -> Base_V7_ThemeOverlay_AppCompat_Dialog
    int Base_V7_Theme_AppCompat -> Base_V7_Theme_AppCompat
    int Base_V7_Theme_AppCompat_Dialog -> Base_V7_Theme_AppCompat_Dialog
    int Base_V7_Theme_AppCompat_Light -> Base_V7_Theme_AppCompat_Light
    int Base_V7_Theme_AppCompat_Light_Dialog -> Base_V7_Theme_AppCompat_Light_Dialog
    int Base_V7_Widget_AppCompat_AutoCompleteTextView -> Base_V7_Widget_AppCompat_AutoCompleteTextView
    int Base_V7_Widget_AppCompat_EditText -> Base_V7_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_ActionBar -> Base_Widget_AppCompat_ActionBar
    int Base_Widget_AppCompat_ActionBar_Solid -> Base_Widget_AppCompat_ActionBar_Solid
    int Base_Widget_AppCompat_ActionBar_TabBar -> Base_Widget_AppCompat_ActionBar_TabBar
    int Base_Widget_AppCompat_ActionBar_TabText -> Base_Widget_AppCompat_ActionBar_TabText
    int Base_Widget_AppCompat_ActionBar_TabView -> Base_Widget_AppCompat_ActionBar_TabView
    int Base_Widget_AppCompat_ActionButton -> Base_Widget_AppCompat_ActionButton
    int Base_Widget_AppCompat_ActionButton_CloseMode -> Base_Widget_AppCompat_ActionButton_CloseMode
    int Base_Widget_AppCompat_ActionButton_Overflow -> Base_Widget_AppCompat_ActionButton_Overflow
    int Base_Widget_AppCompat_ActionMode -> Base_Widget_AppCompat_ActionMode
    int Base_Widget_AppCompat_ActivityChooserView -> Base_Widget_AppCompat_ActivityChooserView
    int Base_Widget_AppCompat_AutoCompleteTextView -> Base_Widget_AppCompat_AutoCompleteTextView
    int Base_Widget_AppCompat_Button -> Base_Widget_AppCompat_Button
    int Base_Widget_AppCompat_ButtonBar -> Base_Widget_AppCompat_ButtonBar
    int Base_Widget_AppCompat_ButtonBar_AlertDialog -> Base_Widget_AppCompat_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Borderless -> Base_Widget_AppCompat_Button_Borderless
    int Base_Widget_AppCompat_Button_Borderless_Colored -> Base_Widget_AppCompat_Button_Borderless_Colored
    int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog -> Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Colored -> Base_Widget_AppCompat_Button_Colored
    int Base_Widget_AppCompat_Button_Small -> Base_Widget_AppCompat_Button_Small
    int Base_Widget_AppCompat_CompoundButton_CheckBox -> Base_Widget_AppCompat_CompoundButton_CheckBox
    int Base_Widget_AppCompat_CompoundButton_RadioButton -> Base_Widget_AppCompat_CompoundButton_RadioButton
    int Base_Widget_AppCompat_CompoundButton_Switch -> Base_Widget_AppCompat_CompoundButton_Switch
    int Base_Widget_AppCompat_DrawerArrowToggle -> Base_Widget_AppCompat_DrawerArrowToggle
    int Base_Widget_AppCompat_DrawerArrowToggle_Common -> Base_Widget_AppCompat_DrawerArrowToggle_Common
    int Base_Widget_AppCompat_DropDownItem_Spinner -> Base_Widget_AppCompat_DropDownItem_Spinner
    int Base_Widget_AppCompat_EditText -> Base_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_ImageButton -> Base_Widget_AppCompat_ImageButton
    int Base_Widget_AppCompat_Light_ActionBar -> Base_Widget_AppCompat_Light_ActionBar
    int Base_Widget_AppCompat_Light_ActionBar_Solid -> Base_Widget_AppCompat_Light_ActionBar_Solid
    int Base_Widget_AppCompat_Light_ActionBar_TabBar -> Base_Widget_AppCompat_Light_ActionBar_TabBar
    int Base_Widget_AppCompat_Light_ActionBar_TabText -> Base_Widget_AppCompat_Light_ActionBar_TabText
    int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Base_Widget_AppCompat_Light_ActionBar_TabView -> Base_Widget_AppCompat_Light_ActionBar_TabView
    int Base_Widget_AppCompat_Light_PopupMenu -> Base_Widget_AppCompat_Light_PopupMenu
    int Base_Widget_AppCompat_Light_PopupMenu_Overflow -> Base_Widget_AppCompat_Light_PopupMenu_Overflow
    int Base_Widget_AppCompat_ListMenuView -> Base_Widget_AppCompat_ListMenuView
    int Base_Widget_AppCompat_ListPopupWindow -> Base_Widget_AppCompat_ListPopupWindow
    int Base_Widget_AppCompat_ListView -> Base_Widget_AppCompat_ListView
    int Base_Widget_AppCompat_ListView_DropDown -> Base_Widget_AppCompat_ListView_DropDown
    int Base_Widget_AppCompat_ListView_Menu -> Base_Widget_AppCompat_ListView_Menu
    int Base_Widget_AppCompat_PopupMenu -> Base_Widget_AppCompat_PopupMenu
    int Base_Widget_AppCompat_PopupMenu_Overflow -> Base_Widget_AppCompat_PopupMenu_Overflow
    int Base_Widget_AppCompat_PopupWindow -> Base_Widget_AppCompat_PopupWindow
    int Base_Widget_AppCompat_ProgressBar -> Base_Widget_AppCompat_ProgressBar
    int Base_Widget_AppCompat_ProgressBar_Horizontal -> Base_Widget_AppCompat_ProgressBar_Horizontal
    int Base_Widget_AppCompat_RatingBar -> Base_Widget_AppCompat_RatingBar
    int Base_Widget_AppCompat_RatingBar_Indicator -> Base_Widget_AppCompat_RatingBar_Indicator
    int Base_Widget_AppCompat_RatingBar_Small -> Base_Widget_AppCompat_RatingBar_Small
    int Base_Widget_AppCompat_SearchView -> Base_Widget_AppCompat_SearchView
    int Base_Widget_AppCompat_SearchView_ActionBar -> Base_Widget_AppCompat_SearchView_ActionBar
    int Base_Widget_AppCompat_SeekBar -> Base_Widget_AppCompat_SeekBar
    int Base_Widget_AppCompat_SeekBar_Discrete -> Base_Widget_AppCompat_SeekBar_Discrete
    int Base_Widget_AppCompat_Spinner -> Base_Widget_AppCompat_Spinner
    int Base_Widget_AppCompat_Spinner_Underlined -> Base_Widget_AppCompat_Spinner_Underlined
    int Base_Widget_AppCompat_TextView_SpinnerItem -> Base_Widget_AppCompat_TextView_SpinnerItem
    int Base_Widget_AppCompat_Toolbar -> Base_Widget_AppCompat_Toolbar
    int Base_Widget_AppCompat_Toolbar_Button_Navigation -> Base_Widget_AppCompat_Toolbar_Button_Navigation
    int Platform_AppCompat -> Platform_AppCompat
    int Platform_AppCompat_Light -> Platform_AppCompat_Light
    int Platform_ThemeOverlay_AppCompat -> Platform_ThemeOverlay_AppCompat
    int Platform_ThemeOverlay_AppCompat_Dark -> Platform_ThemeOverlay_AppCompat_Dark
    int Platform_ThemeOverlay_AppCompat_Light -> Platform_ThemeOverlay_AppCompat_Light
    int Platform_V11_AppCompat -> Platform_V11_AppCompat
    int Platform_V11_AppCompat_Light -> Platform_V11_AppCompat_Light
    int Platform_V14_AppCompat -> Platform_V14_AppCompat
    int Platform_V14_AppCompat_Light -> Platform_V14_AppCompat_Light
    int Platform_Widget_AppCompat_Spinner -> Platform_Widget_AppCompat_Spinner
    int RtlOverlay_DialogWindowTitle_AppCompat -> RtlOverlay_DialogWindowTitle_AppCompat
    int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem -> RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
    int RtlOverlay_Widget_AppCompat_DialogTitle_Icon -> RtlOverlay_Widget_AppCompat_DialogTitle_Icon
    int RtlOverlay_Widget_AppCompat_PopupMenuItem -> RtlOverlay_Widget_AppCompat_PopupMenuItem
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup -> RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text -> RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
    int RtlOverlay_Widget_AppCompat_SearchView_MagIcon -> RtlOverlay_Widget_AppCompat_SearchView_MagIcon
    int RtlOverlay_Widget_AppCompat_Search_DropDown -> RtlOverlay_Widget_AppCompat_Search_DropDown
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Query -> RtlOverlay_Widget_AppCompat_Search_DropDown_Query
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Text -> RtlOverlay_Widget_AppCompat_Search_DropDown_Text
    int RtlUnderlay_Widget_AppCompat_ActionButton -> RtlUnderlay_Widget_AppCompat_ActionButton
    int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow -> RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
    int TextAppearance_AppCompat -> TextAppearance_AppCompat
    int TextAppearance_AppCompat_Body1 -> TextAppearance_AppCompat_Body1
    int TextAppearance_AppCompat_Body2 -> TextAppearance_AppCompat_Body2
    int TextAppearance_AppCompat_Button -> TextAppearance_AppCompat_Button
    int TextAppearance_AppCompat_Caption -> TextAppearance_AppCompat_Caption
    int TextAppearance_AppCompat_Display1 -> TextAppearance_AppCompat_Display1
    int TextAppearance_AppCompat_Display2 -> TextAppearance_AppCompat_Display2
    int TextAppearance_AppCompat_Display3 -> TextAppearance_AppCompat_Display3
    int TextAppearance_AppCompat_Display4 -> TextAppearance_AppCompat_Display4
    int TextAppearance_AppCompat_Headline -> TextAppearance_AppCompat_Headline
    int TextAppearance_AppCompat_Inverse -> TextAppearance_AppCompat_Inverse
    int TextAppearance_AppCompat_Large -> TextAppearance_AppCompat_Large
    int TextAppearance_AppCompat_Large_Inverse -> TextAppearance_AppCompat_Large_Inverse
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Medium -> TextAppearance_AppCompat_Medium
    int TextAppearance_AppCompat_Medium_Inverse -> TextAppearance_AppCompat_Medium_Inverse
    int TextAppearance_AppCompat_Menu -> TextAppearance_AppCompat_Menu
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Small -> TextAppearance_AppCompat_Small
    int TextAppearance_AppCompat_Small_Inverse -> TextAppearance_AppCompat_Small_Inverse
    int TextAppearance_AppCompat_Subhead -> TextAppearance_AppCompat_Subhead
    int TextAppearance_AppCompat_Subhead_Inverse -> TextAppearance_AppCompat_Subhead_Inverse
    int TextAppearance_AppCompat_Title -> TextAppearance_AppCompat_Title
    int TextAppearance_AppCompat_Title_Inverse -> TextAppearance_AppCompat_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Button -> TextAppearance_AppCompat_Widget_Button
    int TextAppearance_AppCompat_Widget_Button_Inverse -> TextAppearance_AppCompat_Widget_Button_Inverse
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Header -> TextAppearance_AppCompat_Widget_PopupMenu_Header
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Widget_Switch -> TextAppearance_AppCompat_Widget_Switch
    int TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int TextAppearance_StatusBar_EventContent -> TextAppearance_StatusBar_EventContent
    int TextAppearance_StatusBar_EventContent_Info -> TextAppearance_StatusBar_EventContent_Info
    int TextAppearance_StatusBar_EventContent_Line2 -> TextAppearance_StatusBar_EventContent_Line2
    int TextAppearance_StatusBar_EventContent_Time -> TextAppearance_StatusBar_EventContent_Time
    int TextAppearance_StatusBar_EventContent_Title -> TextAppearance_StatusBar_EventContent_Title
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int TextAppearance_Widget_AppCompat_Toolbar_Title -> TextAppearance_Widget_AppCompat_Toolbar_Title
    int ThemeOverlay_AppCompat -> ThemeOverlay_AppCompat
    int ThemeOverlay_AppCompat_ActionBar -> ThemeOverlay_AppCompat_ActionBar
    int ThemeOverlay_AppCompat_Dark -> ThemeOverlay_AppCompat_Dark
    int ThemeOverlay_AppCompat_Dark_ActionBar -> ThemeOverlay_AppCompat_Dark_ActionBar
    int ThemeOverlay_AppCompat_Dialog -> ThemeOverlay_AppCompat_Dialog
    int ThemeOverlay_AppCompat_Dialog_Alert -> ThemeOverlay_AppCompat_Dialog_Alert
    int ThemeOverlay_AppCompat_Light -> ThemeOverlay_AppCompat_Light
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_DayNight -> Theme_AppCompat_DayNight
    int Theme_AppCompat_DayNight_DarkActionBar -> Theme_AppCompat_DayNight_DarkActionBar
    int Theme_AppCompat_DayNight_Dialog -> Theme_AppCompat_DayNight_Dialog
    int Theme_AppCompat_DayNight_DialogWhenLarge -> Theme_AppCompat_DayNight_DialogWhenLarge
    int Theme_AppCompat_DayNight_Dialog_Alert -> Theme_AppCompat_DayNight_Dialog_Alert
    int Theme_AppCompat_DayNight_Dialog_MinWidth -> Theme_AppCompat_DayNight_Dialog_MinWidth
    int Theme_AppCompat_DayNight_NoActionBar -> Theme_AppCompat_DayNight_NoActionBar
    int Theme_AppCompat_Dialog -> Theme_AppCompat_Dialog
    int Theme_AppCompat_DialogWhenLarge -> Theme_AppCompat_DialogWhenLarge
    int Theme_AppCompat_Dialog_Alert -> Theme_AppCompat_Dialog_Alert
    int Theme_AppCompat_Dialog_MinWidth -> Theme_AppCompat_Dialog_MinWidth
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_AppCompat_Light_Dialog -> Theme_AppCompat_Light_Dialog
    int Theme_AppCompat_Light_DialogWhenLarge -> Theme_AppCompat_Light_DialogWhenLarge
    int Theme_AppCompat_Light_Dialog_Alert -> Theme_AppCompat_Light_Dialog_Alert
    int Theme_AppCompat_Light_Dialog_MinWidth -> Theme_AppCompat_Light_Dialog_MinWidth
    int Theme_AppCompat_Light_NoActionBar -> Theme_AppCompat_Light_NoActionBar
    int Theme_AppCompat_NoActionBar -> Theme_AppCompat_NoActionBar
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Button -> Widget_AppCompat_Button
    int Widget_AppCompat_ButtonBar -> Widget_AppCompat_ButtonBar
    int Widget_AppCompat_ButtonBar_AlertDialog -> Widget_AppCompat_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Borderless -> Widget_AppCompat_Button_Borderless
    int Widget_AppCompat_Button_Borderless_Colored -> Widget_AppCompat_Button_Borderless_Colored
    int Widget_AppCompat_Button_ButtonBar_AlertDialog -> Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Colored -> Widget_AppCompat_Button_Colored
    int Widget_AppCompat_Button_Small -> Widget_AppCompat_Button_Small
    int Widget_AppCompat_CompoundButton_CheckBox -> Widget_AppCompat_CompoundButton_CheckBox
    int Widget_AppCompat_CompoundButton_RadioButton -> Widget_AppCompat_CompoundButton_RadioButton
    int Widget_AppCompat_CompoundButton_Switch -> Widget_AppCompat_CompoundButton_Switch
    int Widget_AppCompat_DrawerArrowToggle -> Widget_AppCompat_DrawerArrowToggle
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_EditText -> Widget_AppCompat_EditText
    int Widget_AppCompat_ImageButton -> Widget_AppCompat_ImageButton
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListPopupWindow -> Widget_AppCompat_Light_ListPopupWindow
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_PopupMenu_Overflow -> Widget_AppCompat_Light_PopupMenu_Overflow
    int Widget_AppCompat_Light_SearchView -> Widget_AppCompat_Light_SearchView
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListMenuView -> Widget_AppCompat_ListMenuView
    int Widget_AppCompat_ListPopupWindow -> Widget_AppCompat_ListPopupWindow
    int Widget_AppCompat_ListView -> Widget_AppCompat_ListView
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_PopupMenu_Overflow -> Widget_AppCompat_PopupMenu_Overflow
    int Widget_AppCompat_PopupWindow -> Widget_AppCompat_PopupWindow
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_RatingBar -> Widget_AppCompat_RatingBar
    int Widget_AppCompat_RatingBar_Indicator -> Widget_AppCompat_RatingBar_Indicator
    int Widget_AppCompat_RatingBar_Small -> Widget_AppCompat_RatingBar_Small
    int Widget_AppCompat_SearchView -> Widget_AppCompat_SearchView
    int Widget_AppCompat_SearchView_ActionBar -> Widget_AppCompat_SearchView_ActionBar
    int Widget_AppCompat_SeekBar -> Widget_AppCompat_SeekBar
    int Widget_AppCompat_SeekBar_Discrete -> Widget_AppCompat_SeekBar_Discrete
    int Widget_AppCompat_Spinner -> Widget_AppCompat_Spinner
    int Widget_AppCompat_Spinner_DropDown -> Widget_AppCompat_Spinner_DropDown
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
    int Widget_AppCompat_Spinner_Underlined -> Widget_AppCompat_Spinner_Underlined
    int Widget_AppCompat_TextView_SpinnerItem -> Widget_AppCompat_TextView_SpinnerItem
    int Widget_AppCompat_Toolbar -> Widget_AppCompat_Toolbar
    int Widget_AppCompat_Toolbar_Button_Navigation -> Widget_AppCompat_Toolbar_Button_Navigation
    void <init>() -> <init>
android.support.v7.widget.SearchView$UpdatableTouchDelegate -> android.support.v7.widget.fv:
    android.view.View mDelegateView -> a
    android.graphics.Rect mTargetBounds -> b
    android.graphics.Rect mActualBounds -> c
    android.graphics.Rect mSlopBounds -> d
    int mSlop -> e
    boolean mDelegateTargeted -> f
    void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    void setBounds(android.graphics.Rect,android.graphics.Rect) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.squareup.picasso.Dispatcher$DispatcherThread -> com.squareup.a.bh:
    void <init>() -> <init>
android.support.v4.widget.PopupWindowCompatKitKat -> android.support.v4.widget.p:
    void <init>() -> <init>
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
android.support.v4.app.BaseFragmentActivityGingerbread -> android.support.v4.b.u:
    boolean mStartedIntentSenderFromFragment -> a
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    void checkForValidRequestCode(int) -> a
android.support.v7.app.AlertController$AlertParams$3 -> android.support.v7.c.bf:
    android.support.v7.app.AlertController val$dialog -> a
    android.support.v7.app.AlertController$AlertParams this$0 -> b
    void <init>(android.support.v7.app.AlertController$AlertParams,android.support.v7.app.AlertController) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.design.R$style -> android.support.design.h:
    int AlertDialog_AppCompat -> AlertDialog_AppCompat
    int AlertDialog_AppCompat_Light -> AlertDialog_AppCompat_Light
    int Animation_AppCompat_Dialog -> Animation_AppCompat_Dialog
    int Animation_AppCompat_DropDownUp -> Animation_AppCompat_DropDownUp
    int Animation_Design_BottomSheetDialog -> Animation_Design_BottomSheetDialog
    int Base_AlertDialog_AppCompat -> Base_AlertDialog_AppCompat
    int Base_AlertDialog_AppCompat_Light -> Base_AlertDialog_AppCompat_Light
    int Base_Animation_AppCompat_Dialog -> Base_Animation_AppCompat_Dialog
    int Base_Animation_AppCompat_DropDownUp -> Base_Animation_AppCompat_DropDownUp
    int Base_DialogWindowTitleBackground_AppCompat -> Base_DialogWindowTitleBackground_AppCompat
    int Base_DialogWindowTitle_AppCompat -> Base_DialogWindowTitle_AppCompat
    int Base_TextAppearance_AppCompat -> Base_TextAppearance_AppCompat
    int Base_TextAppearance_AppCompat_Body1 -> Base_TextAppearance_AppCompat_Body1
    int Base_TextAppearance_AppCompat_Body2 -> Base_TextAppearance_AppCompat_Body2
    int Base_TextAppearance_AppCompat_Button -> Base_TextAppearance_AppCompat_Button
    int Base_TextAppearance_AppCompat_Caption -> Base_TextAppearance_AppCompat_Caption
    int Base_TextAppearance_AppCompat_Display1 -> Base_TextAppearance_AppCompat_Display1
    int Base_TextAppearance_AppCompat_Display2 -> Base_TextAppearance_AppCompat_Display2
    int Base_TextAppearance_AppCompat_Display3 -> Base_TextAppearance_AppCompat_Display3
    int Base_TextAppearance_AppCompat_Display4 -> Base_TextAppearance_AppCompat_Display4
    int Base_TextAppearance_AppCompat_Headline -> Base_TextAppearance_AppCompat_Headline
    int Base_TextAppearance_AppCompat_Inverse -> Base_TextAppearance_AppCompat_Inverse
    int Base_TextAppearance_AppCompat_Large -> Base_TextAppearance_AppCompat_Large
    int Base_TextAppearance_AppCompat_Large_Inverse -> Base_TextAppearance_AppCompat_Large_Inverse
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Medium -> Base_TextAppearance_AppCompat_Medium
    int Base_TextAppearance_AppCompat_Medium_Inverse -> Base_TextAppearance_AppCompat_Medium_Inverse
    int Base_TextAppearance_AppCompat_Menu -> Base_TextAppearance_AppCompat_Menu
    int Base_TextAppearance_AppCompat_SearchResult -> Base_TextAppearance_AppCompat_SearchResult
    int Base_TextAppearance_AppCompat_SearchResult_Subtitle -> Base_TextAppearance_AppCompat_SearchResult_Subtitle
    int Base_TextAppearance_AppCompat_SearchResult_Title -> Base_TextAppearance_AppCompat_SearchResult_Title
    int Base_TextAppearance_AppCompat_Small -> Base_TextAppearance_AppCompat_Small
    int Base_TextAppearance_AppCompat_Small_Inverse -> Base_TextAppearance_AppCompat_Small_Inverse
    int Base_TextAppearance_AppCompat_Subhead -> Base_TextAppearance_AppCompat_Subhead
    int Base_TextAppearance_AppCompat_Subhead_Inverse -> Base_TextAppearance_AppCompat_Subhead_Inverse
    int Base_TextAppearance_AppCompat_Title -> Base_TextAppearance_AppCompat_Title
    int Base_TextAppearance_AppCompat_Title_Inverse -> Base_TextAppearance_AppCompat_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu -> Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Title -> Base_TextAppearance_AppCompat_Widget_ActionMode_Title
    int Base_TextAppearance_AppCompat_Widget_Button -> Base_TextAppearance_AppCompat_Widget_Button
    int Base_TextAppearance_AppCompat_Widget_Button_Inverse -> Base_TextAppearance_AppCompat_Widget_Button_Inverse
    int Base_TextAppearance_AppCompat_Widget_DropDownItem -> Base_TextAppearance_AppCompat_Widget_DropDownItem
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Widget_Switch -> Base_TextAppearance_AppCompat_Widget_Switch
    int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Title -> Base_TextAppearance_Widget_AppCompat_Toolbar_Title
    int Base_ThemeOverlay_AppCompat -> Base_ThemeOverlay_AppCompat
    int Base_ThemeOverlay_AppCompat_ActionBar -> Base_ThemeOverlay_AppCompat_ActionBar
    int Base_ThemeOverlay_AppCompat_Dark -> Base_ThemeOverlay_AppCompat_Dark
    int Base_ThemeOverlay_AppCompat_Dark_ActionBar -> Base_ThemeOverlay_AppCompat_Dark_ActionBar
    int Base_ThemeOverlay_AppCompat_Dialog -> Base_ThemeOverlay_AppCompat_Dialog
    int Base_ThemeOverlay_AppCompat_Dialog_Alert -> Base_ThemeOverlay_AppCompat_Dialog_Alert
    int Base_ThemeOverlay_AppCompat_Light -> Base_ThemeOverlay_AppCompat_Light
    int Base_Theme_AppCompat -> Base_Theme_AppCompat
    int Base_Theme_AppCompat_CompactMenu -> Base_Theme_AppCompat_CompactMenu
    int Base_Theme_AppCompat_Dialog -> Base_Theme_AppCompat_Dialog
    int Base_Theme_AppCompat_DialogWhenLarge -> Base_Theme_AppCompat_DialogWhenLarge
    int Base_Theme_AppCompat_Dialog_Alert -> Base_Theme_AppCompat_Dialog_Alert
    int Base_Theme_AppCompat_Dialog_FixedSize -> Base_Theme_AppCompat_Dialog_FixedSize
    int Base_Theme_AppCompat_Dialog_MinWidth -> Base_Theme_AppCompat_Dialog_MinWidth
    int Base_Theme_AppCompat_Light -> Base_Theme_AppCompat_Light
    int Base_Theme_AppCompat_Light_DarkActionBar -> Base_Theme_AppCompat_Light_DarkActionBar
    int Base_Theme_AppCompat_Light_Dialog -> Base_Theme_AppCompat_Light_Dialog
    int Base_Theme_AppCompat_Light_DialogWhenLarge -> Base_Theme_AppCompat_Light_DialogWhenLarge
    int Base_Theme_AppCompat_Light_Dialog_Alert -> Base_Theme_AppCompat_Light_Dialog_Alert
    int Base_Theme_AppCompat_Light_Dialog_FixedSize -> Base_Theme_AppCompat_Light_Dialog_FixedSize
    int Base_Theme_AppCompat_Light_Dialog_MinWidth -> Base_Theme_AppCompat_Light_Dialog_MinWidth
    int Base_V11_ThemeOverlay_AppCompat_Dialog -> Base_V11_ThemeOverlay_AppCompat_Dialog
    int Base_V11_Theme_AppCompat_Dialog -> Base_V11_Theme_AppCompat_Dialog
    int Base_V11_Theme_AppCompat_Light_Dialog -> Base_V11_Theme_AppCompat_Light_Dialog
    int Base_V12_Widget_AppCompat_AutoCompleteTextView -> Base_V12_Widget_AppCompat_AutoCompleteTextView
    int Base_V12_Widget_AppCompat_EditText -> Base_V12_Widget_AppCompat_EditText
    int Base_V21_ThemeOverlay_AppCompat_Dialog -> Base_V21_ThemeOverlay_AppCompat_Dialog
    int Base_V21_Theme_AppCompat -> Base_V21_Theme_AppCompat
    int Base_V21_Theme_AppCompat_Dialog -> Base_V21_Theme_AppCompat_Dialog
    int Base_V21_Theme_AppCompat_Light -> Base_V21_Theme_AppCompat_Light
    int Base_V21_Theme_AppCompat_Light_Dialog -> Base_V21_Theme_AppCompat_Light_Dialog
    int Base_V22_Theme_AppCompat -> Base_V22_Theme_AppCompat
    int Base_V22_Theme_AppCompat_Light -> Base_V22_Theme_AppCompat_Light
    int Base_V23_Theme_AppCompat -> Base_V23_Theme_AppCompat
    int Base_V23_Theme_AppCompat_Light -> Base_V23_Theme_AppCompat_Light
    int Base_V7_ThemeOverlay_AppCompat_Dialog -> Base_V7_ThemeOverlay_AppCompat_Dialog
    int Base_V7_Theme_AppCompat -> Base_V7_Theme_AppCompat
    int Base_V7_Theme_AppCompat_Dialog -> Base_V7_Theme_AppCompat_Dialog
    int Base_V7_Theme_AppCompat_Light -> Base_V7_Theme_AppCompat_Light
    int Base_V7_Theme_AppCompat_Light_Dialog -> Base_V7_Theme_AppCompat_Light_Dialog
    int Base_V7_Widget_AppCompat_AutoCompleteTextView -> Base_V7_Widget_AppCompat_AutoCompleteTextView
    int Base_V7_Widget_AppCompat_EditText -> Base_V7_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_ActionBar -> Base_Widget_AppCompat_ActionBar
    int Base_Widget_AppCompat_ActionBar_Solid -> Base_Widget_AppCompat_ActionBar_Solid
    int Base_Widget_AppCompat_ActionBar_TabBar -> Base_Widget_AppCompat_ActionBar_TabBar
    int Base_Widget_AppCompat_ActionBar_TabText -> Base_Widget_AppCompat_ActionBar_TabText
    int Base_Widget_AppCompat_ActionBar_TabView -> Base_Widget_AppCompat_ActionBar_TabView
    int Base_Widget_AppCompat_ActionButton -> Base_Widget_AppCompat_ActionButton
    int Base_Widget_AppCompat_ActionButton_CloseMode -> Base_Widget_AppCompat_ActionButton_CloseMode
    int Base_Widget_AppCompat_ActionButton_Overflow -> Base_Widget_AppCompat_ActionButton_Overflow
    int Base_Widget_AppCompat_ActionMode -> Base_Widget_AppCompat_ActionMode
    int Base_Widget_AppCompat_ActivityChooserView -> Base_Widget_AppCompat_ActivityChooserView
    int Base_Widget_AppCompat_AutoCompleteTextView -> Base_Widget_AppCompat_AutoCompleteTextView
    int Base_Widget_AppCompat_Button -> Base_Widget_AppCompat_Button
    int Base_Widget_AppCompat_ButtonBar -> Base_Widget_AppCompat_ButtonBar
    int Base_Widget_AppCompat_ButtonBar_AlertDialog -> Base_Widget_AppCompat_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Borderless -> Base_Widget_AppCompat_Button_Borderless
    int Base_Widget_AppCompat_Button_Borderless_Colored -> Base_Widget_AppCompat_Button_Borderless_Colored
    int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog -> Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Colored -> Base_Widget_AppCompat_Button_Colored
    int Base_Widget_AppCompat_Button_Small -> Base_Widget_AppCompat_Button_Small
    int Base_Widget_AppCompat_CompoundButton_CheckBox -> Base_Widget_AppCompat_CompoundButton_CheckBox
    int Base_Widget_AppCompat_CompoundButton_RadioButton -> Base_Widget_AppCompat_CompoundButton_RadioButton
    int Base_Widget_AppCompat_CompoundButton_Switch -> Base_Widget_AppCompat_CompoundButton_Switch
    int Base_Widget_AppCompat_DrawerArrowToggle -> Base_Widget_AppCompat_DrawerArrowToggle
    int Base_Widget_AppCompat_DrawerArrowToggle_Common -> Base_Widget_AppCompat_DrawerArrowToggle_Common
    int Base_Widget_AppCompat_DropDownItem_Spinner -> Base_Widget_AppCompat_DropDownItem_Spinner
    int Base_Widget_AppCompat_EditText -> Base_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_ImageButton -> Base_Widget_AppCompat_ImageButton
    int Base_Widget_AppCompat_Light_ActionBar -> Base_Widget_AppCompat_Light_ActionBar
    int Base_Widget_AppCompat_Light_ActionBar_Solid -> Base_Widget_AppCompat_Light_ActionBar_Solid
    int Base_Widget_AppCompat_Light_ActionBar_TabBar -> Base_Widget_AppCompat_Light_ActionBar_TabBar
    int Base_Widget_AppCompat_Light_ActionBar_TabText -> Base_Widget_AppCompat_Light_ActionBar_TabText
    int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Base_Widget_AppCompat_Light_ActionBar_TabView -> Base_Widget_AppCompat_Light_ActionBar_TabView
    int Base_Widget_AppCompat_Light_PopupMenu -> Base_Widget_AppCompat_Light_PopupMenu
    int Base_Widget_AppCompat_Light_PopupMenu_Overflow -> Base_Widget_AppCompat_Light_PopupMenu_Overflow
    int Base_Widget_AppCompat_ListMenuView -> Base_Widget_AppCompat_ListMenuView
    int Base_Widget_AppCompat_ListPopupWindow -> Base_Widget_AppCompat_ListPopupWindow
    int Base_Widget_AppCompat_ListView -> Base_Widget_AppCompat_ListView
    int Base_Widget_AppCompat_ListView_DropDown -> Base_Widget_AppCompat_ListView_DropDown
    int Base_Widget_AppCompat_ListView_Menu -> Base_Widget_AppCompat_ListView_Menu
    int Base_Widget_AppCompat_PopupMenu -> Base_Widget_AppCompat_PopupMenu
    int Base_Widget_AppCompat_PopupMenu_Overflow -> Base_Widget_AppCompat_PopupMenu_Overflow
    int Base_Widget_AppCompat_PopupWindow -> Base_Widget_AppCompat_PopupWindow
    int Base_Widget_AppCompat_ProgressBar -> Base_Widget_AppCompat_ProgressBar
    int Base_Widget_AppCompat_ProgressBar_Horizontal -> Base_Widget_AppCompat_ProgressBar_Horizontal
    int Base_Widget_AppCompat_RatingBar -> Base_Widget_AppCompat_RatingBar
    int Base_Widget_AppCompat_RatingBar_Indicator -> Base_Widget_AppCompat_RatingBar_Indicator
    int Base_Widget_AppCompat_RatingBar_Small -> Base_Widget_AppCompat_RatingBar_Small
    int Base_Widget_AppCompat_SearchView -> Base_Widget_AppCompat_SearchView
    int Base_Widget_AppCompat_SearchView_ActionBar -> Base_Widget_AppCompat_SearchView_ActionBar
    int Base_Widget_AppCompat_SeekBar -> Base_Widget_AppCompat_SeekBar
    int Base_Widget_AppCompat_SeekBar_Discrete -> Base_Widget_AppCompat_SeekBar_Discrete
    int Base_Widget_AppCompat_Spinner -> Base_Widget_AppCompat_Spinner
    int Base_Widget_AppCompat_Spinner_Underlined -> Base_Widget_AppCompat_Spinner_Underlined
    int Base_Widget_AppCompat_TextView_SpinnerItem -> Base_Widget_AppCompat_TextView_SpinnerItem
    int Base_Widget_AppCompat_Toolbar -> Base_Widget_AppCompat_Toolbar
    int Base_Widget_AppCompat_Toolbar_Button_Navigation -> Base_Widget_AppCompat_Toolbar_Button_Navigation
    int Base_Widget_Design_AppBarLayout -> Base_Widget_Design_AppBarLayout
    int Base_Widget_Design_TabLayout -> Base_Widget_Design_TabLayout
    int Platform_AppCompat -> Platform_AppCompat
    int Platform_AppCompat_Light -> Platform_AppCompat_Light
    int Platform_ThemeOverlay_AppCompat -> Platform_ThemeOverlay_AppCompat
    int Platform_ThemeOverlay_AppCompat_Dark -> Platform_ThemeOverlay_AppCompat_Dark
    int Platform_ThemeOverlay_AppCompat_Light -> Platform_ThemeOverlay_AppCompat_Light
    int Platform_V11_AppCompat -> Platform_V11_AppCompat
    int Platform_V11_AppCompat_Light -> Platform_V11_AppCompat_Light
    int Platform_V14_AppCompat -> Platform_V14_AppCompat
    int Platform_V14_AppCompat_Light -> Platform_V14_AppCompat_Light
    int Platform_Widget_AppCompat_Spinner -> Platform_Widget_AppCompat_Spinner
    int RtlOverlay_DialogWindowTitle_AppCompat -> RtlOverlay_DialogWindowTitle_AppCompat
    int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem -> RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
    int RtlOverlay_Widget_AppCompat_DialogTitle_Icon -> RtlOverlay_Widget_AppCompat_DialogTitle_Icon
    int RtlOverlay_Widget_AppCompat_PopupMenuItem -> RtlOverlay_Widget_AppCompat_PopupMenuItem
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup -> RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text -> RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
    int RtlOverlay_Widget_AppCompat_SearchView_MagIcon -> RtlOverlay_Widget_AppCompat_SearchView_MagIcon
    int RtlOverlay_Widget_AppCompat_Search_DropDown -> RtlOverlay_Widget_AppCompat_Search_DropDown
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Query -> RtlOverlay_Widget_AppCompat_Search_DropDown_Query
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Text -> RtlOverlay_Widget_AppCompat_Search_DropDown_Text
    int RtlUnderlay_Widget_AppCompat_ActionButton -> RtlUnderlay_Widget_AppCompat_ActionButton
    int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow -> RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
    int TextAppearance_AppCompat -> TextAppearance_AppCompat
    int TextAppearance_AppCompat_Body1 -> TextAppearance_AppCompat_Body1
    int TextAppearance_AppCompat_Body2 -> TextAppearance_AppCompat_Body2
    int TextAppearance_AppCompat_Button -> TextAppearance_AppCompat_Button
    int TextAppearance_AppCompat_Caption -> TextAppearance_AppCompat_Caption
    int TextAppearance_AppCompat_Display1 -> TextAppearance_AppCompat_Display1
    int TextAppearance_AppCompat_Display2 -> TextAppearance_AppCompat_Display2
    int TextAppearance_AppCompat_Display3 -> TextAppearance_AppCompat_Display3
    int TextAppearance_AppCompat_Display4 -> TextAppearance_AppCompat_Display4
    int TextAppearance_AppCompat_Headline -> TextAppearance_AppCompat_Headline
    int TextAppearance_AppCompat_Inverse -> TextAppearance_AppCompat_Inverse
    int TextAppearance_AppCompat_Large -> TextAppearance_AppCompat_Large
    int TextAppearance_AppCompat_Large_Inverse -> TextAppearance_AppCompat_Large_Inverse
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Medium -> TextAppearance_AppCompat_Medium
    int TextAppearance_AppCompat_Medium_Inverse -> TextAppearance_AppCompat_Medium_Inverse
    int TextAppearance_AppCompat_Menu -> TextAppearance_AppCompat_Menu
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Small -> TextAppearance_AppCompat_Small
    int TextAppearance_AppCompat_Small_Inverse -> TextAppearance_AppCompat_Small_Inverse
    int TextAppearance_AppCompat_Subhead -> TextAppearance_AppCompat_Subhead
    int TextAppearance_AppCompat_Subhead_Inverse -> TextAppearance_AppCompat_Subhead_Inverse
    int TextAppearance_AppCompat_Title -> TextAppearance_AppCompat_Title
    int TextAppearance_AppCompat_Title_Inverse -> TextAppearance_AppCompat_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Button -> TextAppearance_AppCompat_Widget_Button
    int TextAppearance_AppCompat_Widget_Button_Inverse -> TextAppearance_AppCompat_Widget_Button_Inverse
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Header -> TextAppearance_AppCompat_Widget_PopupMenu_Header
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Widget_Switch -> TextAppearance_AppCompat_Widget_Switch
    int TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int TextAppearance_Design_CollapsingToolbar_Expanded -> TextAppearance_Design_CollapsingToolbar_Expanded
    int TextAppearance_Design_Counter -> TextAppearance_Design_Counter
    int TextAppearance_Design_Counter_Overflow -> TextAppearance_Design_Counter_Overflow
    int TextAppearance_Design_Error -> TextAppearance_Design_Error
    int TextAppearance_Design_Hint -> TextAppearance_Design_Hint
    int TextAppearance_Design_Snackbar_Message -> TextAppearance_Design_Snackbar_Message
    int TextAppearance_Design_Tab -> TextAppearance_Design_Tab
    int TextAppearance_StatusBar_EventContent -> TextAppearance_StatusBar_EventContent
    int TextAppearance_StatusBar_EventContent_Info -> TextAppearance_StatusBar_EventContent_Info
    int TextAppearance_StatusBar_EventContent_Line2 -> TextAppearance_StatusBar_EventContent_Line2
    int TextAppearance_StatusBar_EventContent_Time -> TextAppearance_StatusBar_EventContent_Time
    int TextAppearance_StatusBar_EventContent_Title -> TextAppearance_StatusBar_EventContent_Title
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int TextAppearance_Widget_AppCompat_Toolbar_Title -> TextAppearance_Widget_AppCompat_Toolbar_Title
    int ThemeOverlay_AppCompat -> ThemeOverlay_AppCompat
    int ThemeOverlay_AppCompat_ActionBar -> ThemeOverlay_AppCompat_ActionBar
    int ThemeOverlay_AppCompat_Dark -> ThemeOverlay_AppCompat_Dark
    int ThemeOverlay_AppCompat_Dark_ActionBar -> ThemeOverlay_AppCompat_Dark_ActionBar
    int ThemeOverlay_AppCompat_Dialog -> ThemeOverlay_AppCompat_Dialog
    int ThemeOverlay_AppCompat_Dialog_Alert -> ThemeOverlay_AppCompat_Dialog_Alert
    int ThemeOverlay_AppCompat_Light -> ThemeOverlay_AppCompat_Light
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_DayNight -> Theme_AppCompat_DayNight
    int Theme_AppCompat_DayNight_DarkActionBar -> Theme_AppCompat_DayNight_DarkActionBar
    int Theme_AppCompat_DayNight_Dialog -> Theme_AppCompat_DayNight_Dialog
    int Theme_AppCompat_DayNight_DialogWhenLarge -> Theme_AppCompat_DayNight_DialogWhenLarge
    int Theme_AppCompat_DayNight_Dialog_Alert -> Theme_AppCompat_DayNight_Dialog_Alert
    int Theme_AppCompat_DayNight_Dialog_MinWidth -> Theme_AppCompat_DayNight_Dialog_MinWidth
    int Theme_AppCompat_DayNight_NoActionBar -> Theme_AppCompat_DayNight_NoActionBar
    int Theme_AppCompat_Dialog -> Theme_AppCompat_Dialog
    int Theme_AppCompat_DialogWhenLarge -> Theme_AppCompat_DialogWhenLarge
    int Theme_AppCompat_Dialog_Alert -> Theme_AppCompat_Dialog_Alert
    int Theme_AppCompat_Dialog_MinWidth -> Theme_AppCompat_Dialog_MinWidth
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_AppCompat_Light_Dialog -> Theme_AppCompat_Light_Dialog
    int Theme_AppCompat_Light_DialogWhenLarge -> Theme_AppCompat_Light_DialogWhenLarge
    int Theme_AppCompat_Light_Dialog_Alert -> Theme_AppCompat_Light_Dialog_Alert
    int Theme_AppCompat_Light_Dialog_MinWidth -> Theme_AppCompat_Light_Dialog_MinWidth
    int Theme_AppCompat_Light_NoActionBar -> Theme_AppCompat_Light_NoActionBar
    int Theme_AppCompat_NoActionBar -> Theme_AppCompat_NoActionBar
    int Theme_Design -> Theme_Design
    int Theme_Design_BottomSheetDialog -> Theme_Design_BottomSheetDialog
    int Theme_Design_Light -> Theme_Design_Light
    int Theme_Design_Light_BottomSheetDialog -> Theme_Design_Light_BottomSheetDialog
    int Theme_Design_Light_NoActionBar -> Theme_Design_Light_NoActionBar
    int Theme_Design_NoActionBar -> Theme_Design_NoActionBar
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Button -> Widget_AppCompat_Button
    int Widget_AppCompat_ButtonBar -> Widget_AppCompat_ButtonBar
    int Widget_AppCompat_ButtonBar_AlertDialog -> Widget_AppCompat_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Borderless -> Widget_AppCompat_Button_Borderless
    int Widget_AppCompat_Button_Borderless_Colored -> Widget_AppCompat_Button_Borderless_Colored
    int Widget_AppCompat_Button_ButtonBar_AlertDialog -> Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Colored -> Widget_AppCompat_Button_Colored
    int Widget_AppCompat_Button_Small -> Widget_AppCompat_Button_Small
    int Widget_AppCompat_CompoundButton_CheckBox -> Widget_AppCompat_CompoundButton_CheckBox
    int Widget_AppCompat_CompoundButton_RadioButton -> Widget_AppCompat_CompoundButton_RadioButton
    int Widget_AppCompat_CompoundButton_Switch -> Widget_AppCompat_CompoundButton_Switch
    int Widget_AppCompat_DrawerArrowToggle -> Widget_AppCompat_DrawerArrowToggle
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_EditText -> Widget_AppCompat_EditText
    int Widget_AppCompat_ImageButton -> Widget_AppCompat_ImageButton
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListPopupWindow -> Widget_AppCompat_Light_ListPopupWindow
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_PopupMenu_Overflow -> Widget_AppCompat_Light_PopupMenu_Overflow
    int Widget_AppCompat_Light_SearchView -> Widget_AppCompat_Light_SearchView
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListMenuView -> Widget_AppCompat_ListMenuView
    int Widget_AppCompat_ListPopupWindow -> Widget_AppCompat_ListPopupWindow
    int Widget_AppCompat_ListView -> Widget_AppCompat_ListView
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_PopupMenu_Overflow -> Widget_AppCompat_PopupMenu_Overflow
    int Widget_AppCompat_PopupWindow -> Widget_AppCompat_PopupWindow
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_RatingBar -> Widget_AppCompat_RatingBar
    int Widget_AppCompat_RatingBar_Indicator -> Widget_AppCompat_RatingBar_Indicator
    int Widget_AppCompat_RatingBar_Small -> Widget_AppCompat_RatingBar_Small
    int Widget_AppCompat_SearchView -> Widget_AppCompat_SearchView
    int Widget_AppCompat_SearchView_ActionBar -> Widget_AppCompat_SearchView_ActionBar
    int Widget_AppCompat_SeekBar -> Widget_AppCompat_SeekBar
    int Widget_AppCompat_SeekBar_Discrete -> Widget_AppCompat_SeekBar_Discrete
    int Widget_AppCompat_Spinner -> Widget_AppCompat_Spinner
    int Widget_AppCompat_Spinner_DropDown -> Widget_AppCompat_Spinner_DropDown
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
    int Widget_AppCompat_Spinner_Underlined -> Widget_AppCompat_Spinner_Underlined
    int Widget_AppCompat_TextView_SpinnerItem -> Widget_AppCompat_TextView_SpinnerItem
    int Widget_AppCompat_Toolbar -> Widget_AppCompat_Toolbar
    int Widget_AppCompat_Toolbar_Button_Navigation -> Widget_AppCompat_Toolbar_Button_Navigation
    int Widget_Design_AppBarLayout -> Widget_Design_AppBarLayout
    int Widget_Design_BottomSheet_Modal -> Widget_Design_BottomSheet_Modal
    int Widget_Design_CollapsingToolbar -> Widget_Design_CollapsingToolbar
    int Widget_Design_CoordinatorLayout -> Widget_Design_CoordinatorLayout
    int Widget_Design_FloatingActionButton -> Widget_Design_FloatingActionButton
    int Widget_Design_NavigationView -> Widget_Design_NavigationView
    int Widget_Design_ScrimInsetsFrameLayout -> Widget_Design_ScrimInsetsFrameLayout
    int Widget_Design_Snackbar -> Widget_Design_Snackbar
    int Widget_Design_TabLayout -> Widget_Design_TabLayout
    int Widget_Design_TextInputLayout -> Widget_Design_TextInputLayout
    void <init>() -> <init>
com.murrayc.galaxyzoo.app.ItemFragment -> com.murrayc.galaxyzoo.app.l:
    com.murrayc.galaxyzoo.app.ItemFragment$Callbacks mCallbacks -> a
    java.lang.String mItemId -> b
    com.murrayc.galaxyzoo.app.Singleton mSingleton -> c
    java.lang.String mZooniverseId -> d
    com.murrayc.galaxyzoo.app.ItemFragment$Callbacks sDummyCallbacks -> e
    void <init>() -> <init>
    void initializeSingleton() -> a
    void createCommonOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    void onSingletonInitialized() -> g
    java.lang.String getItemId() -> c
    void setItemId(java.lang.String) -> d
    void onAttach(android.content.Context) -> b
    void onDetach() -> d
    void abandonItem() -> e
    com.murrayc.galaxyzoo.app.Singleton getSingleton() -> f
    java.lang.String getZooniverseId() -> j
    void onCreate(android.os.Bundle) -> c
    boolean onOptionsItemSelected(android.view.MenuItem) -> g
    void onSaveInstanceState(android.os.Bundle) -> k
    void setZooniverseId(java.lang.String) -> l
    void <clinit>() -> <clinit>
com.android.volley.RetryPolicy -> com.android.a.f:
    int getCurrentTimeout() -> a
    int getCurrentRetryCount() -> b
    void retry(com.android.volley.VolleyError) -> c
android.support.v7.app.ToolbarActionBar$2 -> android.support.v7.c.bo:
    android.support.v7.app.ToolbarActionBar this$0 -> a
    void <init>(android.support.v7.app.ToolbarActionBar) -> <init>
    boolean onMenuItemClick(android.view.MenuItem) -> a
android.support.v7.widget.ActionMenuPresenter -> android.support.v7.widget.be:
    android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton -> a
    android.graphics.drawable.Drawable mPendingOverflowIcon -> b
    boolean mPendingOverflowIconSet -> c
    boolean mReserveOverflow -> d
    boolean mReserveOverflowSet -> e
    int mWidthLimit -> f
    int mActionItemWidthLimit -> g
    int mMaxItems -> h
    boolean mMaxItemsSet -> i
    boolean mStrictWidthLimit -> j
    boolean mWidthLimitSet -> k
    boolean mExpandedActionViewsExclusive -> l
    int mMinCellSize -> m
    android.util.SparseBooleanArray mActionButtonGroups -> n
    android.view.View mScrapActionButtonView -> o
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup -> p
    android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> q
    android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> r
    android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback -> s
    android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> t
    int mOpenSubMenuId -> u
    void <init>(android.content.Context) -> <init>
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setReserveOverflow(boolean) -> c
    void setExpandedActionViewsExclusive(boolean) -> d
    void setOverflowIcon(android.graphics.drawable.Drawable) -> e
    android.graphics.drawable.Drawable getOverflowIcon() -> g
    android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> h
    android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> i
    void bindItemView(android.support.v7.view.menu.MenuItemImpl,android.support.v7.view.menu.MenuView$ItemView) -> j
    boolean shouldIncludeItem(int,android.support.v7.view.menu.MenuItemImpl) -> k
    void updateMenuView(boolean) -> b
    boolean filterLeftoverView(android.view.ViewGroup,int) -> l
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> d
    android.view.View findViewForItem(android.view.MenuItem) -> m
    boolean showOverflowMenu() -> n
    boolean hideOverflowMenu() -> o
    boolean dismissPopupMenus() -> p
    boolean hideSubMenus() -> q
    boolean isOverflowMenuShowing() -> r
    boolean isOverflowMenuShowPending() -> s
    boolean flagActionItems() -> f
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> e
    void onSubUiVisibilityChanged(boolean) -> t
    void setMenuView(android.support.v7.widget.ActionMenuView) -> u
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup access$200(android.support.v7.widget.ActionMenuPresenter) -> v
    android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable access$300(android.support.v7.widget.ActionMenuPresenter) -> w
    android.support.v7.view.menu.MenuBuilder access$400(android.support.v7.widget.ActionMenuPresenter) -> x
    android.support.v7.view.menu.MenuBuilder access$500(android.support.v7.widget.ActionMenuPresenter) -> y
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup access$202(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OverflowPopup) -> z
    android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton access$600(android.support.v7.widget.ActionMenuPresenter) -> aa
    android.support.v7.view.menu.MenuView access$700(android.support.v7.widget.ActionMenuPresenter) -> ab
    android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu access$802(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu) -> ac
    android.support.v7.view.menu.MenuBuilder access$900(android.support.v7.widget.ActionMenuPresenter) -> ad
    android.support.v7.view.menu.MenuBuilder access$1000(android.support.v7.widget.ActionMenuPresenter) -> ae
    android.support.v7.view.menu.MenuView access$1100(android.support.v7.widget.ActionMenuPresenter) -> af
    android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable access$302(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable) -> ag
    android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu access$800(android.support.v7.widget.ActionMenuPresenter) -> ah
com.murrayc.galaxyzoo.app.GalaxyZooApplication$PicassoListener -> com.murrayc.galaxyzoo.app.n:
    void <init>() -> <init>
    void onImageLoadFailed(com.squareup.picasso.Picasso,android.net.Uri,java.lang.Exception) -> a
    void <init>(com.murrayc.galaxyzoo.app.GalaxyZooApplication$PicassoListener) -> <init>
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.a.a.c:
    void <init>() -> <init>
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.a.ci:
    void <init>() -> <init>
    float getAxisValue(android.view.MotionEvent,int) -> a
android.support.v7.widget.RecyclerView$ItemDecoration -> android.support.v7.widget.p:
    void <init>() -> <init>
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> a
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView) -> b
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> c
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView) -> d
    void getItemOffsets(android.graphics.Rect,int,android.support.v7.widget.RecyclerView) -> e
    void getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> f
com.murrayc.galaxyzoo.app.provider.client.ZooniverseClient$Subject -> com.murrayc.galaxyzoo.app.provider.a.e:
    java.lang.String mGroupId -> a
    java.lang.String mLocationInverted -> b
    java.lang.String mLocationStandard -> c
    java.lang.String mLocationThumbnail -> d
    java.lang.String mSubjectId -> e
    java.lang.String mZooniverseId -> f
    java.lang.String getSubjectId() -> a
    java.lang.String getZooniverseId() -> b
    java.lang.String getGroupId() -> c
    java.lang.String getLocationStandard() -> d
    java.lang.String getLocationThumbnail() -> e
    java.lang.String getLocationInverted() -> f
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
com.android.volley.Request$Priority -> com.android.a.b:
    com.android.volley.Request$Priority LOW -> a
    com.android.volley.Request$Priority NORMAL -> b
    com.android.volley.Request$Priority HIGH -> c
    com.android.volley.Request$Priority IMMEDIATE -> d
    com.android.volley.Request$Priority[] $VALUES -> e
    com.android.volley.Request$Priority[] values() -> values
    com.android.volley.Request$Priority valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.widget.Space -> android.support.v4.widget.Space:
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void draw(android.graphics.Canvas) -> draw
    int getDefaultSize2(int,int) -> a
    void onMeasure(int,int) -> onMeasure
com.android.volley.Request -> com.android.a.a:
    com.android.volley.VolleyLog$MarkerLog mEventLog -> a
    int mMethod -> b
    java.lang.String mUrl -> c
    int mDefaultTrafficStatsTag -> d
    com.android.volley.Response$ErrorListener mErrorListener -> e
    java.lang.Integer mSequence -> f
    com.android.volley.RequestQueue mRequestQueue -> g
    boolean mShouldCache -> h
    boolean mCanceled -> i
    boolean mResponseDelivered -> j
    com.android.volley.RetryPolicy mRetryPolicy -> k
    com.android.volley.Cache$Entry mCacheEntry -> l
    void <init>(int,java.lang.String,com.android.volley.Response$ErrorListener) -> <init>
    int getMethod() -> b
    int getTrafficStatsTag() -> c
    int findDefaultTrafficStatsTag(java.lang.String) -> d
    com.android.volley.Request setRetryPolicy(com.android.volley.RetryPolicy) -> e
    void addMarker(java.lang.String) -> f
    void finish(java.lang.String) -> g
    com.android.volley.Request setRequestQueue(com.android.volley.RequestQueue) -> h
    com.android.volley.Request setSequence(int) -> i
    java.lang.String getUrl() -> j
    java.lang.String getCacheKey() -> k
    com.android.volley.Request setCacheEntry(com.android.volley.Cache$Entry) -> l
    com.android.volley.Cache$Entry getCacheEntry() -> m
    void cancel() -> n
    boolean isCanceled() -> o
    java.util.Map getHeaders() -> a
    java.util.Map getPostParams() -> p
    java.lang.String getPostParamsEncoding() -> q
    java.lang.String getPostBodyContentType() -> r
    byte[] getPostBody() -> s
    java.util.Map getParams() -> t
    java.lang.String getParamsEncoding() -> u
    java.lang.String getBodyContentType() -> v
    byte[] getBody() -> w
    byte[] encodeParameters(java.util.Map,java.lang.String) -> x
    com.android.volley.Request setShouldCache(boolean) -> y
    boolean shouldCache() -> z
    com.android.volley.Request$Priority getPriority() -> aa
    int getTimeoutMs() -> ab
    com.android.volley.RetryPolicy getRetryPolicy() -> ac
    void markDelivered() -> ad
    boolean hasHadResponseDelivered() -> ae
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> b
    com.android.volley.VolleyError parseNetworkError(com.android.volley.VolleyError) -> af
    void deliverResponse(java.lang.Object) -> c
    void deliverError(com.android.volley.VolleyError) -> ag
    int compareTo(com.android.volley.Request) -> ah
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    com.android.volley.VolleyLog$MarkerLog access$000(com.android.volley.Request) -> ai
android.support.v4.app.BackStackState$1 -> android.support.v4.b.bi:
    void <init>() -> <init>
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.view.animation.FastOutLinearInInterpolator -> android.support.v4.a.b.d:
    float[] VALUES -> a
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
    void <clinit>() -> <clinit>
android.support.v7.widget.ListPopupWindow$1 -> android.support.v7.widget.co:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    android.support.v7.widget.ListPopupWindow getPopup() -> a
    android.support.v7.view.menu.ShowableListMenu getPopup() -> a
com.squareup.picasso.NetworkRequestHandler$ContentLengthException -> com.squareup.a.aw:
    void <init>(java.lang.String) -> <init>
com.squareup.picasso.Stats$StatsHandler$1 -> com.squareup.a.ar:
    android.os.Message val$msg -> a
    com.squareup.picasso.Stats$StatsHandler this$0 -> b
    void <init>(com.squareup.picasso.Stats$StatsHandler,android.os.Message) -> <init>
    void run() -> run
android.support.v7.view.ActionBarPolicy -> android.support.v7.view.e:
    android.content.Context mContext -> a
    android.support.v7.view.ActionBarPolicy get(android.content.Context) -> a
    void <init>(android.content.Context) -> <init>
    int getMaxActionButtons() -> b
    boolean showsOverflowMenuButton() -> c
    int getEmbeddedMenuWidthLimit() -> d
    boolean hasEmbeddedTabs() -> e
    int getTabContainerHeight() -> f
    boolean enableHomeButtonByDefault() -> g
    int getStackedTabMaxWidth() -> h
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.v:
    void <init>() -> <init>
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> b
    boolean isFinished(java.lang.Object) -> c
    boolean onRelease(java.lang.Object) -> d
    boolean onAbsorb(java.lang.Object,int) -> e
    boolean draw(java.lang.Object,android.graphics.Canvas) -> f
    boolean onPull(java.lang.Object,float,float) -> g
android.support.v4.view.AbsSavedState$1 -> android.support.v4.a.ef:
    void <init>() -> <init>
android.support.v7.widget.ListPopupWindow$2 -> android.support.v7.widget.dg:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    void run() -> run
android.support.v4.content.res.ConfigurationHelper$ConfigurationHelperImpl -> android.support.v4.d.a.d:
    int getScreenHeightDp(android.content.res.Resources) -> a
    int getScreenWidthDp(android.content.res.Resources) -> b
    int getSmallestScreenWidthDp(android.content.res.Resources) -> c
android.support.design.widget.Snackbar$5 -> android.support.design.widget.bt:
    android.support.design.widget.Snackbar this$0 -> a
    void <init>(android.support.design.widget.Snackbar) -> <init>
    void onViewAttachedToWindow(android.view.View) -> a
    void onViewDetachedFromWindow(android.view.View) -> b
com.murrayc.galaxyzoo.app.ZooFragment -> com.murrayc.galaxyzoo.app.au:
    void <init>() -> <init>
    boolean onOptionsItemSelected(android.view.MenuItem) -> g
    void setCachedLoggedIn(boolean) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> m
    void cacheLoggedInStatus() -> o
    boolean getCachedLoggedIn() -> p
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> d
    void onResume() -> q
    void requestLogin() -> r
    void requestLogout() -> s
    void showAbout() -> t
    void showSettings() -> u
com.squareup.picasso.Transformation -> com.squareup.a.u:
    android.graphics.Bitmap transform(android.graphics.Bitmap) -> a
    java.lang.String key() -> b
android.support.design.widget.ViewUtils$1 -> android.support.design.widget.p:
    void <init>() -> <init>
    android.support.design.widget.ValueAnimatorCompat createAnimator() -> a
android.support.v7.widget.StaggeredGridLayoutManager -> android.support.v7.widget.StaggeredGridLayoutManager:
    int mSpanCount -> a
    android.support.v7.widget.StaggeredGridLayoutManager$Span[] mSpans -> b
    android.support.v7.widget.OrientationHelper mPrimaryOrientation -> c
    android.support.v7.widget.OrientationHelper mSecondaryOrientation -> d
    int mOrientation -> e
    int mSizePerSpan -> f
    android.support.v7.widget.LayoutState mLayoutState -> g
    boolean mReverseLayout -> h
    boolean mShouldReverseLayout -> i
    java.util.BitSet mRemainingSpans -> j
    int mPendingScrollPosition -> k
    int mPendingScrollPositionOffset -> l
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup mLazySpanLookup -> m
    int mGapStrategy -> n
    boolean mLastLayoutFromEnd -> o
    boolean mLastLayoutRTL -> p
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState mPendingSavedState -> q
    int mFullSizeSpec -> r
    android.graphics.Rect mTmpRect -> s
    android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo mAnchorInfo -> t
    boolean mLaidOutInvalidFullSpan -> u
    boolean mSmoothScrollbarEnabled -> v
    java.lang.Runnable mCheckForGapsRunnable -> w
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void <init>(int,int) -> <init>
    void createOrientationHelpers() -> a
    boolean checkForGaps() -> b
    void onScrollStateChanged(int) -> dg
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> p
    android.view.View hasGapsToFix() -> c
    boolean checkSpanForGap(android.support.v7.widget.StaggeredGridLayoutManager$Span) -> d
    void setSpanCount(int) -> e
    void setOrientation(int) -> f
    void setReverseLayout(boolean) -> g
    void assertNotInLayoutOrScroll(java.lang.String) -> g
    void invalidateSpanAssignments() -> h
    void resolveShouldLayoutReverse() -> j
    boolean isLayoutRTL() -> k
    void setMeasuredDimension(android.graphics.Rect,int,int) -> d
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> r
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> l
    void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> s
    void repositionToWrapContentIfNecessary() -> m
    void applyPendingSavedState(android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> n
    void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> o
    boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> p
    boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> q
    void updateMeasureSpecs(int) -> r
    boolean supportsPredictiveItemAnimations() -> i
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> ct
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State) -> t
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> cw
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> cs
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State) -> u
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> cv
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> cu
    int computeScrollRange(android.support.v7.widget.RecyclerView$State) -> v
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> cx
    void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> w
    void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> x
    int updateSpecWithExtra(int,int,int) -> y
    void onRestoreInstanceState(android.os.Parcelable) -> dd
    android.os.Parcelable onSaveInstanceState() -> dc
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> dn
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dk
    int findFirstVisibleItemPositionInt() -> ab
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> dq
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> dr
    android.view.View findFirstVisibleItemClosestToStart(boolean,boolean) -> ac
    android.view.View findFirstVisibleItemClosestToEnd(boolean,boolean) -> ad
    void fixEndGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> ae
    void fixStartGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> af
    void updateLayoutState(int,android.support.v7.widget.RecyclerView$State) -> ag
    void setLayoutStateDirection(int) -> ah
    void offsetChildrenHorizontal(int) -> bh
    void offsetChildrenVertical(int) -> bi
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> co
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> cn
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> cm
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> cr
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object) -> cq
    void handleUpdate(int,int,int) -> ai
    int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State) -> aj
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> al
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> am
    void attachViewToSpans(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,android.support.v7.widget.LayoutState) -> an
    void recycle(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState) -> ao
    void appendViewToAllSpans(android.view.View) -> ap
    void prependViewToAllSpans(android.view.View) -> aq
    void updateAllRemainingSpans(int,int) -> ar
    void updateRemainingSpans(android.support.v7.widget.StaggeredGridLayoutManager$Span,int,int) -> as
    int getMaxStart(int) -> at
    int getMinStart(int) -> au
    boolean areAllEndsEqual() -> av
    boolean areAllStartsEqual() -> ax
    int getMaxEnd(int) -> ay
    int getMinEnd(int) -> az
    void recycleFromStart(android.support.v7.widget.RecyclerView$Recycler,int) -> ba
    void recycleFromEnd(android.support.v7.widget.RecyclerView$Recycler,int) -> bb
    boolean preferLastSpan(int) -> bc
    android.support.v7.widget.StaggeredGridLayoutManager$Span getNextSpan(android.support.v7.widget.LayoutState) -> bd
    boolean canScrollVertically() -> aa
    boolean canScrollHorizontally() -> z
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> x
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> y
    int calculateScrollDirectionForPosition(int) -> be
    void scrollToPosition(int) -> ab
    int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> bf
    int getLastChildPosition() -> bh
    int getFirstChildPosition() -> bi
    int findFirstReferenceChildPosition(int) -> bj
    int findLastReferenceChildPosition(int) -> bk
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> t
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> w
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> v
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> u
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> cf
    int convertFocusDirectionToLayoutDirection(int) -> bl
    boolean access$000(android.support.v7.widget.StaggeredGridLayoutManager) -> bm
    boolean access$300(android.support.v7.widget.StaggeredGridLayoutManager) -> bn
android.support.design.widget.CoordinatorLayout$HierarchyChangeListener -> android.support.design.widget.au:
    android.support.design.widget.CoordinatorLayout this$0 -> a
    void <init>(android.support.design.widget.CoordinatorLayout) -> <init>
    void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
    void <init>(android.support.design.widget.CoordinatorLayout,android.support.design.widget.CoordinatorLayout$1) -> <init>
android.support.v4.view.MotionEventCompatHoneycombMr1 -> android.support.v4.a.bz:
    void <init>() -> <init>
    float getAxisValue(android.view.MotionEvent,int) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 -> android.support.v4.a.cp:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImplHoneycomb -> android.support.design.widget.cu:
    void <init>() -> <init>
    void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> a
    void <init>(android.support.design.widget.ViewGroupUtils$1) -> <init>
android.support.v4.app.FragmentHostCallback -> android.support.v4.b.d:
    android.app.Activity mActivity -> a
    android.content.Context mContext -> b
    android.os.Handler mHandler -> c
    int mWindowAnimations -> d
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> e
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> f
    boolean mRetainLoaders -> g
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> h
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    void <init>(android.support.v4.app.FragmentActivity) -> <init>
    void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean onShouldSaveFragmentState(android.support.v4.app.Fragment) -> b
    android.view.LayoutInflater onGetLayoutInflater() -> c
    void onSupportInvalidateOptionsMenu() -> d
    void onStartActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int,android.os.Bundle) -> e
    boolean onHasWindowAnimations() -> f
    int onGetWindowAnimations() -> g
    android.view.View onFindViewById(int) -> h
    boolean onHasView() -> i
    android.app.Activity getActivity() -> j
    android.content.Context getContext() -> k
    android.os.Handler getHandler() -> l
    android.support.v4.app.FragmentManagerImpl getFragmentManagerImpl() -> m
    void inactivateFragment(java.lang.String) -> n
    void onAttachFragment(android.support.v4.app.Fragment) -> o
    boolean getRetainLoaders() -> p
    void doLoaderStart() -> q
    void doLoaderStop(boolean) -> r
    void doLoaderDestroy() -> s
    void reportLoaderStart() -> t
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> u
    android.support.v4.util.SimpleArrayMap retainLoaderNonConfig() -> v
    void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap) -> w
    void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> x
android.support.v7.widget.ActivityChooserView$1 -> android.support.v7.widget.df:
    android.support.v7.widget.ActivityChooserView this$0 -> a
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.d.aa:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> android.support.v4.a.a.aa:
    java.lang.Object mInfo -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> a
    void <init>(java.lang.Object) -> <init>
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.a.au:
    void <init>() -> <init>
    int getLayoutDirection(android.view.View) -> a
    int getPaddingStart(android.view.View) -> b
    int getPaddingEnd(android.view.View) -> c
    void setPaddingRelative(android.view.View,int,int,int,int) -> d
    int getWindowSystemUiVisibility(android.view.View) -> e
    boolean isPaddingRelative(android.view.View) -> f
android.support.v7.widget.AbsActionBarView$VisibilityAnimListener -> android.support.v7.widget.dn:
    boolean mCanceled -> a
    int mFinalVisibility -> b
    android.support.v7.widget.AbsActionBarView this$0 -> c
    void <init>(android.support.v7.widget.AbsActionBarView) -> <init>
    android.support.v7.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> a
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo -> android.support.v7.view.menu.y:
    android.support.v7.widget.MenuPopupWindow window -> a
    android.support.v7.view.menu.MenuBuilder menu -> b
    int position -> c
    void <init>(android.support.v7.widget.MenuPopupWindow,android.support.v7.view.menu.MenuBuilder,int) -> <init>
    android.widget.ListView getListView() -> a
android.support.v7.view.menu.BaseWrapper -> android.support.v7.view.menu.ad:
    java.lang.Object mWrappedObject -> a
    void <init>(java.lang.Object) -> <init>
com.squareup.picasso.RequestHandler$Result -> com.squareup.a.bp:
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> a
    android.graphics.Bitmap bitmap -> b
    java.io.InputStream stream -> c
    int exifOrientation -> d
    void <init>(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> <init>
    void <init>(java.io.InputStream,com.squareup.picasso.Picasso$LoadedFrom) -> <init>
    void <init>(android.graphics.Bitmap,java.io.InputStream,com.squareup.picasso.Picasso$LoadedFrom,int) -> <init>
    android.graphics.Bitmap getBitmap() -> a
    java.io.InputStream getStream() -> b
    com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom() -> c
    int getExifOrientation() -> d
android.support.v4.view.ViewCompat$ICSMr1ViewCompatImpl -> android.support.v4.a.aa:
    void <init>() -> <init>
    boolean hasOnClickListeners(android.view.View) -> q
android.support.v7.view.menu.CascadingMenuPopup$2$1 -> android.support.v7.view.menu.al:
    android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo val$nextInfo -> a
    android.view.MenuItem val$item -> b
    android.support.v7.view.menu.MenuBuilder val$menu -> c
    android.support.v7.view.menu.CascadingMenuPopup$2 this$1 -> d
    void <init>(android.support.v7.view.menu.CascadingMenuPopup$2,android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,android.support.v7.view.menu.MenuBuilder) -> <init>
    void run() -> run
com.squareup.picasso.RequestHandler -> com.squareup.a.s:
    void <init>() -> <init>
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> b
    int getRetryCount() -> c
    boolean shouldRetry(boolean,android.net.NetworkInfo) -> d
    boolean supportsReplay() -> e
    android.graphics.BitmapFactory$Options createBitmapOptions(com.squareup.picasso.Request) -> f
    boolean requiresInSampleSize(android.graphics.BitmapFactory$Options) -> g
    void calculateInSampleSize(int,int,android.graphics.BitmapFactory$Options,com.squareup.picasso.Request) -> h
    void calculateInSampleSize(int,int,int,int,android.graphics.BitmapFactory$Options,com.squareup.picasso.Request) -> i
android.support.v7.app.WindowDecorActionBar$ActionModeImpl -> android.support.v7.c.bb:
    android.content.Context mActionModeContext -> a
    android.support.v7.view.menu.MenuBuilder mMenu -> b
    android.support.v7.view.ActionMode$Callback mCallback -> c
    java.lang.ref.WeakReference mCustomView -> d
    android.support.v7.app.WindowDecorActionBar this$0 -> e
    void <init>(android.support.v7.app.WindowDecorActionBar,android.content.Context,android.support.v7.view.ActionMode$Callback) -> <init>
    android.view.MenuInflater getMenuInflater() -> a
    android.view.Menu getMenu() -> b
    void finish() -> c
    void invalidate() -> d
    boolean dispatchOnCreate() -> e
    void setCustomView(android.view.View) -> f
    void setSubtitle(java.lang.CharSequence) -> g
    void setTitle(java.lang.CharSequence) -> h
    void setTitle(int) -> i
    void setSubtitle(int) -> j
    java.lang.CharSequence getTitle() -> k
    java.lang.CharSequence getSubtitle() -> l
    void setTitleOptionalHint(boolean) -> m
    boolean isTitleOptional() -> n
    android.view.View getCustomView() -> o
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> b
android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImplBase -> android.support.design.widget.ao:
    void <init>() -> <init>
    void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> a
    void <init>(android.support.design.widget.ViewGroupUtils$1) -> <init>
android.support.v7.widget.ActionBarOverlayLayout$2 -> android.support.v7.widget.bk:
    android.support.v7.widget.ActionBarOverlayLayout this$0 -> a
    void <init>(android.support.v7.widget.ActionBarOverlayLayout) -> <init>
    void run() -> run
com.android.volley.CacheDispatcher$1 -> com.android.a.ab:
    com.android.volley.Request val$request -> a
    com.android.volley.CacheDispatcher this$0 -> b
    void <init>(com.android.volley.CacheDispatcher,com.android.volley.Request) -> <init>
    void run() -> run
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21 -> android.support.v4.a.a.h:
    void <init>() -> <init>
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> a
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> b
com.android.volley.ServerError -> com.android.a.z:
    void <init>(com.android.volley.NetworkResponse) -> <init>
    void <init>() -> <init>
android.support.v7.view.StandaloneActionMode -> android.support.v7.view.n:
    android.content.Context mContext -> a
    android.support.v7.widget.ActionBarContextView mContextView -> b
    android.support.v7.view.ActionMode$Callback mCallback -> c
    java.lang.ref.WeakReference mCustomView -> d
    boolean mFinished -> e
    boolean mFocusable -> f
    android.support.v7.view.menu.MenuBuilder mMenu -> g
    void <init>(android.content.Context,android.support.v7.widget.ActionBarContextView,android.support.v7.view.ActionMode$Callback,boolean) -> <init>
    void setTitle(java.lang.CharSequence) -> h
    void setSubtitle(java.lang.CharSequence) -> g
    void setTitle(int) -> i
    void setSubtitle(int) -> j
    void setTitleOptionalHint(boolean) -> m
    boolean isTitleOptional() -> n
    void setCustomView(android.view.View) -> f
    void invalidate() -> d
    void finish() -> c
    android.view.Menu getMenu() -> b
    java.lang.CharSequence getTitle() -> k
    java.lang.CharSequence getSubtitle() -> l
    android.view.View getCustomView() -> o
    android.view.MenuInflater getMenuInflater() -> a
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> b
android.support.v7.widget.RecyclerView$6 -> android.support.v7.widget.hj:
    android.support.v7.widget.RecyclerView this$0 -> a
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int) -> a
    void offsetPositionsForRemovingInvisible(int,int) -> b
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> c
    void markViewHoldersUpdated(int,int,java.lang.Object) -> d
    void onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> e
    void dispatchUpdate(android.support.v7.widget.AdapterHelper$UpdateOp) -> a
    void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> f
    void offsetPositionsForAdd(int,int) -> g
    void offsetPositionsForMove(int,int) -> h
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider -> android.support.v4.g.a:
    android.animation.TimeInterpolator mDefaultInterpolator -> a
    void <init>() -> <init>
    void clearInterpolator(android.view.View) -> a
android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy -> android.support.design.widget.al:
    void onAnimationUpdate() -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.b.aw:
    void <init>(java.lang.String) -> <init>
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.a.ce:
    float getAxisValue(android.view.MotionEvent,int) -> a
android.support.design.widget.CoordinatorLayout$1 -> android.support.design.widget.ck:
    android.support.design.widget.CoordinatorLayout this$0 -> a
    void <init>(android.support.design.widget.CoordinatorLayout) -> <init>
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
android.support.v7.view.menu.ExpandedMenuView -> android.support.v7.view.menu.ExpandedMenuView:
    int[] TINT_ATTRS -> a
    android.support.v7.view.menu.MenuBuilder mMenu -> b
    int mAnimations -> c
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void initialize(android.support.v7.view.menu.MenuBuilder) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean invokeItem(android.support.v7.view.menu.MenuItemImpl) -> e
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    int getWindowAnimations() -> getWindowAnimations
    void <clinit>() -> <clinit>
com.squareup.picasso.ImageViewAction -> com.squareup.a.au:
    com.squareup.picasso.Callback callback -> a
    void <init>(com.squareup.picasso.Picasso,android.widget.ImageView,com.squareup.picasso.Request,int,int,int,android.graphics.drawable.Drawable,java.lang.String,java.lang.Object,com.squareup.picasso.Callback,boolean) -> <init>
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> a
    void error() -> b
    void cancel() -> c
com.murrayc.galaxyzoo.app.IconsCache -> com.murrayc.galaxyzoo.app.ax:
    android.content.Context mContext -> a
    android.support.v4.util.LruCache mExampleIcons -> b
    android.support.v4.util.LruCache mWorkflowIcons -> c
    java.lang.String getExampleImageUri(java.lang.String) -> a
    void <init>(android.content.Context,java.util.List) -> <init>
    android.graphics.Bitmap getIcon(java.lang.String) -> b
    android.content.Context getContext() -> c
    java.lang.String getIconAssetPath(java.lang.String) -> d
    boolean reloadCachedIcons(java.util.List) -> e
    boolean reloadExampleImages(com.murrayc.galaxyzoo.app.DecisionTree$Question,com.murrayc.galaxyzoo.app.DecisionTree$BaseButton) -> f
    boolean reloadIcon(java.lang.String,android.support.v4.util.LruCache) -> g
    boolean reloadIconsForQuestion(com.murrayc.galaxyzoo.app.DecisionTree$Question) -> h
android.support.v7.widget.ResourcesWrapper -> android.support.v7.widget.bo:
    android.content.res.Resources mResources -> a
    void <init>(android.content.res.Resources) -> <init>
    java.lang.CharSequence getText(int) -> getText
    java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    java.lang.String getQuantityString(int,int) -> getQuantityString
    java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    java.lang.CharSequence[] getTextArray(int) -> getTextArray
    java.lang.String[] getStringArray(int) -> getStringArray
    int[] getIntArray(int) -> getIntArray
    android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    float getDimension(int) -> getDimension
    int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    int getDimensionPixelSize(int) -> getDimensionPixelSize
    float getFraction(int,int,int) -> getFraction
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    android.graphics.Movie getMovie(int) -> getMovie
    int getColor(int) -> getColor
    android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    boolean getBoolean(int) -> getBoolean
    int getInteger(int) -> getInteger
    android.content.res.XmlResourceParser getLayout(int) -> getLayout
    android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    android.content.res.XmlResourceParser getXml(int) -> getXml
    java.io.InputStream openRawResource(int) -> openRawResource
    java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    void getValue(int,android.util.TypedValue,boolean) -> getValue
    void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
    android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    android.content.res.Configuration getConfiguration() -> getConfiguration
    int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    java.lang.String getResourceName(int) -> getResourceName
    java.lang.String getResourcePackageName(int) -> getResourcePackageName
    java.lang.String getResourceTypeName(int) -> getResourceTypeName
    java.lang.String getResourceEntryName(int) -> getResourceEntryName
    void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
com.murrayc.galaxyzoo.app.SubjectViewerFragment -> com.murrayc.galaxyzoo.app.f:
    java.lang.String[] mColumns -> a
    android.database.Cursor mCursor -> b
    android.view.View mLoadingView -> c
    android.view.View mRootView -> d
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>() -> <init>
    void addOrUpdateChildFragments() -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> b
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> d
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> e
    void onLoaderReset(android.support.v4.content.Loader) -> f
    void onSingletonInitialized() -> g
    void showLoadingView(boolean) -> h
    void update() -> i
    void updateFromCursor() -> j
    void <clinit>() -> <clinit>
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> k
android.support.v7.widget.ChildHelper$Bucket -> android.support.v7.widget.go:
    long mData -> a
    android.support.v7.widget.ChildHelper$Bucket next -> b
    void <init>() -> <init>
    void set(int) -> a
    void ensureNext() -> b
    void clear(int) -> c
    boolean get(int) -> d
    void reset() -> e
    void insert(int,boolean) -> f
    boolean remove(int) -> g
    int countOnesBefore(int) -> h
    java.lang.String toString() -> toString
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.a.by:
    void <init>() -> <init>
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> b
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> c
    android.view.View getActionView(android.view.MenuItem) -> d
android.support.v7.widget.RecyclerView$ViewCacheExtension -> android.support.v7.widget.s:
    void <init>() -> <init>
    android.view.View getViewForPositionAndType(android.support.v7.widget.RecyclerView$Recycler,int,int) -> a
android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplBase -> android.support.v4.d.ab:
    void <init>() -> <init>
    android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal) -> a
android.support.v4.widget.PopupWindowCompat$Api21PopupWindowImpl -> android.support.v4.widget.aa:
    void <init>() -> <init>
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
com.android.volley.VolleyLog$MarkerLog$Marker -> com.android.a.t:
    java.lang.String name -> a
    long thread -> b
    long time -> c
    void <init>(java.lang.String,long,long) -> <init>
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.a.bd:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    void <init>(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> <init>
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ap:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> b
    void <init>(android.content.Context,android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> <init>
    void captureChildView(android.view.View,int) -> c
    int getTouchSlop() -> d
    void cancel() -> e
    boolean smoothSlideViewTo(android.view.View,int,int) -> f
    boolean settleCapturedViewAt(int,int) -> g
    boolean forceSettleCapturedViewAt(int,int,int,int) -> h
    int computeSettleDuration(android.view.View,int,int,int,int) -> i
    int computeAxisDuration(int,int,int) -> j
    int clampMag(int,int,int) -> k
    float clampMag(float,float,float) -> l
    float distanceInfluenceForSnapDuration(float) -> m
    boolean continueSettling(boolean) -> n
    void dispatchViewReleased(float,float) -> o
    void clearMotionHistory() -> p
    void clearMotionHistory(int) -> q
    void ensureMotionHistorySizeForId(int) -> r
    void saveInitialMotion(float,float,int) -> s
    void saveLastMotion(android.view.MotionEvent) -> t
    boolean isPointerDown(int) -> u
    void setDragState(int) -> v
    boolean tryCaptureViewForDrag(android.view.View,int) -> w
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> x
    void processTouchEvent(android.view.MotionEvent) -> y
    void reportNewEdgeDrags(float,float,int) -> z
    boolean checkNewEdgeDrag(float,float,int,int) -> aa
    boolean checkTouchSlop(android.view.View,float,float) -> ab
    void releaseViewForPointerUp() -> ac
    void dragTo(int,int,int,int) -> ad
    boolean isCapturedViewUnder(int,int) -> ae
    boolean isViewUnder(android.view.View,int,int) -> af
    android.view.View findTopChildUnder(int,int) -> ag
    int getEdgesTouched(int,int) -> ah
    boolean isValidPointerForActionMove(int) -> ai
    void <clinit>() -> <clinit>
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.a.ay:
    void <init>() -> <init>
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> b
android.support.design.widget.SnackbarManager$SnackbarRecord -> android.support.design.widget.bi:
    java.lang.ref.WeakReference callback -> a
    int duration -> b
    void <init>(int,android.support.design.widget.SnackbarManager$Callback) -> <init>
    boolean isSnackbar(android.support.design.widget.SnackbarManager$Callback) -> a
    int access$102(android.support.design.widget.SnackbarManager$SnackbarRecord,int) -> b
    java.lang.ref.WeakReference access$200(android.support.design.widget.SnackbarManager$SnackbarRecord) -> c
    int access$100(android.support.design.widget.SnackbarManager$SnackbarRecord) -> d
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.a.cw:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v7.widget.Toolbar$LayoutParams -> android.support.v7.widget.az:
    int mViewType -> a
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.support.v7.widget.Toolbar$LayoutParams) -> <init>
    void <init>(android.support.v7.app.ActionBar$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> a
com.murrayc.galaxyzoo.app.ItemFragment$2 -> com.murrayc.galaxyzoo.app.bi:
    com.murrayc.galaxyzoo.app.ItemFragment this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.ItemFragment) -> <init>
    void onInitialized() -> a
com.squareup.picasso.BitmapHunter$2 -> com.squareup.a.ay:
    void <init>() -> <init>
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> b
android.support.design.widget.StateListAnimator -> android.support.design.widget.bv:
    java.util.ArrayList mTuples -> a
    android.support.design.widget.StateListAnimator$Tuple mLastMatch -> b
    android.support.design.widget.ValueAnimatorCompat mRunningAnimator -> c
    android.support.design.widget.ValueAnimatorCompat$AnimatorListener mAnimationListener -> d
    void <init>() -> <init>
    void addState(int[],android.support.design.widget.ValueAnimatorCompat) -> a
    void setState(int[]) -> b
    void start(android.support.design.widget.StateListAnimator$Tuple) -> c
    void cancel() -> d
    void jumpToCurrentState() -> e
    android.support.design.widget.ValueAnimatorCompat access$000(android.support.design.widget.StateListAnimator) -> f
    android.support.design.widget.ValueAnimatorCompat access$002(android.support.design.widget.StateListAnimator,android.support.design.widget.ValueAnimatorCompat) -> g
android.support.v4.content.res.ConfigurationHelper -> android.support.v4.d.a.h:
    android.support.v4.content.res.ConfigurationHelper$ConfigurationHelperImpl IMPL -> a
    void <init>() -> <init>
    int getScreenHeightDp(android.content.res.Resources) -> a
    int getScreenWidthDp(android.content.res.Resources) -> b
    int getSmallestScreenWidthDp(android.content.res.Resources) -> c
    void <clinit>() -> <clinit>
android.support.design.widget.Snackbar$SnackbarLayout -> android.support.design.widget.Snackbar$SnackbarLayout:
    android.widget.TextView mMessageView -> a
    android.widget.Button mActionView -> b
    int mMaxWidth -> c
    int mMaxInlineActionWidth -> d
    android.support.design.widget.Snackbar$SnackbarLayout$OnLayoutChangeListener mOnLayoutChangeListener -> e
    android.support.design.widget.Snackbar$SnackbarLayout$OnAttachStateChangeListener mOnAttachStateChangeListener -> f
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onFinishInflate() -> onFinishInflate
    android.widget.TextView getMessageView() -> getMessageView
    android.widget.Button getActionView() -> getActionView
    void onMeasure(int,int) -> onMeasure
    void animateChildrenIn(int,int) -> a
    void animateChildrenOut(int,int) -> b
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnLayoutChangeListener(android.support.design.widget.Snackbar$SnackbarLayout$OnLayoutChangeListener) -> setOnLayoutChangeListener
    void setOnAttachStateChangeListener(android.support.design.widget.Snackbar$SnackbarLayout$OnAttachStateChangeListener) -> setOnAttachStateChangeListener
    boolean updateViewsWithinLayout(int,int,int) -> c
    void updateTopBottomPadding(android.view.View,int,int) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.a.be:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> c
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> e
    void sendAccessibilityEvent(android.view.View,int) -> f
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> g
android.support.design.widget.ValueAnimatorCompat$Creator -> android.support.design.widget.bm:
    android.support.design.widget.ValueAnimatorCompat createAnimator() -> a
android.support.v7.widget.StaggeredGridLayoutManager$1 -> android.support.v7.widget.gn:
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> a
    void <init>(android.support.v7.widget.StaggeredGridLayoutManager) -> <init>
    void run() -> run
android.support.graphics.drawable.TypedArrayUtils -> android.support.a.a.l:
    void <init>() -> <init>
    boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> a
    float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> b
    boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> c
    int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> d
    int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> e
com.murrayc.galaxyzoo.app.syncadapter.SubjectAdder$2 -> com.murrayc.galaxyzoo.app.syncadapter.i:
    com.murrayc.galaxyzoo.app.syncadapter.SubjectAdder this$0 -> a
    java.lang.String val$uriFileToCache -> b
    android.net.Uri val$itemUri -> c
    com.murrayc.galaxyzoo.app.provider.ImageType val$imageType -> d
    void <init>(com.murrayc.galaxyzoo.app.syncadapter.SubjectAdder,java.lang.String,android.net.Uri,com.murrayc.galaxyzoo.app.provider.ImageType) -> <init>
    void onErrorResponse(com.android.volley.VolleyError) -> a
com.android.volley.Response -> com.android.a.i:
    java.lang.Object result -> a
    com.android.volley.Cache$Entry cacheEntry -> b
    com.android.volley.VolleyError error -> c
    boolean intermediate -> d
    com.android.volley.Response success(java.lang.Object,com.android.volley.Cache$Entry) -> a
    com.android.volley.Response error(com.android.volley.VolleyError) -> b
    boolean isSuccess() -> c
    void <init>(java.lang.Object,com.android.volley.Cache$Entry) -> <init>
    void <init>(com.android.volley.VolleyError) -> <init>
android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatImpl -> android.support.v4.a.dr:
    int getSystemWindowInsetLeft(java.lang.Object) -> b
    int getSystemWindowInsetTop(java.lang.Object) -> d
    int getSystemWindowInsetRight(java.lang.Object) -> c
    int getSystemWindowInsetBottom(java.lang.Object) -> a
    boolean isConsumed(java.lang.Object) -> e
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(java.lang.Object,int,int,int,int) -> e
android.support.design.widget.ValueAnimatorCompat$1 -> android.support.design.widget.cp:
    android.support.design.widget.ValueAnimatorCompat$AnimatorUpdateListener val$updateListener -> a
    android.support.design.widget.ValueAnimatorCompat this$0 -> b
    void <init>(android.support.design.widget.ValueAnimatorCompat,android.support.design.widget.ValueAnimatorCompat$AnimatorUpdateListener) -> <init>
    void onAnimationUpdate() -> a
com.squareup.picasso.Picasso$RequestTransformer$1 -> com.squareup.a.bc:
    void <init>() -> <init>
    com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> a
android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu -> android.support.v7.widget.cu:
    android.support.v7.widget.ActionMenuPresenter this$0 -> a
    void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.SubMenuBuilder,android.view.View) -> <init>
    void onDismiss() -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> android.support.v4.a.a.ag:
    java.lang.Object mInfo -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> a
    void <init>(java.lang.Object) -> <init>
    java.lang.Object access$300(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) -> b
com.murrayc.galaxyzoo.app.DecisionTree$Answer -> com.murrayc.galaxyzoo.app.ak:
    java.lang.String leadsToQuestionId -> a
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> <init>
    java.lang.String -get0(com.murrayc.galaxyzoo.app.DecisionTree$Answer) -> a
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.b.ap:
    android.view.View val$container -> a
    android.transition.Transition val$enterTransition -> b
    android.view.View val$nonExistentView -> c
    android.support.v4.app.FragmentTransitionCompat21$ViewRetriever val$inFragment -> d
    java.util.Map val$nameOverrides -> e
    java.util.Map val$renamedViews -> f
    java.util.ArrayList val$enteringViews -> g
    android.transition.Transition val$exitTransition -> h
    void <init>(android.view.View,android.transition.Transition,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,java.util.Map,java.util.Map,java.util.ArrayList,android.transition.Transition) -> <init>
    boolean onPreDraw() -> onPreDraw
com.squareup.picasso.AssetRequestHandler -> com.squareup.a.bi:
    int ASSET_PREFIX_LENGTH -> a
    android.content.res.AssetManager assetManager -> b
    void <init>(android.content.Context) -> <init>
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> b
    java.lang.String getFilePath(com.squareup.picasso.Request) -> b
    void <clinit>() -> <clinit>
android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> android.support.v7.widget.ad:
    int left -> a
    int top -> b
    int right -> c
    int bottom -> d
    void <init>() -> <init>
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(android.support.v7.widget.RecyclerView$ViewHolder,int) -> b
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.d.u:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
    void <clinit>() -> <clinit>
android.support.v7.widget.ActionBarContextView$1 -> android.support.v7.widget.es:
    android.support.v7.view.ActionMode val$mode -> a
    android.support.v7.widget.ActionBarContextView this$0 -> b
    void <init>(android.support.v7.widget.ActionBarContextView,android.support.v7.view.ActionMode) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.widget.CompoundButtonCompatLollipop -> android.support.v4.widget.o:
    void <init>() -> <init>
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> a
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> b
android.support.v4.app.FragmentManagerState -> android.support.v4.b.bn:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> d
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v7.widget.RecyclerView$LayoutManager -> android.support.v7.widget.q:
    android.support.v7.widget.ChildHelper mChildHelper -> a
    android.support.v7.widget.RecyclerView mRecyclerView -> b
    android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller -> c
    boolean mRequestedSimpleAnimations -> d
    boolean mIsAttachedToWindow -> e
    boolean mAutoMeasure -> f
    boolean mMeasurementCacheEnabled -> g
    int mWidthMode -> h
    int mHeightMode -> i
    int mWidth -> j
    int mHeight -> k
    void <init>() -> <init>
    void setRecyclerView(android.support.v7.widget.RecyclerView) -> a
    void setMeasureSpecs(int,int) -> b
    void setMeasuredDimensionFromChildren(int,int) -> c
    void setMeasuredDimension(android.graphics.Rect,int,int) -> d
    void requestLayout() -> e
    int chooseSize(int,int,int) -> f
    void assertNotInLayoutOrScroll(java.lang.String) -> g
    void setAutoMeasureEnabled(boolean) -> h
    boolean supportsPredictiveItemAnimations() -> i
    void dispatchAttachedToWindow(android.support.v7.widget.RecyclerView) -> j
    void dispatchDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> k
    boolean isAttachedToWindow() -> l
    boolean removeCallbacks(java.lang.Runnable) -> m
    void onAttachedToWindow(android.support.v7.widget.RecyclerView) -> n
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView) -> o
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> p
    boolean getClipToPadding() -> q
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> r
    void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> s
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> t
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> u
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> v
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> w
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> x
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> y
    boolean canScrollHorizontally() -> z
    boolean canScrollVertically() -> aa
    void scrollToPosition(int) -> ab
    boolean isSmoothScrolling() -> ac
    int getLayoutDirection() -> ad
    void addDisappearingView(android.view.View) -> ae
    void addDisappearingView(android.view.View,int) -> af
    void addView(android.view.View) -> ag
    void addView(android.view.View,int) -> ah
    void addViewInt(android.view.View,int,boolean) -> ai
    void removeView(android.view.View) -> aj
    void removeViewAt(int) -> ak
    int getBaseline() -> al
    int getPosition(android.view.View) -> am
    android.view.View findContainingItemView(android.view.View) -> an
    android.view.View findViewByPosition(int) -> ao
    void detachViewAt(int) -> ap
    void detachViewInternal(int,android.view.View) -> aq
    void attachView(android.view.View,int,android.support.v7.widget.RecyclerView$LayoutParams) -> ar
    void attachView(android.view.View,int) -> as
    void moveView(int,int) -> at
    void removeAndRecycleView(android.view.View,android.support.v7.widget.RecyclerView$Recycler) -> au
    void removeAndRecycleViewAt(int,android.support.v7.widget.RecyclerView$Recycler) -> av
    int getChildCount() -> aw
    android.view.View getChildAt(int) -> ax
    int getWidthMode() -> ay
    int getHeightMode() -> az
    int getWidth() -> ba
    int getHeight() -> bb
    int getPaddingLeft() -> bc
    int getPaddingTop() -> bd
    int getPaddingRight() -> be
    int getPaddingBottom() -> bf
    android.view.View getFocusedChild() -> bg
    void offsetChildrenHorizontal(int) -> bh
    void offsetChildrenVertical(int) -> bi
    void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler) -> bj
    void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View) -> bk
    void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler) -> bl
    boolean shouldReMeasureChild(android.view.View,int,int,android.support.v7.widget.RecyclerView$LayoutParams) -> bm
    boolean shouldMeasureChild(android.view.View,int,int,android.support.v7.widget.RecyclerView$LayoutParams) -> bn
    boolean isMeasurementUpToDate(int,int,int) -> bo
    void measureChildWithMargins(android.view.View,int,int) -> bp
    int getChildMeasureSpec(int,int,int,int,boolean) -> bq
    int getDecoratedMeasuredWidth(android.view.View) -> br
    int getDecoratedMeasuredHeight(android.view.View) -> bs
    void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> bt
    void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> bu
    void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> bv
    int getDecoratedLeft(android.view.View) -> bw
    int getDecoratedTop(android.view.View) -> bx
    int getDecoratedRight(android.view.View) -> by
    int getDecoratedBottom(android.view.View) -> bz
    void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> ca
    int getTopDecorationHeight(android.view.View) -> cb
    int getBottomDecorationHeight(android.view.View) -> cc
    int getLeftDecorationWidth(android.view.View) -> cd
    int getRightDecorationWidth(android.view.View) -> ce
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> cf
    android.view.View onInterceptFocusSearch(android.view.View,int) -> cg
    boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> ch
    boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.view.View,android.view.View) -> ci
    boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,android.view.View,android.view.View) -> cj
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter) -> ck
    boolean onAddFocusables(android.support.v7.widget.RecyclerView,java.util.ArrayList,int,int) -> cl
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> cm
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> cn
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> co
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int) -> cp
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object) -> cq
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> cr
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> cs
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> ct
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> cu
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> cv
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> cw
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> cx
    void onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int) -> cy
    void setMeasuredDimension(int,int) -> cz
    int getMinimumWidth() -> da
    int getMinimumHeight() -> db
    android.os.Parcelable onSaveInstanceState() -> dc
    void onRestoreInstanceState(android.os.Parcelable) -> dd
    void stopSmoothScroller() -> de
    void onSmoothScrollerStopped(android.support.v7.widget.RecyclerView$SmoothScroller) -> df
    void onScrollStateChanged(int) -> dg
    void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler) -> dh
    void onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> di
    void onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> dj
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dk
    void onInitializeAccessibilityEvent(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> dl
    void onInitializeAccessibilityNodeInfoForItem(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> dm
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> dn
    void requestSimpleAnimationsInNextLayout() -> do
    int getSelectionModeForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> dp
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> dq
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> dr
    boolean isLayoutHierarchical(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> ds
    boolean performAccessibilityAction(int,android.os.Bundle) -> dt
    boolean performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle) -> du
    boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> dv
    boolean performAccessibilityActionForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> dw
    android.support.v7.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> dx
    void setExactMeasureSpecsFrom(android.support.v7.widget.RecyclerView) -> dy
    boolean shouldMeasureTwice() -> dz
    boolean hasFlexibleChildInBothOrientations() -> ea
    boolean access$2000(android.support.v7.widget.RecyclerView$LayoutManager) -> eb
    boolean access$2600(android.support.v7.widget.RecyclerView$LayoutManager) -> ec
    boolean access$2602(android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> ed
    void access$6000(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.RecyclerView$SmoothScroller) -> ee
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.b:
    android.widget.OverScroller mScroller -> a
    boolean mIsIcsOrNewer -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> a
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> b
    void <init>(boolean,android.content.Context,android.view.animation.Interpolator) -> <init>
    boolean isFinished() -> c
    int getCurrX() -> d
    int getCurrY() -> e
    int getFinalX() -> f
    int getFinalY() -> g
    float getCurrVelocity() -> h
    boolean computeScrollOffset() -> i
    void startScroll(int,int,int,int) -> j
    void startScroll(int,int,int,int,int) -> k
    void fling(int,int,int,int,int,int,int,int) -> l
    void fling(int,int,int,int,int,int,int,int,int,int) -> m
    boolean springBack(int,int,int,int,int,int) -> n
    void abortAnimation() -> o
com.murrayc.galaxyzoo.app.DecisionTree$Question -> com.murrayc.galaxyzoo.app.al:
    java.util.List answers -> a
    java.util.List checkboxes -> b
    java.lang.String help -> c
    java.lang.String id -> d
    java.util.Map mapAnswers -> e
    java.util.Map mapCheckboxes -> f
    java.lang.String text -> g
    java.lang.String title -> h
    java.lang.String getHelp() -> a
    java.util.List getAnswers() -> b
    java.util.List getCheckboxes() -> c
    java.lang.String getId() -> d
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    void addAnswer(com.murrayc.galaxyzoo.app.DecisionTree$Answer) -> e
    void addCheckbox(com.murrayc.galaxyzoo.app.DecisionTree$Checkbox) -> f
    com.murrayc.galaxyzoo.app.DecisionTree$Answer getAnswer(java.lang.String) -> g
    com.murrayc.galaxyzoo.app.DecisionTree$Checkbox getCheckbox(java.lang.String) -> h
    java.lang.String getText() -> i
    java.lang.String getTitle() -> j
    boolean hasCheckboxes() -> k
    void setHelp(java.lang.String) -> l
    void setText(java.lang.String) -> m
    void setTitle(java.lang.String) -> n
    void -wrap0(com.murrayc.galaxyzoo.app.DecisionTree$Question,com.murrayc.galaxyzoo.app.DecisionTree$Answer) -> o
    void -wrap1(com.murrayc.galaxyzoo.app.DecisionTree$Question,com.murrayc.galaxyzoo.app.DecisionTree$Checkbox) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi24Impl -> android.support.v4.a.a.s:
    void <init>() -> <init>
android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl -> android.support.v4.widget.af:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter -> android.support.v7.widget.ax:
    android.support.v7.view.menu.MenuBuilder mMenu -> a
    android.support.v7.view.menu.MenuItemImpl mCurrentExpandedItem -> b
    android.support.v7.widget.Toolbar this$0 -> c
    void <init>(android.support.v7.widget.Toolbar) -> <init>
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> c
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> d
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> e
    boolean flagActionItems() -> f
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> g
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> h
    void <init>(android.support.v7.widget.Toolbar,android.support.v7.widget.Toolbar$1) -> <init>
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.o.a.c:
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> u
    android.support.v4.view.ActionProvider getSupportActionProvider() -> t
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> v
com.squareup.picasso.BitmapHunter$5 -> com.squareup.a.be:
    com.squareup.picasso.Transformation val$transformation -> a
    void <init>(com.squareup.picasso.Transformation) -> <init>
    void run() -> run
android.support.v7.widget.AppCompatPopupWindow$1 -> android.support.v7.widget.ci:
    java.lang.reflect.Field val$fieldAnchor -> a
    android.widget.PopupWindow val$popup -> b
    android.view.ViewTreeObserver$OnScrollChangedListener val$originalListener -> c
    void <init>(java.lang.reflect.Field,android.widget.PopupWindow,android.view.ViewTreeObserver$OnScrollChangedListener) -> <init>
    void onScrollChanged() -> onScrollChanged
android.support.v7.widget.RecyclerView$ViewFlinger -> android.support.v7.widget.w:
    int mLastFlingX -> a
    int mLastFlingY -> b
    android.support.v4.widget.ScrollerCompat mScroller -> c
    android.view.animation.Interpolator mInterpolator -> d
    boolean mEatRunOnAnimationRequest -> e
    boolean mReSchedulePostAnimationCallback -> f
    android.support.v7.widget.RecyclerView this$0 -> g
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void run() -> run
    void disableRunOnAnimationRequests() -> a
    void enableRunOnAnimationRequests() -> b
    void postOnAnimation() -> c
    void fling(int,int) -> d
    void smoothScrollBy(int,int) -> e
    void smoothScrollBy(int,int,int,int) -> f
    float distanceInfluenceForSnapDuration(float) -> g
    int computeScrollDuration(int,int,int,int) -> h
    void smoothScrollBy(int,int,int) -> i
    void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> j
    void stop() -> k
android.support.v7.widget.OrientationHelper$1 -> android.support.v7.widget.gy:
    void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    int getEndAfterPadding() -> j
    int getEnd() -> k
    void offsetChildren(int) -> l
    int getStartAfterPadding() -> i
    int getDecoratedMeasurement(android.view.View) -> g
    int getDecoratedMeasurementInOther(android.view.View) -> h
    int getDecoratedEnd(android.view.View) -> d
    int getDecoratedStart(android.view.View) -> c
    int getTransformedEndWithDecoration(android.view.View) -> e
    int getTransformedStartWithDecoration(android.view.View) -> f
    int getTotalSpace() -> m
    int getEndPadding() -> n
    int getMode() -> o
    int getModeInOther() -> p
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase -> android.support.v4.a.eb:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
    android.support.v4.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater) -> a
android.support.v4.app.ActivityCompatApi23 -> android.support.v4.b.v:
    void <init>() -> <init>
    void requestPermissions(android.app.Activity,java.lang.String[],int) -> a
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.b.ad:
    void <init>() -> <init>
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> b
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> c
    void navigateUpTo(android.app.Activity,android.content.Intent) -> d
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> e
android.support.v7.widget.ViewUtils -> android.support.v7.widget.eo:
    java.lang.reflect.Method sComputeFitSystemWindowsMethod -> a
    void <init>() -> <init>
    boolean isLayoutRtl(android.view.View) -> a
    int combineMeasuredStates(int,int) -> b
    void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> c
    void makeOptionalFitsSystemWindows(android.view.View) -> d
    void <clinit>() -> <clinit>
com.murrayc.galaxyzoo.app.Singleton$Callbacks -> com.murrayc.galaxyzoo.app.w:
    void onInitialized() -> a
android.support.v4.view.ViewCompatICSMr1 -> android.support.v4.a.at:
    void <init>() -> <init>
    boolean hasOnClickListeners(android.view.View) -> a
com.squareup.picasso.Dispatcher$DispatcherHandler$1 -> com.squareup.a.aa:
    android.os.Message val$msg -> a
    com.squareup.picasso.Dispatcher$DispatcherHandler this$0 -> b
    void <init>(com.squareup.picasso.Dispatcher$DispatcherHandler,android.os.Message) -> <init>
    void run() -> run
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.b.bt:
    void <init>() -> <init>
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.b.bf:
    android.support.v4.app.FragmentActivity this$0 -> a
    void <init>(android.support.v4.app.FragmentActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.UrlConnectionDownloader -> com.squareup.a.bs:
    java.lang.Object cache -> a
    java.lang.Object lock -> b
    java.lang.ThreadLocal CACHE_HEADER_BUILDER -> c
    android.content.Context context -> d
    void <init>(android.content.Context) -> <init>
    java.net.HttpURLConnection openConnection(android.net.Uri) -> a
    com.squareup.picasso.Downloader$Response load(android.net.Uri,int) -> a
    void installCacheIfNeeded(android.content.Context) -> b
    void <clinit>() -> <clinit>
com.murrayc.galaxyzoo.app.provider.client.ZooStringRequest -> com.murrayc.galaxyzoo.app.provider.a.c:
    void <init>(int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    java.util.Map getHeaders() -> a
android.support.v7.app.AlertController$AlertParams$1 -> android.support.v7.c.ar:
    android.widget.ListView val$listView -> a
    android.support.v7.app.AlertController$AlertParams this$0 -> b
    void <init>(android.support.v7.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],android.widget.ListView) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> android.support.v7.widget.gw:
    int mPosition -> a
    int mGapDir -> b
    int[] mGapPerSpan -> c
    boolean mHasUnwantedGapAfter -> d
    android.os.Parcelable$Creator CREATOR -> e
    void <init>(android.os.Parcel) -> <init>
    void <init>() -> <init>
    int getGapForSpan(int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.murrayc.galaxyzoo.app.ClassifyActivity$RequestSyncTask -> com.murrayc.galaxyzoo.app.aw:
    java.lang.ref.WeakReference mContextReference -> a
    void <init>(android.content.Context) -> <init>
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onCancelled() -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.squareup.picasso.Picasso$LoadedFrom -> com.squareup.a.c:
    com.squareup.picasso.Picasso$LoadedFrom MEMORY -> a
    com.squareup.picasso.Picasso$LoadedFrom DISK -> b
    com.squareup.picasso.Picasso$LoadedFrom NETWORK -> c
    int debugColor -> d
    com.squareup.picasso.Picasso$LoadedFrom[] $VALUES -> e
    com.squareup.picasso.Picasso$LoadedFrom[] values() -> values
    com.squareup.picasso.Picasso$LoadedFrom valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    void <clinit>() -> <clinit>
android.support.v7.view.menu.CascadingMenuPopup -> android.support.v7.view.menu.af:
    android.content.Context mContext -> a
    int mMenuMaxWidth -> b
    int mPopupStyleAttr -> c
    int mPopupStyleRes -> d
    boolean mOverflowOnly -> e
    android.os.Handler mSubMenuHoverHandler -> f
    java.util.List mPendingMenus -> g
    java.util.List mShowingMenus -> h
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> i
    android.support.v7.widget.MenuItemHoverListener mMenuItemHoverListener -> j
    int mRawDropDownGravity -> k
    int mDropDownGravity -> l
    android.view.View mAnchorView -> m
    android.view.View mShownAnchorView -> n
    int mLastPosition -> o
    boolean mHasXOffset -> p
    boolean mHasYOffset -> q
    int mXOffset -> r
    int mYOffset -> s
    boolean mForceShowIcon -> t
    boolean mShowTitle -> u
    android.support.v7.view.menu.MenuPresenter$Callback mPresenterCallback -> v
    android.view.ViewTreeObserver mTreeObserver -> w
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> x
    boolean mShouldCloseImmediately -> y
    void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    void setForceShowIcon(boolean) -> a
    android.support.v7.widget.MenuPopupWindow createPopupWindow() -> a
    void show() -> t
    void dismiss() -> u
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int getInitialMenuPosition() -> c
    int getNextMenuPosition(int) -> d
    void addMenu(android.support.v7.view.menu.MenuBuilder) -> d
    void showMenu(android.support.v7.view.menu.MenuBuilder) -> e
    android.view.MenuItem findMenuItemForSubmenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuBuilder) -> f
    android.view.View findParentViewForSubmenu(android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.support.v7.view.menu.MenuBuilder) -> g
    boolean isShowing() -> aa
    void onDismiss() -> onDismiss
    void updateMenuView(boolean) -> b
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> c
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> d
    int findIndexOfAddedMenu(android.support.v7.view.menu.MenuBuilder) -> h
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> e
    boolean flagActionItems() -> f
    void setGravity(int) -> b
    void setAnchorView(android.view.View) -> e
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> f
    android.widget.ListView getListView() -> ac
    void setHorizontalOffset(int) -> g
    void setVerticalOffset(int) -> h
    void setShowTitle(boolean) -> i
    boolean closeMenuOnSubMenuOpened() -> g
    java.util.List access$000(android.support.v7.view.menu.CascadingMenuPopup) -> i
    android.view.View access$100(android.support.v7.view.menu.CascadingMenuPopup) -> j
    android.os.Handler access$200(android.support.v7.view.menu.CascadingMenuPopup) -> k
    boolean access$302(android.support.v7.view.menu.CascadingMenuPopup,boolean) -> l
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl24 -> android.support.v4.b.ah:
    android.support.v4.app.ActivityOptionsCompat24 mImpl -> a
    void <init>(android.support.v4.app.ActivityOptionsCompat24) -> <init>
    android.os.Bundle toBundle() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.b.av:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
    void <init>() -> <init>
android.support.design.R$layout -> android.support.design.g:
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_up_container -> abc_action_bar_up_container
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item_material -> abc_action_mode_close_item_material
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_alert_dialog_button_bar_material -> abc_alert_dialog_button_bar_material
    int abc_alert_dialog_material -> abc_alert_dialog_material
    int abc_dialog_title_material -> abc_dialog_title_material
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_header_item_layout -> abc_popup_menu_header_item_layout
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen_content_include -> abc_screen_content_include
    int abc_screen_simple -> abc_screen_simple
    int abc_screen_simple_overlay_action_mode -> abc_screen_simple_overlay_action_mode
    int abc_screen_toolbar -> abc_screen_toolbar
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_select_dialog_material -> abc_select_dialog_material
    int design_bottom_sheet_dialog -> design_bottom_sheet_dialog
    int design_layout_snackbar -> design_layout_snackbar
    int design_layout_snackbar_include -> design_layout_snackbar_include
    int design_layout_tab_icon -> design_layout_tab_icon
    int design_layout_tab_text -> design_layout_tab_text
    int design_menu_item_action_area -> design_menu_item_action_area
    int design_navigation_item -> design_navigation_item
    int design_navigation_item_header -> design_navigation_item_header
    int design_navigation_item_separator -> design_navigation_item_separator
    int design_navigation_item_subheader -> design_navigation_item_subheader
    int design_navigation_menu -> design_navigation_menu
    int design_navigation_menu_item -> design_navigation_menu_item
    int design_text_input_password_icon -> design_text_input_password_icon
    int notification_media_action -> notification_media_action
    int notification_media_cancel_action -> notification_media_cancel_action
    int notification_template_big_media -> notification_template_big_media
    int notification_template_big_media_narrow -> notification_template_big_media_narrow
    int notification_template_lines -> notification_template_lines
    int notification_template_media -> notification_template_media
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    int select_dialog_item_material -> select_dialog_item_material
    int select_dialog_multichoice_material -> select_dialog_multichoice_material
    int select_dialog_singlechoice_material -> select_dialog_singlechoice_material
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
    void <init>() -> <init>
com.squareup.picasso.MarkableInputStream -> com.squareup.a.bn:
    java.io.InputStream in -> a
    long offset -> b
    long reset -> c
    long limit -> d
    long defaultMark -> e
    void <init>(java.io.InputStream) -> <init>
    void <init>(java.io.InputStream,int) -> <init>
    void mark(int) -> mark
    long savePosition(int) -> a
    void setLimit(long) -> b
    void reset() -> reset
    void reset(long) -> c
    void skip(long,long) -> d
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void close() -> close
    boolean markSupported() -> markSupported
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.d.e:
    android.support.v4.content.Loader this$0 -> a
    void <init>(android.support.v4.content.Loader) -> <init>
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.b.l:
    android.content.Intent getSupportParentActivityIntent() -> q
com.murrayc.galaxyzoo.app.ListActivity -> com.murrayc.galaxyzoo.app.ListActivity:
    void <init>() -> <init>
    void navigate(java.lang.String,boolean,android.view.View) -> a
    void navigateToNextAvailable() -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onItemSelected(java.lang.String,boolean,android.view.View) -> b
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.android.volley.toolbox.HttpClientStack -> com.android.a.a.k:
    HttpClient mClient -> a
    void <init>(HttpClient) -> <init>
    void addHeaders(HttpUriRequest,java.util.Map) -> a
    HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> a
    HttpUriRequest createHttpRequest(com.android.volley.Request,java.util.Map) -> b
    void setEntityIfNonEmptyBody(HttpEntityEnclosingRequestBase,com.android.volley.Request) -> c
    void onPrepareRequest(HttpUriRequest) -> d
com.squareup.leakcanary.LeakCanary -> com.squareup.b.a:
    com.squareup.leakcanary.RefWatcher install(android.app.Application) -> a
    void <init>() -> <init>
android.support.v4.view.ViewCompat$JbMr2ViewCompatImpl -> android.support.v4.a.x:
    void <init>() -> <init>
android.support.v7.widget.AppCompatDrawableManager$InflateDelegate -> android.support.v7.widget.eu:
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
com.murrayc.galaxyzoo.app.ClassifyFragment -> com.murrayc.galaxyzoo.app.j:
    com.murrayc.galaxyzoo.app.ClassifyFragment$Callbacks mCallbacks -> a
    java.lang.String[] mColumns -> b
    android.database.Cursor mCursor -> c
    boolean mGetNextInProgress -> d
    android.view.View mLoadingView -> e
    android.view.View mRootView -> f
    com.murrayc.galaxyzoo.app.ClassifyFragment$Callbacks sDummyCallbacks -> g
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>() -> <init>
    void addOrUpdateChildFragments() -> a
    void hideAll() -> b
    void listenForNetworkReconnection() -> c
    void onAttach(android.content.Context) -> b
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> b
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> d
    void onDetach() -> d
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> d
    void onLoaderReset(android.support.v4.content.Loader) -> f
    void onSingletonInitialized() -> g
    void showChildFragments(boolean) -> e
    void showLoadingInProgress(boolean) -> f
    void showLoadingView(boolean) -> g
    void update() -> h
    void updateFromCursor() -> i
    void warnAboutNetworkProblemWithRetry() -> j
    void <clinit>() -> <clinit>
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> k
android.support.v4.view.ViewPropertyAnimatorListenerAdapter -> android.support.v4.a.bh:
    void <init>() -> <init>
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperStateBase -> android.support.v4.j.a.h:
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
android.support.v7.widget.MenuPopupWindow -> android.support.v7.widget.fx:
    java.lang.reflect.Method sSetTouchModalMethod -> a
    android.support.v7.widget.MenuItemHoverListener mHoverListener -> b
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    android.support.v7.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> ad
    void setEnterTransition(java.lang.Object) -> a
    void setExitTransition(java.lang.Object) -> b
    void setHoverListener(android.support.v7.widget.MenuItemHoverListener) -> c
    void setTouchModal(boolean) -> d
    void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> b
    void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void <clinit>() -> <clinit>
android.support.v7.widget.AppCompatBackgroundHelper$BackgroundTintInfo -> android.support.v7.widget.cw:
    android.content.res.ColorStateList mOriginalTintList -> a
    void <init>() -> <init>
    void clear() -> a
    void <init>(android.support.v7.widget.AppCompatBackgroundHelper$1) -> <init>
android.support.v7.widget.RecyclerView$OnItemTouchListener -> android.support.v7.widget.o:
    boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> a
    void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> b
    void onRequestDisallowInterceptTouchEvent(boolean) -> c
com.squareup.picasso.MemoryPolicy -> com.squareup.a.v:
    com.squareup.picasso.MemoryPolicy NO_CACHE -> a
    com.squareup.picasso.MemoryPolicy NO_STORE -> b
    int index -> c
    com.squareup.picasso.MemoryPolicy[] $VALUES -> d
    com.squareup.picasso.MemoryPolicy[] values() -> values
    com.squareup.picasso.MemoryPolicy valueOf(java.lang.String) -> valueOf
    boolean shouldReadFromMemoryCache(int) -> a
    boolean shouldWriteToMemoryCache(int) -> b
    void <init>(java.lang.String,int,int) -> <init>
    void <clinit>() -> <clinit>
com.squareup.picasso.NetworkPolicy -> com.squareup.a.w:
    com.squareup.picasso.NetworkPolicy NO_CACHE -> a
    com.squareup.picasso.NetworkPolicy NO_STORE -> b
    com.squareup.picasso.NetworkPolicy OFFLINE -> c
    int index -> d
    com.squareup.picasso.NetworkPolicy[] $VALUES -> e
    com.squareup.picasso.NetworkPolicy[] values() -> values
    com.squareup.picasso.NetworkPolicy valueOf(java.lang.String) -> valueOf
    boolean shouldReadFromDiskCache(int) -> a
    boolean shouldWriteToDiskCache(int) -> b
    boolean isOfflineOnly(int) -> c
    void <init>(java.lang.String,int,int) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.j.a.t:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> b
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> d
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> e
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> f
    void setTint(android.graphics.drawable.Drawable,int) -> g
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> h
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> i
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> c
    boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> a
    int getLayoutDirection(android.graphics.drawable.Drawable) -> b
    int getAlpha(android.graphics.drawable.Drawable) -> j
    void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> k
    boolean canApplyTheme(android.graphics.drawable.Drawable) -> l
    android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> m
    void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> n
android.support.v7.content.res.AppCompatResources -> android.support.v7.f.a.d:
    java.lang.ThreadLocal TL_TYPED_VALUE -> a
    java.util.WeakHashMap sColorStateCaches -> b
    java.lang.Object sColorStateCacheLock -> c
    void <init>() -> <init>
    android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> a
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> b
    android.content.res.ColorStateList inflateColorStateList(android.content.Context,int) -> c
    android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int) -> d
    void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList) -> e
    boolean isColorInt(android.content.Context,int) -> f
    android.util.TypedValue getTypedValue() -> g
    void <clinit>() -> <clinit>
android.support.v4.view.MotionEventCompat$ICSMotionEventVersionImpl -> android.support.v4.a.cc:
    void <init>() -> <init>
    void <init>(android.support.v4.view.MotionEventCompat$1) -> <init>
android.support.v4.graphics.drawable.DrawableWrapperKitKat -> android.support.v4.j.a.p:
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources) -> <init>
    void setAutoMirrored(boolean) -> setAutoMirrored
    boolean isAutoMirrored() -> isAutoMirrored
    android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState() -> c
android.support.v7.appcompat.R$drawable -> android.support.v7.a.e:
    int abc_ab_share_pack_mtrl_alpha -> abc_ab_share_pack_mtrl_alpha
    int abc_action_bar_item_background_material -> abc_action_bar_item_background_material
    int abc_btn_borderless_material -> abc_btn_borderless_material
    int abc_btn_check_material -> abc_btn_check_material
    int abc_btn_check_to_on_mtrl_000 -> abc_btn_check_to_on_mtrl_000
    int abc_btn_check_to_on_mtrl_015 -> abc_btn_check_to_on_mtrl_015
    int abc_btn_colored_material -> abc_btn_colored_material
    int abc_btn_default_mtrl_shape -> abc_btn_default_mtrl_shape
    int abc_btn_radio_material -> abc_btn_radio_material
    int abc_btn_radio_to_on_mtrl_000 -> abc_btn_radio_to_on_mtrl_000
    int abc_btn_radio_to_on_mtrl_015 -> abc_btn_radio_to_on_mtrl_015
    int abc_btn_switch_to_on_mtrl_00001 -> abc_btn_switch_to_on_mtrl_00001
    int abc_btn_switch_to_on_mtrl_00012 -> abc_btn_switch_to_on_mtrl_00012
    int abc_cab_background_internal_bg -> abc_cab_background_internal_bg
    int abc_cab_background_top_material -> abc_cab_background_top_material
    int abc_cab_background_top_mtrl_alpha -> abc_cab_background_top_mtrl_alpha
    int abc_control_background_material -> abc_control_background_material
    int abc_dialog_material_background -> abc_dialog_material_background
    int abc_edit_text_material -> abc_edit_text_material
    int abc_ic_ab_back_material -> abc_ic_ab_back_material
    int abc_ic_arrow_drop_right_black_24dp -> abc_ic_arrow_drop_right_black_24dp
    int abc_ic_clear_material -> abc_ic_clear_material
    int abc_ic_commit_search_api_mtrl_alpha -> abc_ic_commit_search_api_mtrl_alpha
    int abc_ic_go_search_api_material -> abc_ic_go_search_api_material
    int abc_ic_menu_copy_mtrl_am_alpha -> abc_ic_menu_copy_mtrl_am_alpha
    int abc_ic_menu_cut_mtrl_alpha -> abc_ic_menu_cut_mtrl_alpha
    int abc_ic_menu_overflow_material -> abc_ic_menu_overflow_material
    int abc_ic_menu_paste_mtrl_am_alpha -> abc_ic_menu_paste_mtrl_am_alpha
    int abc_ic_menu_selectall_mtrl_alpha -> abc_ic_menu_selectall_mtrl_alpha
    int abc_ic_menu_share_mtrl_alpha -> abc_ic_menu_share_mtrl_alpha
    int abc_ic_search_api_material -> abc_ic_search_api_material
    int abc_ic_star_black_16dp -> abc_ic_star_black_16dp
    int abc_ic_star_black_36dp -> abc_ic_star_black_36dp
    int abc_ic_star_black_48dp -> abc_ic_star_black_48dp
    int abc_ic_star_half_black_16dp -> abc_ic_star_half_black_16dp
    int abc_ic_star_half_black_36dp -> abc_ic_star_half_black_36dp
    int abc_ic_star_half_black_48dp -> abc_ic_star_half_black_48dp
    int abc_ic_voice_search_api_material -> abc_ic_voice_search_api_material
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_mtrl_alpha -> abc_list_divider_mtrl_alpha
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_hardkey_panel_mtrl_mult -> abc_menu_hardkey_panel_mtrl_mult
    int abc_popup_background_mtrl_mult -> abc_popup_background_mtrl_mult
    int abc_ratingbar_indicator_material -> abc_ratingbar_indicator_material
    int abc_ratingbar_material -> abc_ratingbar_material
    int abc_ratingbar_small_material -> abc_ratingbar_small_material
    int abc_scrubber_control_off_mtrl_alpha -> abc_scrubber_control_off_mtrl_alpha
    int abc_scrubber_control_to_pressed_mtrl_000 -> abc_scrubber_control_to_pressed_mtrl_000
    int abc_scrubber_control_to_pressed_mtrl_005 -> abc_scrubber_control_to_pressed_mtrl_005
    int abc_scrubber_primary_mtrl_alpha -> abc_scrubber_primary_mtrl_alpha
    int abc_scrubber_track_mtrl_alpha -> abc_scrubber_track_mtrl_alpha
    int abc_seekbar_thumb_material -> abc_seekbar_thumb_material
    int abc_seekbar_tick_mark_material -> abc_seekbar_tick_mark_material
    int abc_seekbar_track_material -> abc_seekbar_track_material
    int abc_spinner_mtrl_am_alpha -> abc_spinner_mtrl_am_alpha
    int abc_spinner_textfield_background_material -> abc_spinner_textfield_background_material
    int abc_switch_thumb_material -> abc_switch_thumb_material
    int abc_switch_track_mtrl_alpha -> abc_switch_track_mtrl_alpha
    int abc_tab_indicator_material -> abc_tab_indicator_material
    int abc_tab_indicator_mtrl_alpha -> abc_tab_indicator_mtrl_alpha
    int abc_text_cursor_material -> abc_text_cursor_material
    int abc_text_select_handle_left_mtrl_alpha -> abc_text_select_handle_left_mtrl_alpha
    int abc_text_select_handle_middle_mtrl_alpha -> abc_text_select_handle_middle_mtrl_alpha
    int abc_text_select_handle_right_mtrl_alpha -> abc_text_select_handle_right_mtrl_alpha
    int abc_textfield_activated_mtrl_alpha -> abc_textfield_activated_mtrl_alpha
    int abc_textfield_default_mtrl_alpha -> abc_textfield_default_mtrl_alpha
    int abc_textfield_search_activated_mtrl_alpha -> abc_textfield_search_activated_mtrl_alpha
    int abc_textfield_search_default_mtrl_alpha -> abc_textfield_search_default_mtrl_alpha
    int abc_textfield_search_material -> abc_textfield_search_material
    int abc_vector_test -> abc_vector_test
    int notification_template_icon_bg -> notification_template_icon_bg
    void <init>() -> <init>
android.support.v4.content.res.ConfigurationHelper$1 -> android.support.v4.d.a.e:
com.squareup.picasso.FileRequestHandler -> com.squareup.a.bb:
    void <init>(android.content.Context) -> <init>
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> b
    int getFileExifRotation(android.net.Uri) -> a
android.support.v4.app.Fragment -> android.support.v4.b.a:
    android.support.v4.util.SimpleArrayMap sClassMap -> a
    java.lang.Object USE_DEFAULT_TRANSITION -> b
    int mState -> c
    android.view.View mAnimatingAway -> d
    int mStateAfterAnimating -> e
    android.os.Bundle mSavedFragmentState -> f
    android.util.SparseArray mSavedViewState -> g
    int mIndex -> h
    java.lang.String mWho -> i
    android.os.Bundle mArguments -> j
    android.support.v4.app.Fragment mTarget -> k
    int mTargetIndex -> l
    int mTargetRequestCode -> m
    boolean mAdded -> n
    boolean mRemoving -> o
    boolean mFromLayout -> p
    boolean mInLayout -> q
    boolean mRestored -> r
    int mBackStackNesting -> s
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> t
    android.support.v4.app.FragmentHostCallback mHost -> u
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> v
    android.support.v4.app.FragmentManagerNonConfig mChildNonConfig -> w
    android.support.v4.app.Fragment mParentFragment -> x
    int mFragmentId -> y
    int mContainerId -> z
    java.lang.String mTag -> aa
    boolean mHidden -> ab
    boolean mDetached -> ac
    boolean mRetainInstance -> ad
    boolean mRetaining -> ae
    boolean mHasMenu -> af
    boolean mMenuVisible -> ag
    boolean mCalled -> ah
    int mNextAnim -> ai
    android.view.ViewGroup mContainer -> aj
    android.view.View mView -> ak
    android.view.View mInnerView -> al
    boolean mDeferStart -> am
    boolean mUserVisibleHint -> an
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> ao
    boolean mLoadersStarted -> ap
    boolean mCheckedForLoaderManager -> aq
    java.lang.Object mEnterTransition -> ar
    java.lang.Object mReturnTransition -> as
    java.lang.Object mExitTransition -> at
    java.lang.Object mReenterTransition -> au
    java.lang.Object mSharedElementEnterTransition -> av
    java.lang.Object mSharedElementReturnTransition -> aw
    java.lang.Boolean mAllowReturnTransitionOverlap -> ax
    java.lang.Boolean mAllowEnterTransitionOverlap -> ay
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> az
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> ba
    void <init>() -> <init>
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> b
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> c
    void restoreViewState(android.os.Bundle) -> d
    void setIndex(int,android.support.v4.app.Fragment) -> e
    boolean isInBackStack() -> o
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setArguments(android.os.Bundle) -> p
    android.os.Bundle getArguments() -> r
    android.support.v4.app.FragmentActivity getActivity() -> s
    android.content.res.Resources getResources() -> t
    java.lang.CharSequence getText(int) -> u
    java.lang.String getString(int) -> v
    android.support.v4.app.FragmentManager getChildFragmentManager() -> w
    boolean isAdded() -> x
    boolean isHidden() -> y
    void onHiddenChanged(boolean) -> z
    void setHasOptionsMenu(boolean) -> aa
    android.support.v4.app.LoaderManager getLoaderManager() -> ab
    void startActivity(android.content.Intent) -> ac
    void startActivity(android.content.Intent,android.os.Bundle) -> ad
    void onActivityResult(int,int,android.content.Intent) -> ae
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> af
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> ag
    void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> ah
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> ai
    void onAttachFragment(android.support.v4.app.Fragment) -> aj
    void onAttach(android.content.Context) -> b
    void onAttach(android.app.Activity) -> ak
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> al
    void onCreate(android.os.Bundle) -> c
    void restoreChildFragmentState(android.os.Bundle) -> am
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> d
    void onViewCreated(android.view.View,android.os.Bundle) -> an
    android.view.View getView() -> ao
    void onActivityCreated(android.os.Bundle) -> ap
    void onViewStateRestored(android.os.Bundle) -> aq
    void onStart() -> ar
    void onResume() -> q
    void onSaveInstanceState(android.os.Bundle) -> k
    void onMultiWindowModeChanged(boolean) -> as
    void onPictureInPictureModeChanged(boolean) -> at
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> m
    void onStop() -> au
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> av
    void onDestroy() -> aw
    void initState() -> ax
    void onDetach() -> d
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> c
    void onPrepareOptionsMenu(android.view.Menu) -> m
    void onDestroyOptionsMenu() -> ay
    boolean onOptionsItemSelected(android.view.MenuItem) -> g
    void onOptionsMenuClosed(android.view.Menu) -> az
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> ba
    java.lang.Object getEnterTransition() -> bb
    java.lang.Object getReturnTransition() -> bc
    java.lang.Object getExitTransition() -> bd
    java.lang.Object getReenterTransition() -> be
    java.lang.Object getSharedElementEnterTransition() -> bf
    java.lang.Object getSharedElementReturnTransition() -> bg
    boolean getAllowEnterTransitionOverlap() -> bh
    boolean getAllowReturnTransitionOverlap() -> bi
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> bj
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> bk
    void instantiateChildFragmentManager() -> bl
    void performCreate(android.os.Bundle) -> bm
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> bn
    void performActivityCreated(android.os.Bundle) -> bo
    void performStart() -> bp
    void performResume() -> bq
    void performMultiWindowModeChanged(boolean) -> br
    void performPictureInPictureModeChanged(boolean) -> bs
    void performConfigurationChanged(android.content.res.Configuration) -> bt
    void performLowMemory() -> bu
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> bv
    boolean performPrepareOptionsMenu(android.view.Menu) -> bw
    boolean performOptionsItemSelected(android.view.MenuItem) -> bx
    boolean performContextItemSelected(android.view.MenuItem) -> by
    void performOptionsMenuClosed(android.view.Menu) -> bz
    void performSaveInstanceState(android.os.Bundle) -> ca
    void performPause() -> cb
    void performStop() -> cc
    void performReallyStop() -> cd
    void performDestroyView() -> ce
    void performDestroy() -> cf
    void performDetach() -> cg
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.a.a.aj:
    void <init>() -> <init>
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$1) -> <init>
android.support.v7.app.AppCompatDelegateImplV14 -> android.support.v7.c.u:
    int mLocalNightMode -> a
    boolean mApplyDayNightCalled -> b
    boolean mHandleNativeActionModes -> c
    android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager mAutoNightModeManager -> d
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    void onCreate(android.os.Bundle) -> g
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> a
    boolean isHandleNativeActionModesEnabled() -> a
    boolean applyDayNight() -> x
    void onStart() -> j
    void onStop() -> k
    int mapNightMode(int) -> b
    int getNightMode() -> c
    void onSaveInstanceState(android.os.Bundle) -> w
    void onDestroy() -> t
    boolean updateForNightMode(int) -> d
    void ensureAutoNightModeManager() -> e
    boolean shouldRecreateOnNightModeChange() -> g
android.support.v4.content.res.ConfigurationHelperHoneycombMr2 -> android.support.v4.d.a.b:
    void <init>() -> <init>
    int getScreenHeightDp(android.content.res.Resources) -> a
    int getScreenWidthDp(android.content.res.Resources) -> b
    int getSmallestScreenWidthDp(android.content.res.Resources) -> c
android.support.v7.widget.AppCompatBackgroundHelper$1 -> android.support.v7.widget.ew:
android.support.design.widget.CheckableImageButton -> android.support.design.widget.CheckableImageButton:
    int[] DRAWABLE_STATE_CHECKED -> a
    boolean mChecked -> b
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    void toggle() -> toggle
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void <clinit>() -> <clinit>
android.support.v7.widget.AppCompatMultiAutoCompleteTextView -> android.support.v7.widget.er:
    int[] TINT_ATTRS -> a
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> c
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void <clinit>() -> <clinit>
android.support.design.widget.FloatingActionButtonImpl -> android.support.design.widget.bn:
    android.view.animation.Interpolator ANIM_INTERPOLATOR -> a
    int mAnimState -> b
    android.graphics.drawable.Drawable mShapeDrawable -> c
    android.graphics.drawable.Drawable mRippleDrawable -> d
    android.support.design.widget.CircularBorderDrawable mBorderDrawable -> e
    android.graphics.drawable.Drawable mContentBackground -> f
    float mElevation -> g
    float mPressedTranslationZ -> h
    int[] PRESSED_ENABLED_STATE_SET -> i
    int[] FOCUSED_ENABLED_STATE_SET -> j
    int[] ENABLED_STATE_SET -> k
    int[] EMPTY_STATE_SET -> l
    android.support.design.widget.VisibilityAwareImageButton mView -> m
    android.support.design.widget.ShadowViewDelegate mShadowViewDelegate -> n
    android.support.design.widget.ValueAnimatorCompat$Creator mAnimatorCreator -> o
    android.graphics.Rect mTmpRect -> p
    android.view.ViewTreeObserver$OnPreDrawListener mPreDrawListener -> q
    void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate,android.support.design.widget.ValueAnimatorCompat$Creator) -> <init>
    void setBackgroundTintList(android.content.res.ColorStateList) -> a
    void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> b
    void setRippleColor(int) -> c
    void setElevation(float) -> a
    float getElevation() -> d
    void onElevationsChanged(float,float) -> e
    void onDrawableStateChanged(int[]) -> f
    void jumpDrawableToCurrentState() -> g
    void hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> h
    void show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> i
    android.graphics.drawable.Drawable getContentBackground() -> c
    void onCompatShadowChanged() -> j
    void updatePadding() -> e
    void getPadding(android.graphics.Rect) -> k
    void onPaddingUpdated(android.graphics.Rect) -> a
    void onAttachedToWindow() -> f
    void onDetachedFromWindow() -> h
    boolean requirePreDrawListener() -> b
    void onPreDraw() -> i
    void ensurePreDrawListener() -> k
    boolean isOrWillBeShown() -> l
    boolean isOrWillBeHidden() -> m
    void <clinit>() -> <clinit>
android.support.v7.app.AppCompatDelegateImplV9$4 -> android.support.v7.c.az:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    void onAttachedFromWindow() -> b
    void onDetachedFromWindow() -> a
android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback -> android.support.v7.widget.em:
    android.support.v7.widget.ActionMenuPresenter this$0 -> a
    void <init>(android.support.v7.widget.ActionMenuPresenter) -> <init>
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> b
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> a
    void <init>(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$1) -> <init>
android.support.v4.app.FragmentActivity -> android.support.v4.b.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentController mFragments -> b
    boolean mCreated -> c
    boolean mResumed -> d
    boolean mStopped -> e
    boolean mReallyStopped -> f
    boolean mRetaining -> g
    boolean mOptionsMenuInvalidated -> h
    boolean mRequestedPermissionsFromFragment -> i
    int mNextCandidateRequestIndex -> j
    android.support.v4.util.SparseArrayCompat mPendingFragmentActivityResults -> k
    void <init>() -> <init>
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStateNotSaved() -> onStateNotSaved
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> o
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> b
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> i
    void supportInvalidateOptionsMenu() -> j
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> j
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> k
    void doReallyStop(boolean) -> l
    void onReallyStop() -> m
    void onAttachFragment(android.support.v4.app.Fragment) -> n
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> r
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void validateRequestPermissionsRequestCode(int) -> s
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int,android.os.Bundle) -> t
    int allocateRequestIndex(android.support.v4.app.Fragment) -> u
    void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.widget.NestedScrollView -> android.support.v4.widget.NestedScrollView:
    long mLastScroll -> a
    android.graphics.Rect mTempRect -> b
    android.support.v4.widget.ScrollerCompat mScroller -> c
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop -> d
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom -> e
    int mLastMotionY -> f
    boolean mIsLayoutDirty -> g
    boolean mIsLaidOut -> h
    android.view.View mChildToScrollTo -> i
    boolean mIsBeingDragged -> j
    android.view.VelocityTracker mVelocityTracker -> k
    boolean mFillViewport -> l
    boolean mSmoothScrollingEnabled -> m
    int mTouchSlop -> n
    int mMinimumVelocity -> o
    int mMaximumVelocity -> p
    int mActivePointerId -> q
    int[] mScrollOffset -> r
    int[] mScrollConsumed -> s
    int mNestedYOffset -> t
    android.support.v4.widget.NestedScrollView$SavedState mSavedState -> u
    android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> v
    int[] SCROLLVIEW_STYLEABLE -> w
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> x
    android.support.v4.view.NestedScrollingChildHelper mChildHelper -> y
    float mVerticalScrollFactor -> z
    android.support.v4.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener -> aa
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    int getMaxScrollAmount() -> getMaxScrollAmount
    void initScrollView() -> a
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void setOnScrollChangeListener(android.support.v4.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    boolean canScroll() -> b
    void setFillViewport(boolean) -> setFillViewport
    void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void onMeasure(int,int) -> onMeasure
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> c
    boolean inChild(int,int) -> d
    void initOrResetVelocityTracker() -> e
    void initVelocityTrackerIfNotExists() -> f
    void recycleVelocityTracker() -> g
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> h
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> i
    int getScrollRange() -> getScrollRange
    android.view.View findFocusableViewInBounds(boolean,int,int) -> j
    boolean pageScroll(int) -> k
    boolean fullScroll(int) -> l
    boolean scrollAndFocus(int,int,int) -> m
    boolean arrowScroll(int) -> n
    boolean isOffScreen(android.view.View) -> o
    boolean isWithinDeltaOfScreen(android.view.View,int,int) -> p
    void doScrollY(int) -> q
    void smoothScrollBy(int,int) -> r
    void smoothScrollTo(int,int) -> s
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    void measureChild(android.view.View,int,int) -> measureChild
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void computeScroll() -> computeScroll
    void scrollToChild(android.view.View) -> t
    boolean scrollToChildRect(android.graphics.Rect,boolean) -> u
    int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> v
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void requestLayout() -> requestLayout
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAttachedToWindow() -> onAttachedToWindow
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean isViewDescendantOf(android.view.View,android.view.View) -> w
    void fling(int) -> x
    void flingWithNestedDispatch(int) -> y
    void endDrag() -> z
    void scrollTo(int,int) -> scrollTo
    void ensureGlows() -> aa
    void draw(android.graphics.Canvas) -> draw
    int clamp(int,int,int) -> ab
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int access$000(android.support.v4.widget.NestedScrollView) -> ac
    void <clinit>() -> <clinit>
android.support.v7.widget.AppCompatRatingBar -> android.support.v7.widget.fs:
    android.support.v7.widget.AppCompatProgressBarHelper mAppCompatProgressBarHelper -> a
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onMeasure(int,int) -> onMeasure
android.support.v7.app.ToolbarActionBar$1 -> android.support.v7.c.bd:
    android.support.v7.app.ToolbarActionBar this$0 -> a
    void <init>(android.support.v7.app.ToolbarActionBar) -> <init>
    void run() -> run
android.support.v4.view.ViewCompatMarshmallow -> android.support.v4.a.aw:
    void <init>() -> <init>
    void setScrollIndicators(android.view.View,int,int) -> a
    void offsetTopAndBottom(android.view.View,int) -> b
    void offsetLeftAndRight(android.view.View,int) -> c
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.a.cn:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> c
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> d
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> e
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> f
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> g
android.support.v7.view.menu.BaseMenuPresenter -> android.support.v7.view.menu.t:
    android.content.Context mSystemContext -> a
    android.content.Context mContext -> b
    android.support.v7.view.menu.MenuBuilder mMenu -> c
    android.view.LayoutInflater mSystemInflater -> d
    android.view.LayoutInflater mInflater -> e
    android.support.v7.view.menu.MenuPresenter$Callback mCallback -> f
    int mMenuLayoutRes -> g
    int mItemLayoutRes -> h
    android.support.v7.view.menu.MenuView mMenuView -> i
    int mId -> j
    void <init>(android.content.Context,int,int) -> <init>
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> a
    android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> h
    void updateMenuView(boolean) -> b
    void addItemView(android.view.View,int) -> a
    boolean filterLeftoverView(android.view.ViewGroup,int) -> l
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> c
    android.support.v7.view.menu.MenuPresenter$Callback getCallback() -> b
    android.support.v7.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> c
    android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> i
    void bindItemView(android.support.v7.view.menu.MenuItemImpl,android.support.v7.view.menu.MenuView$ItemView) -> j
    boolean shouldIncludeItem(int,android.support.v7.view.menu.MenuItemImpl) -> k
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> e
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> d
    boolean flagActionItems() -> f
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> g
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> h
    void setId(int) -> d
android.support.v7.app.AppCompatDelegateImplV23 -> android.support.v7.c.an:
    android.app.UiModeManager mUiModeManager -> a
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> a
    int mapNightMode(int) -> b
android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl -> android.support.v4.a.di:
    void <init>() -> <init>
    float getAxisValue(android.view.MotionEvent,int) -> a
com.murrayc.galaxyzoo.app.provider.client.MoreItemsJsonParser$Locations -> com.murrayc.galaxyzoo.app.provider.a.b:
    java.lang.String mLocationInverted -> a
    java.lang.String mLocationStandard -> b
    java.lang.String mLocationThumbnail -> c
    void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    java.lang.String getLocationInverted() -> a
    java.lang.String getLocationStandard() -> b
    java.lang.String getLocationThumbnail() -> c
android.support.v7.widget.ActionBarContextView -> android.support.v7.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> a
    java.lang.CharSequence mSubtitle -> b
    android.view.View mClose -> c
    android.view.View mCustomView -> d
    android.widget.LinearLayout mTitleLayout -> e
    android.widget.TextView mTitleView -> f
    android.widget.TextView mSubtitleView -> g
    int mTitleStyleRes -> h
    int mSubtitleStyleRes -> i
    boolean mTitleOptional -> j
    int mCloseItemLayout -> k
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> a
    void initForMode(android.support.v7.view.ActionMode) -> b
    void closeMode() -> c
    void killMode() -> d
    boolean showOverflowMenu() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void setTitleOptional(boolean) -> setTitleOptional
    boolean isTitleOptional() -> f
    void setVisibility(int) -> setVisibility
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> g
    int getAnimatedVisibility() -> getAnimatedVisibility
    int getContentHeight() -> getContentHeight
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.a.a.ak:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl,android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    boolean performAction(int,int,android.os.Bundle) -> b
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> c
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    java.lang.Object findFocus(int) -> d
android.support.v4.graphics.drawable.DrawableWrapperLollipop -> android.support.v4.j.a.k:
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources) -> <init>
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    void getOutline(android.graphics.Outline) -> getOutline
    android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTint(int) -> setTint
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean setState(int[]) -> setState
    boolean isCompatTintEnabled() -> g
    android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState() -> c
android.support.v4.widget.CompoundButtonCompat -> android.support.v4.widget.am:
    android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatImpl IMPL -> a
    void <init>() -> <init>
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> a
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> b
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> c
    void <clinit>() -> <clinit>
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.a.o:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> a
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> c
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.android.volley.ExecutorDelivery -> com.android.a.ac:
    java.util.concurrent.Executor mResponsePoster -> a
    void <init>(android.os.Handler) -> <init>
    void postResponse(com.android.volley.Request,com.android.volley.Response) -> a
    void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> b
    void postError(com.android.volley.Request,com.android.volley.VolleyError) -> c
android.support.v4.view.ViewCompatLollipop -> android.support.v4.a.bu:
    java.lang.ThreadLocal sThreadLocalRect -> a
    void <init>() -> <init>
    void setTransitionName(android.view.View,java.lang.String) -> a
    void requestApplyInsets(android.view.View) -> b
    void setElevation(android.view.View,float) -> c
    float getElevation(android.view.View) -> d
    float getTranslationZ(android.view.View) -> e
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.ViewCompatLollipop$OnApplyWindowInsetsListenerBridge) -> f
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> g
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> h
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> i
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> j
    java.lang.Object onApplyWindowInsets(android.view.View,java.lang.Object) -> k
    void stopNestedScroll(android.view.View) -> l
    float getZ(android.view.View) -> m
    void offsetTopAndBottom(android.view.View,int) -> n
    void offsetLeftAndRight(android.view.View,int) -> o
    android.graphics.Rect getEmptyTempRect() -> p
com.android.volley.toolbox.RequestFuture -> com.android.a.a.c:
    com.android.volley.Request mRequest -> a
    boolean mResultReceived -> b
    java.lang.Object mResult -> c
    com.android.volley.VolleyError mException -> d
    com.android.volley.toolbox.RequestFuture newFuture() -> a
    void <init>() -> <init>
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object doGet(java.lang.Long) -> b
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    void onResponse(java.lang.Object) -> b
    void onErrorResponse(com.android.volley.VolleyError) -> a
android.support.design.widget.StateListAnimator$1 -> android.support.design.widget.g:
    android.support.design.widget.StateListAnimator this$0 -> a
    void <init>(android.support.design.widget.StateListAnimator) -> <init>
    void onAnimationEnd(android.support.design.widget.ValueAnimatorCompat) -> a
android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl -> android.support.v4.widget.ag:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
android.support.v4.view.ViewPropertyAnimatorCompatKK$1 -> android.support.v4.a.bv:
    android.support.v4.view.ViewPropertyAnimatorUpdateListener val$listener -> a
    android.view.View val$view -> b
    void <init>(android.support.v4.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.squareup.picasso.BitmapHunter$4 -> com.squareup.a.ap:
    java.lang.StringBuilder val$builder -> a
    void <init>(java.lang.StringBuilder) -> <init>
    void run() -> run
android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor -> android.support.v7.widget.ce:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void <init>(android.support.v7.widget.ListPopupWindow,android.support.v7.widget.ListPopupWindow$1) -> <init>
android.support.v4.internal.view.SupportMenu -> android.support.v4.o.a.a:
com.squareup.picasso.NetworkRequestHandler -> com.squareup.a.ak:
    com.squareup.picasso.Downloader downloader -> a
    com.squareup.picasso.Stats stats -> b
    void <init>(com.squareup.picasso.Downloader,com.squareup.picasso.Stats) -> <init>
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> b
    int getRetryCount() -> c
    boolean shouldRetry(boolean,android.net.NetworkInfo) -> d
    boolean supportsReplay() -> e
com.android.volley.ResponseDelivery -> com.android.a.p:
    void postResponse(com.android.volley.Request,com.android.volley.Response) -> a
    void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> b
    void postError(com.android.volley.Request,com.android.volley.VolleyError) -> c
android.support.v7.view.menu.MenuPopupHelper -> android.support.v7.view.menu.ai:
    android.content.Context mContext -> a
    android.support.v7.view.menu.MenuBuilder mMenu -> b
    boolean mOverflowOnly -> c
    int mPopupStyleAttr -> d
    int mPopupStyleRes -> e
    android.view.View mAnchorView -> f
    int mDropDownGravity -> g
    boolean mForceShowIcon -> h
    android.support.v7.view.menu.MenuPresenter$Callback mPresenterCallback -> i
    android.support.v7.view.menu.MenuPopup mPopup -> j
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> k
    android.widget.PopupWindow$OnDismissListener mInternalOnDismissListener -> l
    void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    void setAnchorView(android.view.View) -> b
    void setForceShowIcon(boolean) -> c
    void setGravity(int) -> d
    void show() -> e
    android.support.v7.view.menu.MenuPopup getPopup() -> f
    boolean tryShow() -> g
    boolean tryShow(int,int) -> h
    android.support.v7.view.menu.MenuPopup createPopup() -> i
    void showPopup(int,int,boolean,boolean) -> j
    void dismiss() -> k
    void onDismiss() -> a
    boolean isShowing() -> l
    void setPresenterCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> m
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.b.bh:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    void run() -> run
android.support.design.widget.CoordinatorLayout$ViewElevationComparator -> android.support.design.widget.by:
    void <init>() -> <init>
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.j.a.v:
    void <init>() -> <init>
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> b
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> d
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> c
    int getAlpha(android.graphics.drawable.Drawable) -> j
android.support.v4.graphics.drawable.DrawableWrapperKitKat$DrawableWrapperStateKitKat -> android.support.v4.j.a.f:
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
android.support.design.widget.Snackbar -> android.support.design.widget.a:
    android.os.Handler sHandler -> a
    android.view.ViewGroup mTargetParent -> b
    android.content.Context mContext -> c
    android.support.design.widget.Snackbar$SnackbarLayout mView -> d
    int mDuration -> e
    android.support.design.widget.Snackbar$Callback mCallback -> f
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> g
    android.support.design.widget.SnackbarManager$Callback mManagerCallback -> h
    void <init>(android.view.ViewGroup) -> <init>
    android.support.design.widget.Snackbar make(android.view.View,java.lang.CharSequence,int) -> a
    android.support.design.widget.Snackbar make(android.view.View,int,int) -> b
    android.view.ViewGroup findSuitableParent(android.view.View) -> c
    android.support.design.widget.Snackbar setText(java.lang.CharSequence) -> d
    android.support.design.widget.Snackbar setDuration(int) -> e
    void show() -> f
    void dispatchDismiss(int) -> g
    boolean isShownOrQueued() -> h
    void showView() -> i
    void animateViewIn() -> j
    void animateViewOut(int) -> k
    void hideView(int) -> l
    void onViewShown() -> m
    void onViewHidden(int) -> n
    boolean shouldAnimate() -> o
    void access$000(android.support.design.widget.Snackbar,int) -> p
    android.os.Handler access$100() -> q
    android.support.design.widget.SnackbarManager$Callback access$200(android.support.design.widget.Snackbar) -> r
    void access$300(android.support.design.widget.Snackbar,int) -> s
    android.support.design.widget.Snackbar$SnackbarLayout access$400(android.support.design.widget.Snackbar) -> t
    boolean access$500(android.support.design.widget.Snackbar) -> u
    void access$600(android.support.design.widget.Snackbar) -> v
    void access$700(android.support.design.widget.Snackbar) -> w
    void <clinit>() -> <clinit>
com.murrayc.galaxyzoo.app.LoginUtils$AccountRemoveTask -> com.murrayc.galaxyzoo.app.ad:
    java.lang.ref.WeakReference contextReference -> a
    void <init>(android.content.Context) -> <init>
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.a.a.ad:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v7.appcompat.R$color -> android.support.v7.a.c:
    int abc_background_cache_hint_selector_material_dark -> abc_background_cache_hint_selector_material_dark
    int abc_background_cache_hint_selector_material_light -> abc_background_cache_hint_selector_material_light
    int abc_btn_colored_borderless_text_material -> abc_btn_colored_borderless_text_material
    int abc_color_highlight_material -> abc_color_highlight_material
    int abc_input_method_navigation_guard -> abc_input_method_navigation_guard
    int abc_primary_text_disable_only_material_dark -> abc_primary_text_disable_only_material_dark
    int abc_primary_text_disable_only_material_light -> abc_primary_text_disable_only_material_light
    int abc_primary_text_material_dark -> abc_primary_text_material_dark
    int abc_primary_text_material_light -> abc_primary_text_material_light
    int abc_search_url_text -> abc_search_url_text
    int abc_search_url_text_normal -> abc_search_url_text_normal
    int abc_search_url_text_pressed -> abc_search_url_text_pressed
    int abc_search_url_text_selected -> abc_search_url_text_selected
    int abc_secondary_text_material_dark -> abc_secondary_text_material_dark
    int abc_secondary_text_material_light -> abc_secondary_text_material_light
    int abc_tint_btn_checkable -> abc_tint_btn_checkable
    int abc_tint_default -> abc_tint_default
    int abc_tint_edittext -> abc_tint_edittext
    int abc_tint_seek_thumb -> abc_tint_seek_thumb
    int abc_tint_spinner -> abc_tint_spinner
    int abc_tint_switch_thumb -> abc_tint_switch_thumb
    int abc_tint_switch_track -> abc_tint_switch_track
    int accent_material_dark -> accent_material_dark
    int accent_material_light -> accent_material_light
    int background_floating_material_dark -> background_floating_material_dark
    int background_floating_material_light -> background_floating_material_light
    int background_material_dark -> background_material_dark
    int background_material_light -> background_material_light
    int bright_foreground_disabled_material_dark -> bright_foreground_disabled_material_dark
    int bright_foreground_disabled_material_light -> bright_foreground_disabled_material_light
    int bright_foreground_inverse_material_dark -> bright_foreground_inverse_material_dark
    int bright_foreground_inverse_material_light -> bright_foreground_inverse_material_light
    int bright_foreground_material_dark -> bright_foreground_material_dark
    int bright_foreground_material_light -> bright_foreground_material_light
    int button_material_dark -> button_material_dark
    int button_material_light -> button_material_light
    int dim_foreground_disabled_material_dark -> dim_foreground_disabled_material_dark
    int dim_foreground_disabled_material_light -> dim_foreground_disabled_material_light
    int dim_foreground_material_dark -> dim_foreground_material_dark
    int dim_foreground_material_light -> dim_foreground_material_light
    int foreground_material_dark -> foreground_material_dark
    int foreground_material_light -> foreground_material_light
    int highlighted_text_material_dark -> highlighted_text_material_dark
    int highlighted_text_material_light -> highlighted_text_material_light
    int hint_foreground_material_dark -> hint_foreground_material_dark
    int hint_foreground_material_light -> hint_foreground_material_light
    int material_blue_grey_800 -> material_blue_grey_800
    int material_blue_grey_900 -> material_blue_grey_900
    int material_blue_grey_950 -> material_blue_grey_950
    int material_deep_teal_200 -> material_deep_teal_200
    int material_deep_teal_500 -> material_deep_teal_500
    int material_grey_100 -> material_grey_100
    int material_grey_300 -> material_grey_300
    int material_grey_50 -> material_grey_50
    int material_grey_600 -> material_grey_600
    int material_grey_800 -> material_grey_800
    int material_grey_850 -> material_grey_850
    int material_grey_900 -> material_grey_900
    int primary_dark_material_dark -> primary_dark_material_dark
    int primary_dark_material_light -> primary_dark_material_light
    int primary_material_dark -> primary_material_dark
    int primary_material_light -> primary_material_light
    int primary_text_default_material_dark -> primary_text_default_material_dark
    int primary_text_default_material_light -> primary_text_default_material_light
    int primary_text_disabled_material_dark -> primary_text_disabled_material_dark
    int primary_text_disabled_material_light -> primary_text_disabled_material_light
    int ripple_material_dark -> ripple_material_dark
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_dark -> secondary_text_default_material_dark
    int secondary_text_default_material_light -> secondary_text_default_material_light
    int secondary_text_disabled_material_dark -> secondary_text_disabled_material_dark
    int secondary_text_disabled_material_light -> secondary_text_disabled_material_light
    int switch_thumb_disabled_material_dark -> switch_thumb_disabled_material_dark
    int switch_thumb_disabled_material_light -> switch_thumb_disabled_material_light
    int switch_thumb_material_dark -> switch_thumb_material_dark
    int switch_thumb_material_light -> switch_thumb_material_light
    int switch_thumb_normal_material_dark -> switch_thumb_normal_material_dark
    int switch_thumb_normal_material_light -> switch_thumb_normal_material_light
    void <init>() -> <init>
android.support.v7.widget.ActivityChooserModel$PersistHistoryAsyncTask -> android.support.v7.widget.bj:
    android.support.v7.widget.ActivityChooserModel this$0 -> a
    void <init>(android.support.v7.widget.ActivityChooserModel) -> <init>
    java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void <init>(android.support.v7.widget.ActivityChooserModel,android.support.v7.widget.ActivityChooserModel$1) -> <init>
com.murrayc.galaxyzoo.app.ListCursorAdapter$ViewHolder -> com.murrayc.galaxyzoo.app.e:
    android.widget.ImageView checkboxClassified -> a
    android.widget.ImageView checkboxFavorite -> b
    android.widget.ImageView checkboxUploaded -> c
    android.widget.LinearLayout iconsPanel -> d
    android.widget.ImageView imageView -> e
    android.widget.ProgressBar progressBar -> f
    java.lang.ref.WeakReference refParent -> g
    void <init>(android.view.View,com.murrayc.galaxyzoo.app.ListCursorAdapter) -> <init>
    void onClick(android.view.View) -> onClick
android.support.design.internal.ForegroundLinearLayout -> android.support.design.internal.b:
    android.graphics.drawable.Drawable mForeground -> a
    android.graphics.Rect mSelfBounds -> b
    android.graphics.Rect mOverlayBounds -> c
    int mForegroundGravity -> d
    boolean mForegroundInPadding -> e
    boolean mForegroundBoundsChanged -> f
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getForegroundGravity() -> getForegroundGravity
    void setForegroundGravity(int) -> setForegroundGravity
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void drawableStateChanged() -> drawableStateChanged
    void setForeground(android.graphics.drawable.Drawable) -> setForeground
    android.graphics.drawable.Drawable getForeground() -> getForeground
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void draw(android.graphics.Canvas) -> draw
    void drawableHotspotChanged(float,float) -> drawableHotspotChanged
android.support.v4.view.TintableBackgroundView -> android.support.v4.a.e:
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
android.support.v7.widget.TintInfo -> android.support.v7.widget.fl:
    android.content.res.ColorStateList mTintList -> a
    android.graphics.PorterDuff$Mode mTintMode -> b
    boolean mHasTintMode -> c
    boolean mHasTintList -> d
    void <init>() -> <init>
    void clear() -> a
android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener -> android.support.v7.widget.aa:
    void onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> a
android.support.v4.widget.ListViewCompat -> android.support.v4.widget.ab:
    void scrollListBy(android.widget.ListView,int) -> a
    void <init>() -> <init>
com.squareup.picasso.Picasso$Listener -> com.squareup.a.h:
    void onImageLoadFailed(com.squareup.picasso.Picasso,android.net.Uri,java.lang.Exception) -> a
com.android.volley.toolbox.HttpClientStack$HttpPatch -> com.android.a.a.j:
    void <init>() -> <init>
    void <init>(java.net.URI) -> <init>
    void <init>(java.lang.String) -> <init>
    java.lang.String getMethod() -> a
android.support.design.widget.FloatingActionButtonGingerbread$DisabledElevationAnimation -> android.support.design.widget.o:
    android.support.design.widget.FloatingActionButtonGingerbread this$0 -> a
    void <init>(android.support.design.widget.FloatingActionButtonGingerbread) -> <init>
    float getTargetShadowSize() -> a
    void <init>(android.support.design.widget.FloatingActionButtonGingerbread,android.support.design.widget.FloatingActionButtonGingerbread$1) -> <init>
android.support.v7.widget.ActivityChooserView$Callbacks -> android.support.v7.widget.fu:
    android.support.v7.widget.ActivityChooserView this$0 -> a
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onDismiss() -> onDismiss
    void notifyOnDismissListener() -> a
    void <init>(android.support.v7.widget.ActivityChooserView,android.support.v7.widget.ActivityChooserView$1) -> <init>
android.support.v4.app.FragmentManagerNonConfig -> android.support.v4.b.e:
    java.util.List mFragments -> a
    java.util.List mChildNonConfigs -> b
    void <init>(java.util.List,java.util.List) -> <init>
    java.util.List getFragments() -> a
    java.util.List getChildNonConfigs() -> b
android.support.v7.view.menu.MenuDialogHelper -> android.support.v7.view.menu.p:
    android.support.v7.view.menu.MenuBuilder mMenu -> a
    android.support.v7.app.AlertDialog mDialog -> b
    android.support.v7.view.menu.ListMenuPresenter mPresenter -> c
    android.support.v7.view.menu.MenuPresenter$Callback mPresenterCallback -> d
    void <init>(android.support.v7.view.menu.MenuBuilder) -> <init>
    void show(android.os.IBinder) -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    void dismiss() -> b
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> b
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.widget.ActionMenuView$LayoutParams -> android.support.v7.widget.ck:
    boolean isOverflowButton -> a
    int cellsUsed -> b
    int extraPixels -> c
    boolean expandable -> d
    boolean preventEdgeOffset -> e
    boolean expanded -> f
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.support.v7.widget.ActionMenuView$LayoutParams) -> <init>
    void <init>(int,int) -> <init>
android.support.v4.os.BuildCompat -> android.support.v4.f.f:
    void <init>() -> <init>
    boolean isAtLeastN() -> a
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.m:
    android.support.v4.util.ArrayMap this$0 -> a
    void <init>(android.support.v4.util.ArrayMap) -> <init>
    int colGetSize() -> j
    java.lang.Object colGetEntry(int,int) -> k
    int colIndexOfKey(java.lang.Object) -> l
    int colIndexOfValue(java.lang.Object) -> m
    java.util.Map colGetMap() -> n
    void colPut(java.lang.Object,java.lang.Object) -> o
    java.lang.Object colSetValue(int,java.lang.Object) -> p
    void colRemoveAt(int) -> q
    void colClear() -> r
android.support.design.widget.CoordinatorLayout$Behavior -> android.support.design.widget.bs:
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttachedToLayoutParams(android.support.design.widget.CoordinatorLayout$LayoutParams) -> a
    void onDetachedFromLayoutParams() -> a
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> c
    boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> e
    int getScrimColor(android.support.design.widget.CoordinatorLayout,android.view.View) -> b
    float getScrimOpacity(android.support.design.widget.CoordinatorLayout,android.view.View) -> c
    boolean blocksInteractionBelow(android.support.design.widget.CoordinatorLayout,android.view.View) -> d
    boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> a
    boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> l
    void onDependentViewRemoved(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> f
    boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> h
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> k
    boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> c
    void onNestedScrollAccepted(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> g
    void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> e
    void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> h
    void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> d
    boolean onNestedFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean) -> i
    boolean onNestedPreFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> f
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.support.design.widget.CoordinatorLayout,android.view.View,android.support.v4.view.WindowInsetsCompat) -> j
    boolean onRequestChildRectangleOnScreen(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> b
    void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> b
    android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View) -> a
    boolean getInsetDodgeRect(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> j
com.murrayc.galaxyzoo.app.provider.HttpUtils$NameValuePair -> com.murrayc.galaxyzoo.app.provider.e:
    java.lang.String name -> a
    java.lang.String value -> b
    void <init>(java.lang.String,java.lang.String) -> <init>
    java.lang.String getName() -> a
    java.lang.String getValue() -> b
com.murrayc.galaxyzoo.app.Utils -> com.murrayc.galaxyzoo.app.r:
    void abandonItem(android.content.Context,java.lang.String) -> a
    boolean getUseWifiOnlyFromSharedPrefs(android.content.Context) -> b
    java.lang.String getTalkUri(java.lang.String) -> c
    com.murrayc.galaxyzoo.app.Utils$NetworkConnected getNetworkIsConnected(android.content.Context,boolean) -> d
    void <init>() -> <init>
    java.lang.String getDecisionTreeFilepath(java.lang.String) -> e
    java.io.File getExternalCacheDir(android.content.Context) -> f
    android.net.Uri getItemUri(java.lang.String) -> g
    android.content.SharedPreferences getPreferences(android.content.Context) -> h
    boolean getShowDiscussQuestionFromSharedPrefs(android.content.Context) -> i
    java.lang.String getTranslationFilePath(java.lang.String,java.lang.String) -> j
    void initDefaultPrefs(android.content.Context) -> k
    java.io.InputStream openAsset(android.content.Context,java.lang.String) -> l
android.support.v4.graphics.drawable.DrawableWrapperGingerbread -> android.support.v4.j.a.e:
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> a
    int mCurrentColor -> b
    android.graphics.PorterDuff$Mode mCurrentMode -> c
    boolean mColorFilterSet -> d
    android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mState -> e
    boolean mMutated -> f
    android.graphics.drawable.Drawable mDrawable -> g
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources) -> <init>
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void updateLocalState(android.content.res.Resources) -> a
    android.graphics.drawable.Drawable newDrawableFromState(android.graphics.drawable.Drawable$ConstantState,android.content.res.Resources) -> b
    void draw(android.graphics.Canvas) -> draw
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    android.graphics.drawable.Drawable mutate() -> mutate
    android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState() -> c
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    boolean onLevelChange(int) -> onLevelChange
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean updateTint(int[]) -> d
    android.graphics.drawable.Drawable getWrappedDrawable() -> e
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> f
    boolean isCompatTintEnabled() -> g
    void <clinit>() -> <clinit>
com.squareup.picasso.Downloader -> com.squareup.a.r:
    com.squareup.picasso.Downloader$Response load(android.net.Uri,int) -> a
com.murrayc.galaxyzoo.app.LoginActivity$2 -> com.murrayc.galaxyzoo.app.ba:
    com.murrayc.galaxyzoo.app.LoginActivity this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.LoginActivity) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.widget.TintTypedArray -> android.support.v7.widget.eh:
    android.content.Context mContext -> a
    android.content.res.TypedArray mWrapped -> b
    android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> a
    android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> b
    android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> c
    void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    android.graphics.drawable.Drawable getDrawable(int) -> d
    android.graphics.drawable.Drawable getDrawableIfKnown(int) -> e
    java.lang.CharSequence getText(int) -> f
    java.lang.String getString(int) -> g
    boolean getBoolean(int,boolean) -> h
    int getInt(int,int) -> i
    float getFloat(int,float) -> j
    int getColor(int,int) -> k
    android.content.res.ColorStateList getColorStateList(int) -> l
    int getInteger(int,int) -> m
    int getDimensionPixelOffset(int,int) -> n
    int getDimensionPixelSize(int,int) -> o
    int getLayoutDimension(int,int) -> p
    int getResourceId(int,int) -> q
    java.lang.CharSequence[] getTextArray(int) -> r
    boolean hasValue(int) -> s
    void recycle() -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.a.a.am:
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> i
    void setCheckable(java.lang.Object,boolean) -> s
    boolean isChecked(java.lang.Object) -> j
    void setChecked(java.lang.Object,boolean) -> t
    boolean isFocusable(java.lang.Object) -> m
    boolean isFocused(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> r
    boolean isClickable(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> o
    boolean isEnabled(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> p
    boolean isScrollable(java.lang.Object) -> q
    void setScrollable(java.lang.Object,boolean) -> v
    java.lang.CharSequence getPackageName(java.lang.Object) -> g
    java.lang.CharSequence getClassName(java.lang.Object) -> e
    void setClassName(java.lang.Object,java.lang.CharSequence) -> u
    java.lang.CharSequence getText(java.lang.Object) -> h
    java.lang.CharSequence getContentDescription(java.lang.Object) -> f
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> a
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> d
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> b
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> c
com.murrayc.galaxyzoo.app.DecisionTree$Checkbox -> com.murrayc.galaxyzoo.app.aj:
    void <init>(java.lang.String,java.lang.String,java.lang.String,int) -> <init>
android.support.v4.graphics.drawable.DrawableWrapper -> android.support.v4.j.a.n:
    android.graphics.drawable.Drawable getWrappedDrawable() -> e
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> f
android.support.v4.graphics.drawable.DrawableCompat$JellybeanMr1DrawableImpl -> android.support.v4.j.a.w:
    void <init>() -> <init>
    boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> a
    int getLayoutDirection(android.graphics.drawable.Drawable) -> b
android.support.v4.widget.TextViewCompatJbMr2 -> android.support.v4.widget.k:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
android.support.design.widget.FloatingActionButton -> android.support.design.widget.cg:
    android.content.res.ColorStateList mBackgroundTint -> a
    android.graphics.PorterDuff$Mode mBackgroundTintMode -> b
    int mRippleColor -> c
    int mSize -> d
    int mImagePadding -> e
    int mMaxImageSize -> f
    boolean mCompatPadding -> g
    android.graphics.Rect mShadowPadding -> h
    android.graphics.Rect mTouchArea -> i
    android.support.v7.widget.AppCompatImageHelper mImageHelper -> j
    android.support.design.widget.FloatingActionButtonImpl mImpl -> k
    void onMeasure(int,int) -> onMeasure
    void setRippleColor(int) -> setRippleColor
    android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundColor(int) -> setBackgroundColor
    void setImageResource(int) -> setImageResource
    void show(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean) -> a
    void hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean) -> b
    void setUseCompatPadding(boolean) -> setUseCompatPadding
    boolean getUseCompatPadding() -> getUseCompatPadding
    void setSize(int) -> setSize
    int getSize() -> getSize
    android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener) -> c
    int getSizeDimension() -> getSizeDimension
    int getSizeDimension(int) -> d
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void drawableStateChanged() -> drawableStateChanged
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    boolean getContentRect(android.graphics.Rect) -> e
    android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    int resolveAdjustedSize(int,int) -> f
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    float getCompatElevation() -> getCompatElevation
    void setCompatElevation(float) -> setCompatElevation
    android.support.design.widget.FloatingActionButtonImpl getImpl() -> getImpl
    android.support.design.widget.FloatingActionButtonImpl createImpl() -> g
    void setVisibility(int) -> setVisibility
    void access$000(android.support.design.widget.FloatingActionButton,android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean) -> h
    void access$100(android.support.design.widget.FloatingActionButton,android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean) -> i
    android.graphics.Rect access$200(android.support.design.widget.FloatingActionButton) -> j
    int access$400(android.support.design.widget.FloatingActionButton) -> k
    int access$500(android.support.design.widget.FloatingActionButton) -> l
    void access$601(android.support.design.widget.FloatingActionButton,android.graphics.drawable.Drawable) -> m
    boolean access$700(android.support.design.widget.FloatingActionButton) -> n
com.murrayc.galaxyzoo.app.ClassifyActivity$1 -> com.murrayc.galaxyzoo.app.bv:
    com.murrayc.galaxyzoo.app.ClassifyActivity this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.ClassifyActivity,android.content.Context) -> <init>
    void onPostExecute(com.murrayc.galaxyzoo.app.LoginUtils$LoginDetails) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
com.murrayc.galaxyzoo.app.LoginActivity$AccountSaveTask -> com.murrayc.galaxyzoo.app.g:
    java.lang.ref.WeakReference contextReference -> a
    boolean existingAccountIsAnonymous -> b
    java.lang.String existingAccountName -> c
    com.murrayc.galaxyzoo.app.LoginUtils$LoginResult loginResult -> d
    void <init>(android.content.Context,com.murrayc.galaxyzoo.app.LoginUtils$LoginResult,java.lang.String,boolean) -> <init>
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v7.widget.StaggeredGridLayoutManager$SavedState -> android.support.v7.widget.gh:
    int mAnchorPosition -> a
    int mVisibleAnchorPosition -> b
    int mSpanOffsetsSize -> c
    int[] mSpanOffsets -> d
    int mSpanLookupSize -> e
    int[] mSpanLookup -> f
    java.util.List mFullSpanItems -> g
    boolean mReverseLayout -> h
    boolean mAnchorLayoutFromEnd -> i
    boolean mLastLayoutRTL -> j
    android.os.Parcelable$Creator CREATOR -> k
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.support.v7.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    void invalidateSpanInfo() -> a
    void invalidateAnchorPositionInfo() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v7.view.ViewPropertyAnimatorCompatSet -> android.support.v7.view.g:
    java.util.ArrayList mAnimators -> a
    long mDuration -> b
    android.view.animation.Interpolator mInterpolator -> c
    android.support.v4.view.ViewPropertyAnimatorListener mListener -> d
    boolean mIsStarted -> e
    android.support.v4.view.ViewPropertyAnimatorListenerAdapter mProxyListener -> f
    void <init>() -> <init>
    android.support.v7.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat) -> a
    android.support.v7.view.ViewPropertyAnimatorCompatSet playSequentially(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorCompat) -> b
    void start() -> c
    void onAnimationsEnded() -> d
    void cancel() -> e
    android.support.v7.view.ViewPropertyAnimatorCompatSet setDuration(long) -> f
    android.support.v7.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> g
    android.support.v7.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> h
    android.support.v4.view.ViewPropertyAnimatorListener access$000(android.support.v7.view.ViewPropertyAnimatorCompatSet) -> i
    void access$100(android.support.v7.view.ViewPropertyAnimatorCompatSet) -> j
    java.util.ArrayList access$200(android.support.v7.view.ViewPropertyAnimatorCompatSet) -> k
android.support.v7.widget.AdapterHelper$UpdateOp -> android.support.v7.widget.hp:
    int cmd -> a
    int positionStart -> b
    java.lang.Object payload -> c
    int itemCount -> d
    void <init>(int,int,int,java.lang.Object) -> <init>
    java.lang.String cmdToString() -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v7.widget.AppCompatSeekBar -> android.support.v7.widget.dc:
    android.support.v7.widget.AppCompatSeekBarHelper mAppCompatSeekBarHelper -> a
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawableStateChanged() -> drawableStateChanged
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
android.support.v7.widget.SearchView$OnQueryTextListener -> android.support.v7.widget.dl:
    boolean onQueryTextSubmit(java.lang.String) -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.a.dp:
    void <init>() -> <init>
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> c
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> d
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> e
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> f
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> g
android.support.v4.animation.AnimatorProvider -> android.support.v4.g.c:
    void clearInterpolator(android.view.View) -> a
android.support.annotation.IdRes -> android.support.annotation.e:
com.murrayc.galaxyzoo.app.LoginUtils$GetExistingLogin -> com.murrayc.galaxyzoo.app.ac:
    java.lang.Exception mException -> a
    java.lang.ref.WeakReference mContextReference -> b
    void <init>(android.content.Context) -> <init>
    com.murrayc.galaxyzoo.app.LoginUtils$LoginDetails doInBackground(java.lang.Void[]) -> a
    void onCancelled() -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.murrayc.galaxyzoo.app.BaseQuestionFragment -> com.murrayc.galaxyzoo.app.at:
    java.lang.String mGroupId -> a
    java.lang.String mQuestionId -> b
    void setGroupId(java.lang.String) -> a
    void setQuestionId(java.lang.String) -> b
    void <init>() -> <init>
    com.murrayc.galaxyzoo.app.DecisionTree$Question getQuestion() -> h
    android.graphics.drawable.BitmapDrawable getIcon(android.content.Context,com.murrayc.galaxyzoo.app.DecisionTree$BaseButton) -> i
    java.lang.String getQuestionId() -> k
    java.lang.String getGroupId() -> l
    com.murrayc.galaxyzoo.app.DecisionTree getDecisionTree() -> n
android.support.v7.app.WindowDecorActionBar$1 -> android.support.v7.c.ap:
    android.support.v7.app.WindowDecorActionBar this$0 -> a
    void <init>(android.support.v7.app.WindowDecorActionBar) -> <init>
    void onAnimationEnd(android.view.View) -> b
android.support.v7.widget.ActivityChooserView -> android.support.v7.widget.du:
    android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> a
    android.support.v7.widget.ActivityChooserView$Callbacks mCallbacks -> b
    android.support.v7.widget.LinearLayoutCompat mActivityChooserContent -> c
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> d
    android.widget.FrameLayout mExpandActivityOverflowButton -> e
    android.widget.ImageView mExpandActivityOverflowButtonImage -> f
    android.widget.FrameLayout mDefaultActivityButton -> g
    android.widget.ImageView mDefaultActivityButtonImage -> h
    int mListPopupMaxWidth -> i
    android.support.v4.view.ActionProvider mProvider -> j
    android.database.DataSetObserver mModelDataSetObserver -> k
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> l
    android.support.v7.widget.ListPopupWindow mListPopupWindow -> m
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> n
    boolean mIsSelectingDefaultActivity -> o
    int mInitialActivityCount -> p
    boolean mIsAttachedToWindow -> q
    int mDefaultActionButtonContentDescription -> r
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setActivityChooserModel(android.support.v7.widget.ActivityChooserModel) -> setActivityChooserModel
    void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    void setProvider(android.support.v4.view.ActionProvider) -> setProvider
    boolean showPopup() -> a
    void showPopupUnchecked(int) -> b
    boolean dismissPopup() -> c
    boolean isShowingPopup() -> d
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.support.v7.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInitialActivityCount(int) -> setInitialActivityCount
    void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    android.support.v7.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    void updateAppearance() -> e
    android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter access$000(android.support.v7.widget.ActivityChooserView) -> f
    android.support.v7.widget.ListPopupWindow access$100(android.support.v7.widget.ActivityChooserView) -> g
    void access$400(android.support.v7.widget.ActivityChooserView) -> h
    void access$500(android.support.v7.widget.ActivityChooserView,int) -> i
    boolean access$600(android.support.v7.widget.ActivityChooserView) -> j
    android.widget.FrameLayout access$700(android.support.v7.widget.ActivityChooserView) -> k
    android.widget.FrameLayout access$800(android.support.v7.widget.ActivityChooserView) -> l
    boolean access$602(android.support.v7.widget.ActivityChooserView,boolean) -> m
    int access$900(android.support.v7.widget.ActivityChooserView) -> n
    android.widget.PopupWindow$OnDismissListener access$1000(android.support.v7.widget.ActivityChooserView) -> o
    android.database.DataSetObserver access$1100(android.support.v7.widget.ActivityChooserView) -> p
android.support.v7.view.menu.MenuBuilder$ItemInvoker -> android.support.v7.view.menu.z:
    boolean invokeItem(android.support.v7.view.menu.MenuItemImpl) -> e
android.support.v7.widget.DefaultItemAnimator$7 -> android.support.v7.widget.gv:
    android.support.v7.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.support.v4.view.ViewPropertyAnimatorCompat val$oldViewAnim -> b
    android.support.v7.widget.DefaultItemAnimator this$0 -> c
    void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.support.v4.view.ViewPropertyAnimatorCompat) -> <init>
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v7.widget.RecyclerView$LayoutParams -> android.support.v7.widget.j:
    android.support.v7.widget.RecyclerView$ViewHolder mViewHolder -> a
    android.graphics.Rect mDecorInsets -> b
    boolean mInsetsDirty -> c
    boolean mPendingInvalidate -> d
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.support.v7.widget.RecyclerView$LayoutParams) -> <init>
    boolean isViewInvalid() -> a
    boolean isItemRemoved() -> b
    boolean isItemChanged() -> c
    int getViewLayoutPosition() -> d
android.support.v4.content.AsyncTaskLoader -> android.support.v4.d.g:
    java.util.concurrent.Executor mExecutor -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> b
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> c
    long mUpdateThrottle -> d
    long mLastLoadCompleteTime -> e
    android.os.Handler mHandler -> f
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,java.util.concurrent.Executor) -> <init>
    void onForceLoad() -> p
    boolean onCancelLoad() -> n
    void onCanceled(java.lang.Object) -> g
    void executePendingTask() -> e
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> f
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> g
    java.lang.Object loadInBackground() -> a
    java.lang.Object onLoadInBackground() -> aa
    void cancelLoadInBackground() -> d
    boolean isLoadInBackgroundCanceled() -> ab
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> ab
com.squareup.picasso.Dispatcher -> com.squareup.a.i:
    com.squareup.picasso.Dispatcher$DispatcherThread dispatcherThread -> a
    android.content.Context context -> b
    java.util.concurrent.ExecutorService service -> c
    com.squareup.picasso.Downloader downloader -> d
    java.util.Map hunterMap -> e
    java.util.Map failedActions -> f
    java.util.Map pausedActions -> g
    java.util.Set pausedTags -> h
    android.os.Handler handler -> i
    android.os.Handler mainThreadHandler -> j
    com.squareup.picasso.Cache cache -> k
    com.squareup.picasso.Stats stats -> l
    java.util.List batch -> m
    com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver receiver -> n
    boolean scansNetworkChanges -> o
    boolean airplaneMode -> p
    void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats) -> <init>
    void dispatchSubmit(com.squareup.picasso.Action) -> a
    void dispatchCancel(com.squareup.picasso.Action) -> b
    void dispatchComplete(com.squareup.picasso.BitmapHunter) -> c
    void dispatchRetry(com.squareup.picasso.BitmapHunter) -> d
    void dispatchFailed(com.squareup.picasso.BitmapHunter) -> e
    void dispatchNetworkStateChange(android.net.NetworkInfo) -> f
    void dispatchAirplaneModeChange(boolean) -> g
    void performSubmit(com.squareup.picasso.Action) -> h
    void performSubmit(com.squareup.picasso.Action,boolean) -> i
    void performCancel(com.squareup.picasso.Action) -> j
    void performPauseTag(java.lang.Object) -> k
    void performResumeTag(java.lang.Object) -> l
    void performRetry(com.squareup.picasso.BitmapHunter) -> m
    void performComplete(com.squareup.picasso.BitmapHunter) -> n
    void performBatchComplete() -> o
    void performError(com.squareup.picasso.BitmapHunter,boolean) -> p
    void performAirplaneModeChange(boolean) -> q
    void performNetworkStateChange(android.net.NetworkInfo) -> r
    void flushFailedActions() -> s
    void markForReplay(com.squareup.picasso.BitmapHunter) -> t
    void markForReplay(com.squareup.picasso.Action) -> u
    void batch(com.squareup.picasso.BitmapHunter) -> v
    void logBatch(java.util.List) -> w
android.support.design.widget.ShadowViewDelegate -> android.support.design.widget.be:
    float getRadius() -> a
    void setShadowPadding(int,int,int,int) -> b
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> c
    boolean isCompatPaddingEnabled() -> d
com.squareup.picasso.Stats$StatsHandler -> com.squareup.a.br:
    com.squareup.picasso.Stats stats -> a
    void <init>(android.os.Looper,com.squareup.picasso.Stats) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v7.app.AppCompatActivity -> android.support.v7.c.a:
    android.support.v7.app.AppCompatDelegate mDelegate -> a
    int mThemeId -> b
    boolean mEatKeyUpEvent -> c
    android.content.res.Resources mResources -> d
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void setTheme(int) -> setTheme
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.support.v7.app.ActionBar getSupportActionBar() -> h
    void setSupportActionBar(android.support.v7.widget.Toolbar) -> i
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onStart() -> onStart
    void onStop() -> onStop
    android.view.View findViewById(int) -> findViewById
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onDestroy() -> onDestroy
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    void supportInvalidateOptionsMenu() -> j
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> k
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> l
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> m
    void onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> n
    void onPrepareSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> o
    boolean onSupportNavigateUp() -> p
    android.content.Intent getSupportParentActivityIntent() -> q
    boolean supportShouldUpRecreateTask(android.content.Intent) -> r
    void supportNavigateUpTo(android.content.Intent) -> s
    void onContentChanged() -> onContentChanged
    void onSupportContentChanged() -> t
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    android.support.v7.app.AppCompatDelegate getDelegate() -> u
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    android.content.res.Resources getResources() -> getResources
android.support.design.widget.BottomSheetBehavior$SavedState$1 -> android.support.design.widget.bk:
    void <init>() -> <init>
    android.support.design.widget.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    android.support.design.widget.BottomSheetBehavior$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> b
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v7.widget.ListPopupWindow$PopupScrollListener -> android.support.v7.widget.cr:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void <init>(android.support.v7.widget.ListPopupWindow,android.support.v7.widget.ListPopupWindow$1) -> <init>
android.support.design.widget.AppBarLayout$Behavior$SavedState$1 -> android.support.design.widget.z:
    void <init>() -> <init>
    android.support.design.widget.AppBarLayout$Behavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    android.support.design.widget.AppBarLayout$Behavior$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> b
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.widget.NestedScrollView$SavedState -> android.support.v4.widget.bg:
    int scrollPosition -> a
    android.os.Parcelable$Creator CREATOR -> b
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.murrayc.galaxyzoo.app.provider.ClassificationAnswer -> com.murrayc.galaxyzoo.app.provider.k:
    android.net.Uri CLASSIFICATION_ANSWERS_URI -> a
    android.net.Uri CONTENT_URI -> b
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.view.ViewConfigurationCompatICS -> android.support.v4.a.al:
    void <init>() -> <init>
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> a
android.support.v7.app.AlertController$5 -> android.support.v7.c.am:
    android.view.View val$top -> a
    android.view.View val$bottom -> b
    android.support.v7.app.AlertController this$0 -> c
    void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View) -> <init>
    void run() -> run
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.a.a.t:
    void <init>() -> <init>
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v7.view.menu.ActionMenuItemView -> android.support.v7.view.menu.ActionMenuItemView:
    android.support.v7.view.menu.MenuItemImpl mItemData -> a
    java.lang.CharSequence mTitle -> b
    android.graphics.drawable.Drawable mIcon -> c
    android.support.v7.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> d
    android.support.v7.widget.ForwardingListener mForwardingListener -> e
    android.support.v7.view.menu.ActionMenuItemView$PopupCallback mPopupCallback -> f
    boolean mAllowTextWithIcon -> g
    boolean mExpandedFormat -> h
    int mMinWidth -> i
    int mSavedPaddingLeft -> j
    int mMaxIconSize -> k
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean shouldAllowTextWithIcon() -> c
    void setPadding(int,int,int,int) -> setPadding
    android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onClick(android.view.View) -> onClick
    void setItemInvoker(android.support.v7.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    void setPopupCallback(android.support.v7.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    boolean prefersCondensedTitle() -> e
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> d
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> f
    void setShortcut(boolean,char) -> setShortcut
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean needsDividerBefore() -> a
    boolean needsDividerAfter() -> b
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.support.v7.view.menu.ActionMenuItemView$PopupCallback access$000(android.support.v7.view.menu.ActionMenuItemView) -> g
    android.support.v7.view.menu.MenuBuilder$ItemInvoker access$100(android.support.v7.view.menu.ActionMenuItemView) -> h
    android.support.v7.view.menu.MenuItemImpl access$200(android.support.v7.view.menu.ActionMenuItemView) -> i
android.support.v7.widget.MenuPopupWindow$MenuDropDownListView -> android.support.v7.widget.ct:
    int mAdvanceKey -> a
    int mRetreatKey -> b
    android.support.v7.widget.MenuItemHoverListener mHoverListener -> c
    android.view.MenuItem mHoveredMenuItem -> d
    void <init>(android.content.Context,boolean) -> <init>
    void setHoverListener(android.support.v7.widget.MenuItemHoverListener) -> setHoverListener
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    boolean hasFocus() -> hasFocus
    boolean isFocused() -> isFocused
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isInTouchMode() -> isInTouchMode
    boolean onForwardedEvent(android.view.MotionEvent,int) -> a
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.d.w:
    void <init>() -> <init>
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.be:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void <init>(android.support.v4.widget.CursorAdapter) -> <init>
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.res.ResourcesCompat -> android.support.v4.d.a.f:
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> a
    void <init>() -> <init>
com.murrayc.galaxyzoo.app.DecisionTree$DecisionTreeException -> com.murrayc.galaxyzoo.app.am:
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Exception) -> <init>
com.murrayc.galaxyzoo.app.provider.ImageType -> com.murrayc.galaxyzoo.app.provider.m:
    com.murrayc.galaxyzoo.app.provider.ImageType[] $VALUES -> a
    com.murrayc.galaxyzoo.app.provider.ImageType INVERTED -> b
    com.murrayc.galaxyzoo.app.provider.ImageType STANDARD -> c
    com.murrayc.galaxyzoo.app.provider.ImageType THUMBNAIL -> d
    void <init>(java.lang.String,int) -> <init>
    com.murrayc.galaxyzoo.app.provider.ImageType valueOf(java.lang.String) -> valueOf
    com.murrayc.galaxyzoo.app.provider.ImageType[] values() -> values
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.b.at:
    void <init>() -> <init>
    java.lang.String getTransitionName(android.view.View) -> a
    java.lang.Object cloneTransition(java.lang.Object) -> b
    java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map,android.view.View) -> c
    void excludeTarget(java.lang.Object,android.view.View,boolean) -> d
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> e
    void setEpicenter(java.lang.Object,android.view.View) -> f
    java.lang.Object wrapSharedElementTransition(java.lang.Object) -> g
    void excludeViews(android.transition.Transition,android.transition.Transition,java.util.ArrayList,boolean) -> h
    void excludeSharedElementViews(java.lang.Object,java.lang.Object,java.lang.Object,java.util.ArrayList,boolean) -> i
    void addTransitionTargets(java.lang.Object,java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.ArrayList,java.util.Map,java.util.Map,java.util.ArrayList) -> j
    java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> k
    void setSharedElementTargets(java.lang.Object,android.view.View,java.util.Map,java.util.ArrayList) -> l
    void bfsAddViewChildren(java.util.List,android.view.View) -> m
    boolean containedBeforeIndex(java.util.List,android.view.View,int) -> n
    void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> o
    android.graphics.Rect getBoundsOnScreen(android.view.View) -> p
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> q
    void findNamedViews(java.util.Map,android.view.View) -> r
    void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map) -> s
    void removeTargets(java.lang.Object,java.util.ArrayList) -> t
    void addTargets(java.lang.Object,java.util.ArrayList) -> u
    boolean hasSimpleTarget(android.transition.Transition) -> v
    boolean isNullOrEmpty(java.util.List) -> w
    void access$000(java.util.ArrayList,android.view.View) -> x
    void access$100(android.transition.Transition,android.transition.Transition,java.util.ArrayList,boolean) -> y
    android.graphics.Rect access$200(android.view.View) -> z
com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter$UploadTask$1 -> com.murrayc.galaxyzoo.app.syncadapter.e:
    com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter$UploadTask this$1 -> a
    boolean val$resultToUse -> b
    void <init>(com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter$UploadTask,boolean) -> <init>
    void run() -> run
android.support.v7.widget.ThemeUtils -> android.support.v7.widget.dy:
    java.lang.ThreadLocal TL_TYPED_VALUE -> a
    int[] DISABLED_STATE_SET -> b
    int[] FOCUSED_STATE_SET -> c
    int[] ACTIVATED_STATE_SET -> d
    int[] PRESSED_STATE_SET -> e
    int[] CHECKED_STATE_SET -> f
    int[] SELECTED_STATE_SET -> g
    int[] NOT_PRESSED_OR_FOCUSED_STATE_SET -> h
    int[] EMPTY_STATE_SET -> i
    int[] TEMP_ARRAY -> j
    void <init>() -> <init>
    int getThemeAttrColor(android.content.Context,int) -> a
    android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> b
    int getDisabledThemeAttrColor(android.content.Context,int) -> c
    android.util.TypedValue getTypedValue() -> d
    int getThemeAttrColor(android.content.Context,int,float) -> e
    void <clinit>() -> <clinit>
android.support.v7.widget.RecyclerViewAccessibilityDelegate$1 -> android.support.v7.widget.hk:
    android.support.v7.widget.RecyclerViewAccessibilityDelegate this$0 -> a
    void <init>(android.support.v7.widget.RecyclerViewAccessibilityDelegate) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> b
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> b
android.support.v7.app.WindowDecorActionBar$3 -> android.support.v7.c.bg:
    android.support.v7.app.WindowDecorActionBar this$0 -> a
    void <init>(android.support.v7.app.WindowDecorActionBar) -> <init>
    void onAnimationUpdate(android.view.View) -> a
com.squareup.picasso.Downloader$ResponseException -> com.squareup.a.ai:
    boolean localCacheOnly -> a
    int responseCode -> b
    void <init>(java.lang.String,int,int) -> <init>
com.murrayc.galaxyzoo.app.LoginUtils$LoginResult -> com.murrayc.galaxyzoo.app.ae:
    java.lang.String apiKey -> a
    java.lang.String name -> b
    boolean success -> c
    java.lang.String getName() -> a
    java.lang.String getApiKey() -> b
    boolean getSuccess() -> c
    void <init>(boolean,java.lang.String,java.lang.String) -> <init>
android.support.v7.widget.AppCompatSpinner$DropdownPopup$2 -> android.support.v7.widget.br:
    android.support.v7.widget.AppCompatSpinner$DropdownPopup this$1 -> a
    void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> <init>
    void onGlobalLayout() -> onGlobalLayout
com.murrayc.galaxyzoo.app.QuestionLinearLayout -> com.murrayc.galaxyzoo.app.QuestionLinearLayout:
    int mCurrentRowsCountForMaxHeight -> a
    java.util.Map mMaxHeightsExperienced -> b
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int getMaximumHeightExperienced(int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setRowsCountForMaxHeightExperienced(int) -> setRowsCountForMaxHeightExperienced
android.support.v7.widget.AppCompatDrawableManager$1 -> android.support.v7.widget.dw:
android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatImpl -> android.support.v4.widget.u:
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> a
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> b
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> c
android.support.v4.content.CursorLoader -> android.support.v4.d.f:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> a
    android.net.Uri mUri -> b
    java.lang.String[] mProjection -> c
    java.lang.String mSelection -> d
    java.lang.String[] mSelectionArgs -> e
    java.lang.String mSortOrder -> f
    android.database.Cursor mCursor -> g
    android.support.v4.os.CancellationSignal mCancellationSignal -> h
    android.database.Cursor loadInBackground() -> a
    void cancelLoadInBackground() -> d
    void deliverResult(android.database.Cursor) -> e
    void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> <init>
    void onStartLoading() -> l
    void onStopLoading() -> r
    void onCanceled(android.database.Cursor) -> f
    void onReset() -> v
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> ab
    java.lang.Object loadInBackground() -> a
    void onCanceled(java.lang.Object) -> g
    void deliverResult(java.lang.Object) -> a
android.support.v7.widget.Toolbar -> android.support.v7.widget.Toolbar:
    android.support.v7.widget.ActionMenuView mMenuView -> a
    android.widget.TextView mTitleTextView -> b
    android.widget.TextView mSubtitleTextView -> c
    android.widget.ImageButton mNavButtonView -> d
    android.widget.ImageView mLogoView -> e
    android.graphics.drawable.Drawable mCollapseIcon -> f
    java.lang.CharSequence mCollapseDescription -> g
    android.widget.ImageButton mCollapseButtonView -> h
    android.view.View mExpandedActionView -> i
    android.content.Context mPopupContext -> j
    int mPopupTheme -> k
    int mTitleTextAppearance -> l
    int mSubtitleTextAppearance -> m
    int mButtonGravity -> n
    int mMaxButtonHeight -> o
    int mTitleMarginStart -> p
    int mTitleMarginEnd -> q
    int mTitleMarginTop -> r
    int mTitleMarginBottom -> s
    android.support.v7.widget.RtlSpacingHelper mContentInsets -> t
    int mContentInsetStartWithNavigation -> u
    int mContentInsetEndWithActions -> v
    int mGravity -> w
    java.lang.CharSequence mTitleText -> x
    java.lang.CharSequence mSubtitleText -> y
    int mTitleTextColor -> z
    int mSubtitleTextColor -> aa
    boolean mEatingTouch -> ab
    boolean mEatingHover -> ac
    java.util.ArrayList mTempViews -> ad
    java.util.ArrayList mHiddenViews -> ae
    int[] mTempMargins -> af
    android.support.v7.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener -> ag
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener -> ah
    android.support.v7.widget.ToolbarWidgetWrapper mWrapper -> ai
    android.support.v7.widget.ActionMenuPresenter mOuterActionMenuPresenter -> aj
    android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> ak
    android.support.v7.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> al
    android.support.v7.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> am
    boolean mCollapsible -> an
    java.lang.Runnable mShowOverflowMenuRunnable -> ao
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setPopupTheme(int) -> setPopupTheme
    int getPopupTheme() -> getPopupTheme
    void setTitleMargin(int,int,int,int) -> setTitleMargin
    int getTitleMarginStart() -> getTitleMarginStart
    void setTitleMarginStart(int) -> setTitleMarginStart
    int getTitleMarginTop() -> getTitleMarginTop
    void setTitleMarginTop(int) -> setTitleMarginTop
    int getTitleMarginEnd() -> getTitleMarginEnd
    void setTitleMarginEnd(int) -> setTitleMarginEnd
    int getTitleMarginBottom() -> getTitleMarginBottom
    void setTitleMarginBottom(int) -> setTitleMarginBottom
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void setLogo(int) -> setLogo
    boolean canShowOverflowMenu() -> a
    boolean isOverflowMenuShowing() -> b
    boolean isOverflowMenuShowPending() -> c
    boolean showOverflowMenu() -> d
    boolean hideOverflowMenu() -> e
    void setMenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.widget.ActionMenuPresenter) -> setMenu
    void dismissPopupMenus() -> f
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    android.graphics.drawable.Drawable getLogo() -> getLogo
    void setLogoDescription(int) -> setLogoDescription
    void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    java.lang.CharSequence getLogoDescription() -> getLogoDescription
    void ensureLogoView() -> g
    boolean hasExpandedActionView() -> h
    void collapseActionView() -> i
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(int) -> setTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(int) -> setSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    void setTitleTextColor(int) -> setTitleTextColor
    void setSubtitleTextColor(int) -> setSubtitleTextColor
    java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    void setNavigationContentDescription(int) -> setNavigationContentDescription
    void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    void setNavigationIcon(int) -> setNavigationIcon
    void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    android.view.Menu getMenu() -> getMenu
    void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    void ensureMenu() -> j
    void ensureMenuView() -> k
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setOnMenuItemClickListener(android.support.v7.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    int getContentInsetStart() -> getContentInsetStart
    int getContentInsetEnd() -> getContentInsetEnd
    void setContentInsetsAbsolute(int,int) -> setContentInsetsAbsolute
    int getContentInsetLeft() -> getContentInsetLeft
    int getContentInsetRight() -> getContentInsetRight
    int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    void ensureNavButtonView() -> l
    void ensureCollapseButtonView() -> m
    void addSystemView(android.view.View,boolean) -> n
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void postShowOverflowMenu() -> o
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void measureChildConstrained(android.view.View,int,int,int,int,int) -> p
    int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> q
    boolean shouldCollapse() -> r
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getViewListMeasuredWidth(java.util.List,int[]) -> s
    int layoutChildLeft(android.view.View,int,int[],int) -> t
    int layoutChildRight(android.view.View,int,int[],int) -> u
    int getChildTop(android.view.View,int) -> v
    int getChildVerticalGravity(int) -> w
    void addCustomViewsWithGravity(java.util.List,int) -> x
    int getChildHorizontalGravity(int) -> y
    boolean shouldLayout(android.view.View) -> z
    int getHorizontalMargins(android.view.View) -> aa
    int getVerticalMargins(android.view.View) -> ab
    android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.support.v7.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.v7.widget.DecorToolbar getWrapper() -> getWrapper
    void removeChildrenForExpandedActionView() -> ac
    void addChildrenForExpandedActionView() -> ad
    boolean isChildOrHidden(android.view.View) -> ae
    void setCollapsible(boolean) -> setCollapsible
    void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    void ensureContentInsets() -> af
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.Toolbar$OnMenuItemClickListener access$000(android.support.v7.widget.Toolbar) -> ag
    void access$200(android.support.v7.widget.Toolbar) -> ah
    android.widget.ImageButton access$300(android.support.v7.widget.Toolbar) -> ai
    int access$400(android.support.v7.widget.Toolbar) -> aj
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.j.a.r:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> a
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> b
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> c
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> d
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> e
    void setTint(android.graphics.drawable.Drawable,int) -> f
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> g
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> h
    int getAlpha(android.graphics.drawable.Drawable) -> i
    void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> j
    boolean canApplyTheme(android.graphics.drawable.Drawable) -> k
    android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> l
    void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> m
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> n
    boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> o
    int getLayoutDirection(android.graphics.drawable.Drawable) -> p
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v7.widget.SearchView$OnSuggestionListener -> android.support.v7.widget.bp:
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.j.a.i:
    void <init>() -> <init>
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> b
android.support.design.widget.FloatingActionButtonIcs$2 -> android.support.design.widget.r:
    boolean val$fromUser -> a
    android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener -> b
    android.support.design.widget.FloatingActionButtonIcs this$0 -> c
    void <init>(android.support.design.widget.FloatingActionButtonIcs,boolean,android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.squareup.picasso.Picasso$CleanupThread$1 -> com.squareup.a.bd:
    java.lang.Exception val$e -> a
    com.squareup.picasso.Picasso$CleanupThread this$0 -> b
    void <init>(com.squareup.picasso.Picasso$CleanupThread,java.lang.Exception) -> <init>
    void run() -> run
android.support.v7.widget.ViewInfoStore$InfoRecord -> android.support.v7.widget.gx:
    int flags -> a
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo preInfo -> b
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo postInfo -> c
    android.support.v4.util.Pools$Pool sPool -> d
    void <init>() -> <init>
    android.support.v7.widget.ViewInfoStore$InfoRecord obtain() -> a
    void recycle(android.support.v7.widget.ViewInfoStore$InfoRecord) -> b
    void drainCache() -> c
    void <clinit>() -> <clinit>
android.support.v4.content.res.ResourcesCompatApi21 -> android.support.v4.d.a.c:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> a
com.murrayc.galaxyzoo.app.provider.HttpUtils$FileCacheException -> com.murrayc.galaxyzoo.app.provider.d:
    void <init>(java.lang.String,java.lang.Exception) -> <init>
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.a.bw:
    void <init>() -> <init>
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v7.widget.GridLayoutManager$LayoutParams -> android.support.v7.widget.al:
    int mSpanIndex -> a
    int mSpanSize -> b
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    int getSpanIndex() -> e
    int getSpanSize() -> f
    int access$000(android.support.v7.widget.GridLayoutManager$LayoutParams) -> g
    int access$100(android.support.v7.widget.GridLayoutManager$LayoutParams) -> h
    int access$002(android.support.v7.widget.GridLayoutManager$LayoutParams,int) -> i
    int access$102(android.support.v7.widget.GridLayoutManager$LayoutParams,int) -> j
com.murrayc.galaxyzoo.app.QuestionHelpFragment -> com.murrayc.galaxyzoo.app.t:
    android.view.View mRootView -> a
    void <init>() -> <init>
    void update() -> b
    void addRowForAnswer(android.content.Context,android.widget.TableLayout,com.murrayc.galaxyzoo.app.DecisionTree$Question,com.murrayc.galaxyzoo.app.DecisionTree$BaseButton) -> c
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> d
    void onExampleImageClicked(android.view.View,com.murrayc.galaxyzoo.app.DecisionTree$BaseButton,int) -> d
    void onSingletonInitialized() -> g
    void -wrap0(com.murrayc.galaxyzoo.app.QuestionHelpFragment,android.view.View,com.murrayc.galaxyzoo.app.DecisionTree$BaseButton,int) -> e
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.a.p:
    void <init>() -> <init>
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> c
com.android.volley.AuthFailureError -> com.android.a.h:
    android.content.Intent mResolutionIntent -> a
    void <init>() -> <init>
    void <init>(com.android.volley.NetworkResponse) -> <init>
    java.lang.String getMessage() -> getMessage
com.murrayc.galaxyzoo.app.provider.Config -> com.murrayc.galaxyzoo.app.provider.f:
    java.util.Map SUBJECT_GROUPS -> a
    java.util.List SUBJECT_GROUPS_TO_USE_FOR_NEW_QUERIES -> b
    void <init>() -> <init>
    java.util.List getSubjectGroupsToUseForNewQueries() -> a
    void <clinit>() -> <clinit>
android.support.v4.view.MotionEventCompat -> android.support.v4.a.cu:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    float getAxisValue(android.view.MotionEvent,int) -> c
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v7.widget.RecyclerView$AdapterDataObservable -> android.support.v7.widget.g:
    void <init>() -> <init>
    void notifyChanged() -> a
android.support.v7.widget.DefaultItemAnimator$1 -> android.support.v7.widget.gt:
    java.util.ArrayList val$moves -> a
    android.support.v7.widget.DefaultItemAnimator this$0 -> b
    void <init>(android.support.v7.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    void run() -> run
com.android.volley.toolbox.StringRequest -> com.android.a.a.a:
    com.android.volley.Response$Listener mListener -> a
    void <init>(int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    void deliverResponse(java.lang.String) -> a
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> b
    void deliverResponse(java.lang.Object) -> c
android.support.v7.app.AppCompatDelegateImplV9$6 -> android.support.v7.c.t:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v4.app.TaskStackBuilder -> android.support.v4.b.m:
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> a
    java.util.ArrayList mIntents -> b
    android.content.Context mSourceContext -> c
    void <init>(android.content.Context) -> <init>
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> a
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> b
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> c
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> d
    java.util.Iterator iterator() -> iterator
    void startActivities() -> e
    void startActivities(android.os.Bundle) -> f
    void <clinit>() -> <clinit>
com.squareup.picasso.ContentStreamRequestHandler -> com.squareup.a.at:
    android.content.Context context -> a
    void <init>(android.content.Context) -> <init>
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> b
    java.io.InputStream getInputStream(com.squareup.picasso.Request) -> b
android.support.v7.widget.ActionBarBackgroundDrawableV21 -> android.support.v7.widget.dp:
    void <init>(android.support.v7.widget.ActionBarContainer) -> <init>
    void getOutline(android.graphics.Outline) -> getOutline
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.a.dj:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.view.ViewPropertyAnimatorCompat$1 -> android.support.v4.a.dw:
android.support.v4.app.AppOpsManagerCompat -> android.support.v4.b.bw:
    android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl IMPL -> a
    void <init>() -> <init>
    java.lang.String permissionToOp(java.lang.String) -> a
    int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> b
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentTransaction -> android.support.v4.b.aa:
    void <init>() -> <init>
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> c
    int commit() -> d
com.murrayc.galaxyzoo.app.SubjectViewerActivity -> com.murrayc.galaxyzoo.app.SubjectViewerActivity:
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup -> android.support.v7.widget.am:
    void <init>() -> <init>
    int getSpanSize(int) -> a
    int getSpanIndex(int,int) -> b
com.murrayc.galaxyzoo.app.LoginActivity -> com.murrayc.galaxyzoo.app.LoginActivity:
    com.murrayc.galaxyzoo.app.LoginActivity$UserLoginTask mAuthTask -> a
    com.murrayc.galaxyzoo.app.provider.client.ZooniverseClient mClient -> b
    boolean mExistingAccountIsAnonymous -> c
    java.lang.String mExistingAccountName -> d
    android.view.View mLoginFormView -> e
    android.widget.EditText mPasswordView -> f
    android.view.View mProgressView -> g
    android.widget.EditText mUsernameView -> h
    void <init>() -> <init>
    void attemptLogin() -> a
    void finishWithResult(com.murrayc.galaxyzoo.app.LoginUtils$LoginResult) -> b
    boolean isPasswordValid(java.lang.String) -> c
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onExistingLoginRetrieved(com.murrayc.galaxyzoo.app.LoginUtils$LoginDetails) -> d
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void setTextViewLink(int,java.lang.String,int) -> e
    void showProgress(boolean) -> f
    com.murrayc.galaxyzoo.app.provider.client.ZooniverseClient -get0(com.murrayc.galaxyzoo.app.LoginActivity) -> g
    android.view.View -get1(com.murrayc.galaxyzoo.app.LoginActivity) -> h
    android.widget.EditText -get2(com.murrayc.galaxyzoo.app.LoginActivity) -> i
    android.view.View -get3(com.murrayc.galaxyzoo.app.LoginActivity) -> j
    com.murrayc.galaxyzoo.app.LoginActivity$UserLoginTask -set0(com.murrayc.galaxyzoo.app.LoginActivity,com.murrayc.galaxyzoo.app.LoginActivity$UserLoginTask) -> k
    void -wrap0(com.murrayc.galaxyzoo.app.LoginActivity) -> l
    void -wrap1(com.murrayc.galaxyzoo.app.LoginActivity,com.murrayc.galaxyzoo.app.LoginUtils$LoginResult) -> m
    void -wrap2(com.murrayc.galaxyzoo.app.LoginActivity,com.murrayc.galaxyzoo.app.LoginUtils$LoginDetails) -> n
    void -wrap3(com.murrayc.galaxyzoo.app.LoginActivity,boolean) -> o
android.support.design.widget.FloatingActionButtonIcs -> android.support.design.widget.bz:
    float mRotation -> a
    void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate,android.support.design.widget.ValueAnimatorCompat$Creator) -> <init>
    boolean requirePreDrawListener() -> b
    void onPreDraw() -> i
    void hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> h
    void show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> i
    boolean shouldAnimateVisibilityChange() -> a
    void updateFromViewRotation() -> k
android.support.v7.view.menu.MenuItemImpl -> android.support.v7.view.menu.e:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.support.v7.view.menu.MenuBuilder mMenu -> l
    android.support.v7.view.menu.SubMenuBuilder mSubMenu -> m
    java.lang.Runnable mItemCallback -> n
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> o
    int mFlags -> p
    int mShowAsAction -> q
    android.view.View mActionView -> r
    android.support.v4.view.ActionProvider mActionProvider -> s
    android.support.v4.view.MenuItemCompat$OnActionExpandListener mOnActionExpandListener -> t
    boolean mIsActionViewExpanded -> u
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> v
    java.lang.String sPrependShortcutLabel -> w
    java.lang.String sEnterShortcutLabel -> x
    java.lang.String sDeleteShortcutLabel -> y
    java.lang.String sSpaceShortcutLabel -> z
    void <init>(android.support.v7.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    boolean invoke() -> a
    boolean isEnabled() -> isEnabled
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> b
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    char getShortcut() -> c
    java.lang.String getShortcutLabel() -> d
    boolean shouldShowShortcut() -> e
    android.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(android.support.v7.view.menu.SubMenuBuilder) -> f
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(android.support.v7.view.menu.MenuView$ItemView) -> g
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> h
    boolean isExclusiveCheckable() -> i
    boolean isChecked() -> isChecked
    android.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> j
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> k
    android.view.MenuItem setVisible(boolean) -> setVisible
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> l
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void actionFormatChanged() -> m
    boolean shouldShowIcon() -> n
    boolean isActionButton() -> o
    boolean requestsActionButton() -> p
    boolean requiresActionButton() -> q
    void setIsActionButton(boolean) -> r
    boolean showsTextAsAction() -> s
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> t
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> u
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> v
    boolean hasCollapsibleActionView() -> w
    void setActionViewExpanded(boolean) -> x
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.support.v7.view.menu.MenuBuilder access$000(android.support.v7.view.menu.MenuItemImpl) -> y
com.android.volley.toolbox.Volley -> com.android.a.a.d:
    void <init>() -> <init>
    com.android.volley.RequestQueue newRequestQueue(android.content.Context,com.android.volley.toolbox.HttpStack) -> a
    com.android.volley.RequestQueue newRequestQueue(android.content.Context) -> b
android.support.v4.content.ContextCompatApi21 -> android.support.v4.d.o:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
com.murrayc.galaxyzoo.app.ClassifyActivity$5 -> com.murrayc.galaxyzoo.app.bz:
    com.murrayc.galaxyzoo.app.ClassifyActivity this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.ClassifyActivity) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v7.appcompat.R$styleable -> android.support.v7.a.j:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_contentInsetEnd -> ActionBar_contentInsetEnd
    int ActionBar_contentInsetEndWithActions -> ActionBar_contentInsetEndWithActions
    int ActionBar_contentInsetLeft -> ActionBar_contentInsetLeft
    int ActionBar_contentInsetRight -> ActionBar_contentInsetRight
    int ActionBar_contentInsetStart -> ActionBar_contentInsetStart
    int ActionBar_contentInsetStartWithNavigation -> ActionBar_contentInsetStartWithNavigation
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_elevation -> ActionBar_elevation
    int ActionBar_height -> ActionBar_height
    int ActionBar_hideOnContentScroll -> ActionBar_hideOnContentScroll
    int ActionBar_homeAsUpIndicator -> ActionBar_homeAsUpIndicator
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_popupTheme -> ActionBar_popupTheme
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_closeItemLayout -> ActionMode_closeItemLayout
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_layout -> AlertDialog_android_layout
    int AlertDialog_buttonPanelSideLayout -> AlertDialog_buttonPanelSideLayout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int[] AppCompatImageView -> AppCompatImageView
    int AppCompatImageView_android_src -> AppCompatImageView_android_src
    int AppCompatImageView_srcCompat -> AppCompatImageView_srcCompat
    int[] AppCompatSeekBar -> AppCompatSeekBar
    int AppCompatSeekBar_android_thumb -> AppCompatSeekBar_android_thumb
    int AppCompatSeekBar_tickMark -> AppCompatSeekBar_tickMark
    int AppCompatSeekBar_tickMarkTint -> AppCompatSeekBar_tickMarkTint
    int AppCompatSeekBar_tickMarkTintMode -> AppCompatSeekBar_tickMarkTintMode
    int[] AppCompatTextHelper -> AppCompatTextHelper
    int AppCompatTextHelper_android_drawableBottom -> AppCompatTextHelper_android_drawableBottom
    int AppCompatTextHelper_android_drawableEnd -> AppCompatTextHelper_android_drawableEnd
    int AppCompatTextHelper_android_drawableLeft -> AppCompatTextHelper_android_drawableLeft
    int AppCompatTextHelper_android_drawableRight -> AppCompatTextHelper_android_drawableRight
    int AppCompatTextHelper_android_drawableStart -> AppCompatTextHelper_android_drawableStart
    int AppCompatTextHelper_android_drawableTop -> AppCompatTextHelper_android_drawableTop
    int AppCompatTextHelper_android_textAppearance -> AppCompatTextHelper_android_textAppearance
    int[] AppCompatTextView -> AppCompatTextView
    int AppCompatTextView_android_textAppearance -> AppCompatTextView_android_textAppearance
    int AppCompatTextView_textAllCaps -> AppCompatTextView_textAllCaps
    int[] AppCompatTheme -> AppCompatTheme
    int AppCompatTheme_actionBarDivider -> AppCompatTheme_actionBarDivider
    int AppCompatTheme_actionBarItemBackground -> AppCompatTheme_actionBarItemBackground
    int AppCompatTheme_actionBarPopupTheme -> AppCompatTheme_actionBarPopupTheme
    int AppCompatTheme_actionBarSize -> AppCompatTheme_actionBarSize
    int AppCompatTheme_actionBarSplitStyle -> AppCompatTheme_actionBarSplitStyle
    int AppCompatTheme_actionBarStyle -> AppCompatTheme_actionBarStyle
    int AppCompatTheme_actionBarTabBarStyle -> AppCompatTheme_actionBarTabBarStyle
    int AppCompatTheme_actionBarTabStyle -> AppCompatTheme_actionBarTabStyle
    int AppCompatTheme_actionBarTabTextStyle -> AppCompatTheme_actionBarTabTextStyle
    int AppCompatTheme_actionBarTheme -> AppCompatTheme_actionBarTheme
    int AppCompatTheme_actionBarWidgetTheme -> AppCompatTheme_actionBarWidgetTheme
    int AppCompatTheme_actionButtonStyle -> AppCompatTheme_actionButtonStyle
    int AppCompatTheme_actionDropDownStyle -> AppCompatTheme_actionDropDownStyle
    int AppCompatTheme_actionMenuTextAppearance -> AppCompatTheme_actionMenuTextAppearance
    int AppCompatTheme_actionMenuTextColor -> AppCompatTheme_actionMenuTextColor
    int AppCompatTheme_actionModeBackground -> AppCompatTheme_actionModeBackground
    int AppCompatTheme_actionModeCloseButtonStyle -> AppCompatTheme_actionModeCloseButtonStyle
    int AppCompatTheme_actionModeCloseDrawable -> AppCompatTheme_actionModeCloseDrawable
    int AppCompatTheme_actionModeCopyDrawable -> AppCompatTheme_actionModeCopyDrawable
    int AppCompatTheme_actionModeCutDrawable -> AppCompatTheme_actionModeCutDrawable
    int AppCompatTheme_actionModeFindDrawable -> AppCompatTheme_actionModeFindDrawable
    int AppCompatTheme_actionModePasteDrawable -> AppCompatTheme_actionModePasteDrawable
    int AppCompatTheme_actionModePopupWindowStyle -> AppCompatTheme_actionModePopupWindowStyle
    int AppCompatTheme_actionModeSelectAllDrawable -> AppCompatTheme_actionModeSelectAllDrawable
    int AppCompatTheme_actionModeShareDrawable -> AppCompatTheme_actionModeShareDrawable
    int AppCompatTheme_actionModeSplitBackground -> AppCompatTheme_actionModeSplitBackground
    int AppCompatTheme_actionModeStyle -> AppCompatTheme_actionModeStyle
    int AppCompatTheme_actionModeWebSearchDrawable -> AppCompatTheme_actionModeWebSearchDrawable
    int AppCompatTheme_actionOverflowButtonStyle -> AppCompatTheme_actionOverflowButtonStyle
    int AppCompatTheme_actionOverflowMenuStyle -> AppCompatTheme_actionOverflowMenuStyle
    int AppCompatTheme_activityChooserViewStyle -> AppCompatTheme_activityChooserViewStyle
    int AppCompatTheme_alertDialogButtonGroupStyle -> AppCompatTheme_alertDialogButtonGroupStyle
    int AppCompatTheme_alertDialogCenterButtons -> AppCompatTheme_alertDialogCenterButtons
    int AppCompatTheme_alertDialogStyle -> AppCompatTheme_alertDialogStyle
    int AppCompatTheme_alertDialogTheme -> AppCompatTheme_alertDialogTheme
    int AppCompatTheme_android_windowAnimationStyle -> AppCompatTheme_android_windowAnimationStyle
    int AppCompatTheme_android_windowIsFloating -> AppCompatTheme_android_windowIsFloating
    int AppCompatTheme_autoCompleteTextViewStyle -> AppCompatTheme_autoCompleteTextViewStyle
    int AppCompatTheme_borderlessButtonStyle -> AppCompatTheme_borderlessButtonStyle
    int AppCompatTheme_buttonBarButtonStyle -> AppCompatTheme_buttonBarButtonStyle
    int AppCompatTheme_buttonBarNegativeButtonStyle -> AppCompatTheme_buttonBarNegativeButtonStyle
    int AppCompatTheme_buttonBarNeutralButtonStyle -> AppCompatTheme_buttonBarNeutralButtonStyle
    int AppCompatTheme_buttonBarPositiveButtonStyle -> AppCompatTheme_buttonBarPositiveButtonStyle
    int AppCompatTheme_buttonBarStyle -> AppCompatTheme_buttonBarStyle
    int AppCompatTheme_buttonStyle -> AppCompatTheme_buttonStyle
    int AppCompatTheme_buttonStyleSmall -> AppCompatTheme_buttonStyleSmall
    int AppCompatTheme_checkboxStyle -> AppCompatTheme_checkboxStyle
    int AppCompatTheme_checkedTextViewStyle -> AppCompatTheme_checkedTextViewStyle
    int AppCompatTheme_colorAccent -> AppCompatTheme_colorAccent
    int AppCompatTheme_colorBackgroundFloating -> AppCompatTheme_colorBackgroundFloating
    int AppCompatTheme_colorButtonNormal -> AppCompatTheme_colorButtonNormal
    int AppCompatTheme_colorControlActivated -> AppCompatTheme_colorControlActivated
    int AppCompatTheme_colorControlHighlight -> AppCompatTheme_colorControlHighlight
    int AppCompatTheme_colorControlNormal -> AppCompatTheme_colorControlNormal
    int AppCompatTheme_colorPrimary -> AppCompatTheme_colorPrimary
    int AppCompatTheme_colorPrimaryDark -> AppCompatTheme_colorPrimaryDark
    int AppCompatTheme_colorSwitchThumbNormal -> AppCompatTheme_colorSwitchThumbNormal
    int AppCompatTheme_controlBackground -> AppCompatTheme_controlBackground
    int AppCompatTheme_dialogPreferredPadding -> AppCompatTheme_dialogPreferredPadding
    int AppCompatTheme_dialogTheme -> AppCompatTheme_dialogTheme
    int AppCompatTheme_dividerHorizontal -> AppCompatTheme_dividerHorizontal
    int AppCompatTheme_dividerVertical -> AppCompatTheme_dividerVertical
    int AppCompatTheme_dropDownListViewStyle -> AppCompatTheme_dropDownListViewStyle
    int AppCompatTheme_dropdownListPreferredItemHeight -> AppCompatTheme_dropdownListPreferredItemHeight
    int AppCompatTheme_editTextBackground -> AppCompatTheme_editTextBackground
    int AppCompatTheme_editTextColor -> AppCompatTheme_editTextColor
    int AppCompatTheme_editTextStyle -> AppCompatTheme_editTextStyle
    int AppCompatTheme_homeAsUpIndicator -> AppCompatTheme_homeAsUpIndicator
    int AppCompatTheme_imageButtonStyle -> AppCompatTheme_imageButtonStyle
    int AppCompatTheme_listChoiceBackgroundIndicator -> AppCompatTheme_listChoiceBackgroundIndicator
    int AppCompatTheme_listDividerAlertDialog -> AppCompatTheme_listDividerAlertDialog
    int AppCompatTheme_listMenuViewStyle -> AppCompatTheme_listMenuViewStyle
    int AppCompatTheme_listPopupWindowStyle -> AppCompatTheme_listPopupWindowStyle
    int AppCompatTheme_listPreferredItemHeight -> AppCompatTheme_listPreferredItemHeight
    int AppCompatTheme_listPreferredItemHeightLarge -> AppCompatTheme_listPreferredItemHeightLarge
    int AppCompatTheme_listPreferredItemHeightSmall -> AppCompatTheme_listPreferredItemHeightSmall
    int AppCompatTheme_listPreferredItemPaddingLeft -> AppCompatTheme_listPreferredItemPaddingLeft
    int AppCompatTheme_listPreferredItemPaddingRight -> AppCompatTheme_listPreferredItemPaddingRight
    int AppCompatTheme_panelBackground -> AppCompatTheme_panelBackground
    int AppCompatTheme_panelMenuListTheme -> AppCompatTheme_panelMenuListTheme
    int AppCompatTheme_panelMenuListWidth -> AppCompatTheme_panelMenuListWidth
    int AppCompatTheme_popupMenuStyle -> AppCompatTheme_popupMenuStyle
    int AppCompatTheme_popupWindowStyle -> AppCompatTheme_popupWindowStyle
    int AppCompatTheme_radioButtonStyle -> AppCompatTheme_radioButtonStyle
    int AppCompatTheme_ratingBarStyle -> AppCompatTheme_ratingBarStyle
    int AppCompatTheme_ratingBarStyleIndicator -> AppCompatTheme_ratingBarStyleIndicator
    int AppCompatTheme_ratingBarStyleSmall -> AppCompatTheme_ratingBarStyleSmall
    int AppCompatTheme_searchViewStyle -> AppCompatTheme_searchViewStyle
    int AppCompatTheme_seekBarStyle -> AppCompatTheme_seekBarStyle
    int AppCompatTheme_selectableItemBackground -> AppCompatTheme_selectableItemBackground
    int AppCompatTheme_selectableItemBackgroundBorderless -> AppCompatTheme_selectableItemBackgroundBorderless
    int AppCompatTheme_spinnerDropDownItemStyle -> AppCompatTheme_spinnerDropDownItemStyle
    int AppCompatTheme_spinnerStyle -> AppCompatTheme_spinnerStyle
    int AppCompatTheme_switchStyle -> AppCompatTheme_switchStyle
    int AppCompatTheme_textAppearanceLargePopupMenu -> AppCompatTheme_textAppearanceLargePopupMenu
    int AppCompatTheme_textAppearanceListItem -> AppCompatTheme_textAppearanceListItem
    int AppCompatTheme_textAppearanceListItemSmall -> AppCompatTheme_textAppearanceListItemSmall
    int AppCompatTheme_textAppearancePopupMenuHeader -> AppCompatTheme_textAppearancePopupMenuHeader
    int AppCompatTheme_textAppearanceSearchResultSubtitle -> AppCompatTheme_textAppearanceSearchResultSubtitle
    int AppCompatTheme_textAppearanceSearchResultTitle -> AppCompatTheme_textAppearanceSearchResultTitle
    int AppCompatTheme_textAppearanceSmallPopupMenu -> AppCompatTheme_textAppearanceSmallPopupMenu
    int AppCompatTheme_textColorAlertDialogListItem -> AppCompatTheme_textColorAlertDialogListItem
    int AppCompatTheme_textColorSearchUrl -> AppCompatTheme_textColorSearchUrl
    int AppCompatTheme_toolbarNavigationButtonStyle -> AppCompatTheme_toolbarNavigationButtonStyle
    int AppCompatTheme_toolbarStyle -> AppCompatTheme_toolbarStyle
    int AppCompatTheme_windowActionBar -> AppCompatTheme_windowActionBar
    int AppCompatTheme_windowActionBarOverlay -> AppCompatTheme_windowActionBarOverlay
    int AppCompatTheme_windowActionModeOverlay -> AppCompatTheme_windowActionModeOverlay
    int AppCompatTheme_windowFixedHeightMajor -> AppCompatTheme_windowFixedHeightMajor
    int AppCompatTheme_windowFixedHeightMinor -> AppCompatTheme_windowFixedHeightMinor
    int AppCompatTheme_windowFixedWidthMajor -> AppCompatTheme_windowFixedWidthMajor
    int AppCompatTheme_windowFixedWidthMinor -> AppCompatTheme_windowFixedWidthMinor
    int AppCompatTheme_windowMinWidthMajor -> AppCompatTheme_windowMinWidthMajor
    int AppCompatTheme_windowMinWidthMinor -> AppCompatTheme_windowMinWidthMinor
    int AppCompatTheme_windowNoTitle -> AppCompatTheme_windowNoTitle
    int[] ButtonBarLayout -> ButtonBarLayout
    int ButtonBarLayout_allowStacking -> ButtonBarLayout_allowStacking
    int[] ColorStateListItem -> ColorStateListItem
    int ColorStateListItem_alpha -> ColorStateListItem_alpha
    int ColorStateListItem_android_alpha -> ColorStateListItem_android_alpha
    int ColorStateListItem_android_color -> ColorStateListItem_android_color
    int[] CompoundButton -> CompoundButton
    int CompoundButton_android_button -> CompoundButton_android_button
    int CompoundButton_buttonTint -> CompoundButton_buttonTint
    int CompoundButton_buttonTintMode -> CompoundButton_buttonTintMode
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int DrawerArrowToggle_arrowHeadLength -> DrawerArrowToggle_arrowHeadLength
    int DrawerArrowToggle_arrowShaftLength -> DrawerArrowToggle_arrowShaftLength
    int DrawerArrowToggle_barLength -> DrawerArrowToggle_barLength
    int DrawerArrowToggle_color -> DrawerArrowToggle_color
    int DrawerArrowToggle_drawableSize -> DrawerArrowToggle_drawableSize
    int DrawerArrowToggle_gapBetweenBars -> DrawerArrowToggle_gapBetweenBars
    int DrawerArrowToggle_spinBars -> DrawerArrowToggle_spinBars
    int DrawerArrowToggle_thickness -> DrawerArrowToggle_thickness
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int LinearLayoutCompat_Layout_android_layout_gravity -> LinearLayoutCompat_Layout_android_layout_gravity
    int LinearLayoutCompat_Layout_android_layout_height -> LinearLayoutCompat_Layout_android_layout_height
    int LinearLayoutCompat_Layout_android_layout_weight -> LinearLayoutCompat_Layout_android_layout_weight
    int LinearLayoutCompat_Layout_android_layout_width -> LinearLayoutCompat_Layout_android_layout_width
    int LinearLayoutCompat_android_baselineAligned -> LinearLayoutCompat_android_baselineAligned
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> LinearLayoutCompat_android_baselineAlignedChildIndex
    int LinearLayoutCompat_android_gravity -> LinearLayoutCompat_android_gravity
    int LinearLayoutCompat_android_orientation -> LinearLayoutCompat_android_orientation
    int LinearLayoutCompat_android_weightSum -> LinearLayoutCompat_android_weightSum
    int LinearLayoutCompat_divider -> LinearLayoutCompat_divider
    int LinearLayoutCompat_dividerPadding -> LinearLayoutCompat_dividerPadding
    int LinearLayoutCompat_measureWithLargestChild -> LinearLayoutCompat_measureWithLargestChild
    int LinearLayoutCompat_showDividers -> LinearLayoutCompat_showDividers
    int[] ListPopupWindow -> ListPopupWindow
    int ListPopupWindow_android_dropDownHorizontalOffset -> ListPopupWindow_android_dropDownHorizontalOffset
    int ListPopupWindow_android_dropDownVerticalOffset -> ListPopupWindow_android_dropDownVerticalOffset
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int MenuView_preserveIconSpacing -> MenuView_preserveIconSpacing
    int MenuView_subMenuArrow -> MenuView_subMenuArrow
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int PopupWindowBackgroundState_state_above_anchor -> PopupWindowBackgroundState_state_above_anchor
    int PopupWindow_android_popupAnimationStyle -> PopupWindow_android_popupAnimationStyle
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int PopupWindow_overlapAnchor -> PopupWindow_overlapAnchor
    int[] SearchView -> SearchView
    int SearchView_android_focusable -> SearchView_android_focusable
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_closeIcon -> SearchView_closeIcon
    int SearchView_commitIcon -> SearchView_commitIcon
    int SearchView_defaultQueryHint -> SearchView_defaultQueryHint
    int SearchView_goIcon -> SearchView_goIcon
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_layout -> SearchView_layout
    int SearchView_queryBackground -> SearchView_queryBackground
    int SearchView_queryHint -> SearchView_queryHint
    int SearchView_searchHintIcon -> SearchView_searchHintIcon
    int SearchView_searchIcon -> SearchView_searchIcon
    int SearchView_submitBackground -> SearchView_submitBackground
    int SearchView_suggestionRowLayout -> SearchView_suggestionRowLayout
    int SearchView_voiceIcon -> SearchView_voiceIcon
    int[] Spinner -> Spinner
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_entries -> Spinner_android_entries
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_popupTheme -> Spinner_popupTheme
    int[] SwitchCompat -> SwitchCompat
    int SwitchCompat_android_textOff -> SwitchCompat_android_textOff
    int SwitchCompat_android_textOn -> SwitchCompat_android_textOn
    int SwitchCompat_android_thumb -> SwitchCompat_android_thumb
    int SwitchCompat_showText -> SwitchCompat_showText
    int SwitchCompat_splitTrack -> SwitchCompat_splitTrack
    int SwitchCompat_switchMinWidth -> SwitchCompat_switchMinWidth
    int SwitchCompat_switchPadding -> SwitchCompat_switchPadding
    int SwitchCompat_switchTextAppearance -> SwitchCompat_switchTextAppearance
    int SwitchCompat_thumbTextPadding -> SwitchCompat_thumbTextPadding
    int SwitchCompat_thumbTint -> SwitchCompat_thumbTint
    int SwitchCompat_thumbTintMode -> SwitchCompat_thumbTintMode
    int SwitchCompat_track -> SwitchCompat_track
    int SwitchCompat_trackTint -> SwitchCompat_trackTint
    int SwitchCompat_trackTintMode -> SwitchCompat_trackTintMode
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_shadowColor -> TextAppearance_android_shadowColor
    int TextAppearance_android_shadowDx -> TextAppearance_android_shadowDx
    int TextAppearance_android_shadowDy -> TextAppearance_android_shadowDy
    int TextAppearance_android_shadowRadius -> TextAppearance_android_shadowRadius
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int TextAppearance_textAllCaps -> TextAppearance_textAllCaps
    int[] Toolbar -> Toolbar
    int Toolbar_android_gravity -> Toolbar_android_gravity
    int Toolbar_android_minHeight -> Toolbar_android_minHeight
    int Toolbar_buttonGravity -> Toolbar_buttonGravity
    int Toolbar_collapseContentDescription -> Toolbar_collapseContentDescription
    int Toolbar_collapseIcon -> Toolbar_collapseIcon
    int Toolbar_contentInsetEnd -> Toolbar_contentInsetEnd
    int Toolbar_contentInsetEndWithActions -> Toolbar_contentInsetEndWithActions
    int Toolbar_contentInsetLeft -> Toolbar_contentInsetLeft
    int Toolbar_contentInsetRight -> Toolbar_contentInsetRight
    int Toolbar_contentInsetStart -> Toolbar_contentInsetStart
    int Toolbar_contentInsetStartWithNavigation -> Toolbar_contentInsetStartWithNavigation
    int Toolbar_logo -> Toolbar_logo
    int Toolbar_logoDescription -> Toolbar_logoDescription
    int Toolbar_maxButtonHeight -> Toolbar_maxButtonHeight
    int Toolbar_navigationContentDescription -> Toolbar_navigationContentDescription
    int Toolbar_navigationIcon -> Toolbar_navigationIcon
    int Toolbar_popupTheme -> Toolbar_popupTheme
    int Toolbar_subtitle -> Toolbar_subtitle
    int Toolbar_subtitleTextAppearance -> Toolbar_subtitleTextAppearance
    int Toolbar_subtitleTextColor -> Toolbar_subtitleTextColor
    int Toolbar_title -> Toolbar_title
    int Toolbar_titleMargin -> Toolbar_titleMargin
    int Toolbar_titleMarginBottom -> Toolbar_titleMarginBottom
    int Toolbar_titleMarginEnd -> Toolbar_titleMarginEnd
    int Toolbar_titleMarginStart -> Toolbar_titleMarginStart
    int Toolbar_titleMarginTop -> Toolbar_titleMarginTop
    int Toolbar_titleMargins -> Toolbar_titleMargins
    int Toolbar_titleTextAppearance -> Toolbar_titleTextAppearance
    int Toolbar_titleTextColor -> Toolbar_titleTextColor
    int[] View -> View
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int ViewBackgroundHelper_android_background -> ViewBackgroundHelper_android_background
    int ViewBackgroundHelper_backgroundTint -> ViewBackgroundHelper_backgroundTint
    int ViewBackgroundHelper_backgroundTintMode -> ViewBackgroundHelper_backgroundTintMode
    int[] ViewStubCompat -> ViewStubCompat
    int ViewStubCompat_android_id -> ViewStubCompat_android_id
    int ViewStubCompat_android_inflatedId -> ViewStubCompat_android_inflatedId
    int ViewStubCompat_android_layout -> ViewStubCompat_android_layout
    int View_android_focusable -> View_android_focusable
    int View_android_theme -> View_android_theme
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int View_theme -> View_theme
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.os.CancellationSignal$OnCancelListener -> android.support.v4.f.n:
    void onCancel() -> a
android.support.v7.widget.ForwardingListener$TriggerLongPress -> android.support.v7.widget.dj:
    android.support.v7.widget.ForwardingListener this$0 -> a
    void <init>(android.support.v7.widget.ForwardingListener) -> <init>
    void run() -> run
    void <init>(android.support.v7.widget.ForwardingListener,android.support.v7.widget.ForwardingListener$1) -> <init>
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.j.a.y:
    void <init>() -> <init>
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> b
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> d
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> e
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> f
    void setTint(android.graphics.drawable.Drawable,int) -> g
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> h
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> i
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> c
    boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> a
    int getLayoutDirection(android.graphics.drawable.Drawable) -> b
    int getAlpha(android.graphics.drawable.Drawable) -> j
    void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> k
    boolean canApplyTheme(android.graphics.drawable.Drawable) -> l
    android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> m
    void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> n
android.support.v4.app.Fragment$1 -> android.support.v4.b.bj:
    android.support.v4.app.Fragment this$0 -> a
    void <init>(android.support.v4.app.Fragment) -> <init>
    android.view.View onFindViewById(int) -> h
    boolean onHasView() -> i
android.support.v7.widget.ActivityChooserModel$HistoricalRecord -> android.support.v7.widget.fj:
    android.content.ComponentName activity -> a
    long time -> b
    float weight -> c
    void <init>(java.lang.String,long,float) -> <init>
    void <init>(android.content.ComponentName,long,float) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.f.d:
    void <init>() -> <init>
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v7.app.AlertController$ButtonHandler -> android.support.v7.c.aa:
    java.lang.ref.WeakReference mDialog -> a
    void <init>(android.content.DialogInterface) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.murrayc.galaxyzoo.app.LoginUtils$1 -> com.murrayc.galaxyzoo.app.bp:
    android.app.Activity val$activity -> a
    void <init>(android.content.Context,android.app.Activity) -> <init>
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
android.support.v7.app.AppCompatDelegateImplV9 -> android.support.v7.c.ad:
    android.support.v7.widget.DecorContentParent mDecorContentParent -> a
    android.support.v7.app.AppCompatDelegateImplV9$ActionMenuPresenterCallback mActionMenuPresenterCallback -> b
    android.support.v7.app.AppCompatDelegateImplV9$PanelMenuPresenterCallback mPanelMenuPresenterCallback -> c
    android.support.v7.view.ActionMode mActionMode -> d
    android.support.v7.widget.ActionBarContextView mActionModeView -> e
    android.widget.PopupWindow mActionModePopup -> f
    java.lang.Runnable mShowActionModePopup -> g
    android.support.v4.view.ViewPropertyAnimatorCompat mFadeAnim -> h
    boolean mSubDecorInstalled -> i
    android.view.ViewGroup mSubDecor -> j
    android.widget.TextView mTitleView -> k
    android.view.View mStatusGuard -> l
    boolean mFeatureProgress -> m
    boolean mFeatureIndeterminateProgress -> n
    boolean mClosingActionMenu -> o
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState[] mPanels -> p
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState mPreparedPanel -> q
    boolean mLongPressBackDown -> r
    boolean mInvalidatePanelMenuPosted -> s
    int mInvalidatePanelMenuFeatures -> t
    java.lang.Runnable mInvalidatePanelMenuRunnable -> u
    boolean mEnableDefaultActionBarUp -> v
    android.graphics.Rect mTempRect1 -> w
    android.graphics.Rect mTempRect2 -> x
    android.support.v7.app.AppCompatViewInflater mAppCompatViewInflater -> y
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    void onCreate(android.os.Bundle) -> g
    void onPostCreate(android.os.Bundle) -> h
    void initWindowDecorActionBar() -> b
    void setSupportActionBar(android.support.v7.widget.Toolbar) -> e
    android.view.View findViewById(int) -> m
    void onConfigurationChanged(android.content.res.Configuration) -> i
    void onStop() -> k
    void onPostResume() -> l
    void setContentView(android.view.View) -> n
    void setContentView(int) -> o
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> p
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> q
    void onDestroy() -> t
    void ensureSubDecor() -> e
    android.view.ViewGroup createSubDecor() -> g
    void onSubDecorInstalled(android.view.ViewGroup) -> h
    void applyFixedSizeWindow() -> n
    boolean requestWindowFeature(int) -> u
    void onTitleChanged(java.lang.CharSequence) -> n
    void onPanelClosed(int,android.view.Menu) -> d
    boolean onMenuOpened(int,android.view.Menu) -> e
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> b
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> o
    void invalidateOptionsMenu() -> s
    android.support.v7.view.ActionMode startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback) -> p
    boolean shouldAnimateActionModeView() -> q
    void endOnGoingFadeAnimation() -> r
    boolean onBackPressed() -> u
    boolean onKeyShortcut(int,android.view.KeyEvent) -> g
    boolean dispatchKeyEvent(android.view.KeyEvent) -> f
    boolean onKeyUp(int,android.view.KeyEvent) -> v
    boolean onKeyDown(int,android.view.KeyEvent) -> w
    android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> x
    boolean shouldInheritContext(android.view.ViewParent) -> y
    void installViewFactory() -> v
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> z
    android.view.View callActivityOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    void openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent) -> aa
    boolean initializePanelDecor(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState) -> ab
    void reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> ac
    boolean initializePanelMenu(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState) -> ad
    boolean initializePanelContent(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState) -> ae
    boolean preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent) -> af
    void checkCloseActionMenu(android.support.v7.view.menu.MenuBuilder) -> ag
    void closePanel(int) -> ah
    void closePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,boolean) -> ai
    boolean onKeyDownPanel(int,android.view.KeyEvent) -> aj
    boolean onKeyUpPanel(int,android.view.KeyEvent) -> ak
    void callOnPanelClosed(int,android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.Menu) -> al
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState findMenuPanel(android.view.Menu) -> am
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState getPanelState(int,boolean) -> an
    boolean performPanelShortcut(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,int,android.view.KeyEvent,int) -> ao
    void invalidatePanelMenu(int) -> ap
    void doInvalidatePanelMenu(int) -> aq
    int updateStatusGuard(int) -> ar
    void throwFeatureRequestIfSubDecorInstalled() -> as
    int sanitizeWindowFeatureId(int) -> at
    void dismissPopups() -> au
    int access$000(android.support.v7.app.AppCompatDelegateImplV9) -> av
    void access$100(android.support.v7.app.AppCompatDelegateImplV9,int) -> aw
    boolean access$202(android.support.v7.app.AppCompatDelegateImplV9,boolean) -> ax
    int access$002(android.support.v7.app.AppCompatDelegateImplV9,int) -> ay
    int access$300(android.support.v7.app.AppCompatDelegateImplV9,int) -> az
    void access$400(android.support.v7.app.AppCompatDelegateImplV9) -> ba
    void access$500(android.support.v7.app.AppCompatDelegateImplV9) -> bb
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState access$800(android.support.v7.app.AppCompatDelegateImplV9,android.view.Menu) -> bc
    void access$900(android.support.v7.app.AppCompatDelegateImplV9,int,android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.Menu) -> bd
    void access$1000(android.support.v7.app.AppCompatDelegateImplV9,android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,boolean) -> be
    void access$1100(android.support.v7.app.AppCompatDelegateImplV9,android.support.v7.view.menu.MenuBuilder) -> bf
    void access$1400(android.support.v7.app.AppCompatDelegateImplV9,int) -> bg
android.support.graphics.drawable.VectorDrawableCompat$VGroup -> android.support.a.a.e:
    android.graphics.Matrix mStackedMatrix -> a
    java.util.ArrayList mChildren -> b
    float mRotate -> c
    float mPivotX -> d
    float mPivotY -> e
    float mScaleX -> f
    float mScaleY -> g
    float mTranslateX -> h
    float mTranslateY -> i
    android.graphics.Matrix mLocalMatrix -> j
    int mChangingConfigurations -> k
    int[] mThemeAttrs -> l
    java.lang.String mGroupName -> m
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.v4.util.ArrayMap) -> <init>
    void <init>() -> <init>
    java.lang.String getGroupName() -> a
    void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> b
    void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> c
    void updateLocalMatrix() -> d
    int access$100(android.support.graphics.drawable.VectorDrawableCompat$VGroup) -> e
    android.graphics.Matrix access$700(android.support.graphics.drawable.VectorDrawableCompat$VGroup) -> f
    android.graphics.Matrix access$800(android.support.graphics.drawable.VectorDrawableCompat$VGroup) -> g
com.murrayc.galaxyzoo.app.provider.HttpUtils$FileCacheRequest -> com.murrayc.galaxyzoo.app.provider.b:
    java.lang.String mCacheFileUri -> a
    java.lang.ref.WeakReference mContext -> b
    com.android.volley.Response$Listener mListener -> c
    void <init>(android.content.Context,java.lang.String,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> <init>
    void deliverResponse(java.lang.Boolean) -> a
    java.util.Map getHeaders() -> a
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> b
    void deliverResponse(java.lang.Object) -> c
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.j.a.u:
    void <init>() -> <init>
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> c
android.support.v7.app.AppCompatDelegateImplV9$1 -> android.support.v7.c.ag:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    void run() -> run
android.support.design.widget.AppBarLayout$OnOffsetChangedListener -> android.support.design.widget.cb:
    void onOffsetChanged(android.support.design.widget.AppBarLayout,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.a.s:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> c
    boolean hasAccessibilityDelegate(android.view.View) -> d
    boolean hasTransientState(android.view.View) -> e
    void postInvalidateOnAnimation(android.view.View) -> f
    void postOnAnimation(android.view.View,java.lang.Runnable) -> g
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> h
    int getImportantForAccessibility(android.view.View) -> i
    void setImportantForAccessibility(android.view.View,int) -> j
    float getAlpha(android.view.View) -> k
    void setLayerType(android.view.View,int,android.graphics.Paint) -> l
    int getLayerType(android.view.View) -> m
    int getLayoutDirection(android.view.View) -> n
    int resolveSizeAndState(int,int,int) -> o
    int getMeasuredWidthAndState(android.view.View) -> p
    int getMeasuredState(android.view.View) -> q
    int combineMeasuredStates(int,int) -> r
    void setAccessibilityLiveRegion(android.view.View,int) -> s
    int getPaddingStart(android.view.View) -> t
    int getPaddingEnd(android.view.View) -> u
    void setPaddingRelative(android.view.View,int,int,int,int) -> v
    float getTranslationX(android.view.View) -> w
    float getTranslationY(android.view.View) -> x
    android.graphics.Matrix getMatrix(android.view.View) -> y
    int getMinimumWidth(android.view.View) -> z
    int getMinimumHeight(android.view.View) -> aa
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> ab
    void setTranslationX(android.view.View,float) -> ac
    void setTranslationY(android.view.View,float) -> ad
    void setAlpha(android.view.View,float) -> ae
    void setElevation(android.view.View,float) -> af
    void setTransitionName(android.view.View,java.lang.String) -> ag
    int getWindowSystemUiVisibility(android.view.View) -> ah
    void requestApplyInsets(android.view.View) -> ai
    boolean getFitsSystemWindows(android.view.View) -> aj
    void setFitsSystemWindows(android.view.View,boolean) -> ak
    void jumpDrawablesToCurrentState(android.view.View) -> al
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> am
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> an
    void setSaveFromParentEnabled(android.view.View,boolean) -> ao
    void setActivated(android.view.View,boolean) -> ap
    boolean hasOverlappingRendering(android.view.View) -> aq
    boolean isPaddingRelative(android.view.View) -> ar
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> as
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> at
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> au
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> av
    void stopNestedScroll(android.view.View) -> aw
    boolean isLaidOut(android.view.View) -> ax
    float getZ(android.view.View) -> ay
    void offsetTopAndBottom(android.view.View,int) -> az
    void offsetLeftAndRight(android.view.View,int) -> ba
    boolean isAttachedToWindow(android.view.View) -> bb
    boolean hasOnClickListeners(android.view.View) -> bc
    void setScrollIndicators(android.view.View,int,int) -> bd
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.view.MotionEventCompat$1 -> android.support.v4.a.cf:
android.support.v4.app.FragmentContainer -> android.support.v4.b.ba:
    void <init>() -> <init>
    android.view.View onFindViewById(int) -> h
    boolean onHasView() -> i
android.support.v7.app.AppCompatDelegateImplV9$ActionMenuPresenterCallback -> android.support.v7.c.m:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> b
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplV9,android.support.v7.app.AppCompatDelegateImplV9$1) -> <init>
android.support.v4.util.MapCollections -> android.support.v4.c.k:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> a
    android.support.v4.util.MapCollections$KeySet mKeySet -> b
    android.support.v4.util.MapCollections$ValuesCollection mValues -> c
    void <init>() -> <init>
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> d
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> e
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> f
    java.util.Set getEntrySet() -> g
    java.util.Set getKeySet() -> h
    java.util.Collection getValues() -> i
    int colGetSize() -> j
    java.lang.Object colGetEntry(int,int) -> k
    int colIndexOfKey(java.lang.Object) -> l
    int colIndexOfValue(java.lang.Object) -> m
    java.util.Map colGetMap() -> n
    void colPut(java.lang.Object,java.lang.Object) -> o
    java.lang.Object colSetValue(int,java.lang.Object) -> p
    void colRemoveAt(int) -> q
    void colClear() -> r
com.squareup.picasso.Picasso -> com.squareup.a.b:
    android.os.Handler HANDLER -> a
    com.squareup.picasso.Picasso singleton -> b
    com.squareup.picasso.Picasso$Listener listener -> c
    com.squareup.picasso.Picasso$RequestTransformer requestTransformer -> d
    com.squareup.picasso.Picasso$CleanupThread cleanupThread -> e
    java.util.List requestHandlers -> f
    android.content.Context context -> g
    com.squareup.picasso.Dispatcher dispatcher -> h
    com.squareup.picasso.Cache cache -> i
    com.squareup.picasso.Stats stats -> j
    java.util.Map targetToAction -> k
    java.util.Map targetToDeferredRequestCreator -> l
    java.lang.ref.ReferenceQueue referenceQueue -> m
    android.graphics.Bitmap$Config defaultBitmapConfig -> n
    boolean indicatorsEnabled -> o
    boolean loggingEnabled -> p
    boolean shutdown -> q
    void <init>(android.content.Context,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Picasso$Listener,com.squareup.picasso.Picasso$RequestTransformer,java.util.List,com.squareup.picasso.Stats,android.graphics.Bitmap$Config,boolean,boolean) -> <init>
    void cancelRequest(android.widget.ImageView) -> a
    com.squareup.picasso.RequestCreator load(android.net.Uri) -> b
    com.squareup.picasso.RequestCreator load(java.lang.String) -> c
    java.util.List getRequestHandlers() -> d
    com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> e
    void defer(android.widget.ImageView,com.squareup.picasso.DeferredRequestCreator) -> f
    void enqueueAndSubmit(com.squareup.picasso.Action) -> g
    void submit(com.squareup.picasso.Action) -> h
    android.graphics.Bitmap quickMemoryCacheCheck(java.lang.String) -> i
    void complete(com.squareup.picasso.BitmapHunter) -> j
    void resumeAction(com.squareup.picasso.Action) -> k
    void deliverAction(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom,com.squareup.picasso.Action) -> l
    void cancelExistingRequest(java.lang.Object) -> m
    com.squareup.picasso.Picasso with(android.content.Context) -> n
    void setSingletonInstance(com.squareup.picasso.Picasso) -> o
    void access$000(com.squareup.picasso.Picasso,java.lang.Object) -> p
    void <clinit>() -> <clinit>
android.support.v7.widget.DefaultItemAnimator -> android.support.v7.widget.gi:
    java.util.ArrayList mPendingRemovals -> a
    java.util.ArrayList mPendingAdditions -> b
    java.util.ArrayList mPendingMoves -> c
    java.util.ArrayList mPendingChanges -> d
    java.util.ArrayList mAdditionsList -> e
    java.util.ArrayList mMovesList -> f
    java.util.ArrayList mChangesList -> g
    java.util.ArrayList mAddAnimations -> h
    java.util.ArrayList mMoveAnimations -> i
    java.util.ArrayList mRemoveAnimations -> j
    java.util.ArrayList mChangeAnimations -> k
    void <init>() -> <init>
    void runPendingAnimations() -> m
    boolean animateRemove(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void animateRemoveImpl(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    boolean animateAdd(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    void animateAddImpl(android.support.v7.widget.RecyclerView$ViewHolder) -> d
    boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> e
    void animateMoveImpl(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> f
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> g
    void animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> h
    void endChangeAnimation(java.util.List,android.support.v7.widget.RecyclerView$ViewHolder) -> i
    void endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> j
    boolean endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.support.v7.widget.RecyclerView$ViewHolder) -> k
    void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> n
    void resetAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> l
    boolean isRunning() -> p
    void dispatchFinishedWhenDone() -> n
    void endAnimations() -> o
    void cancelAll(java.util.List) -> o
    boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List) -> t
    void access$000(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> p
    java.util.ArrayList access$100(android.support.v7.widget.DefaultItemAnimator) -> q
    void access$200(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> r
    java.util.ArrayList access$300(android.support.v7.widget.DefaultItemAnimator) -> s
    void access$400(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder) -> t
    java.util.ArrayList access$500(android.support.v7.widget.DefaultItemAnimator) -> u
    java.util.ArrayList access$700(android.support.v7.widget.DefaultItemAnimator) -> v
    void access$800(android.support.v7.widget.DefaultItemAnimator) -> w
    java.util.ArrayList access$900(android.support.v7.widget.DefaultItemAnimator) -> x
    java.util.ArrayList access$1100(android.support.v7.widget.DefaultItemAnimator) -> y
    java.util.ArrayList access$1300(android.support.v7.widget.DefaultItemAnimator) -> z
android.support.v7.widget.ScrollingTabContainerView$1 -> android.support.v7.widget.de:
    android.view.View val$tabView -> a
    android.support.v7.widget.ScrollingTabContainerView this$0 -> b
    void <init>(android.support.v7.widget.ScrollingTabContainerView,android.view.View) -> <init>
    void run() -> run
android.support.v7.app.AlertController$AlertParams -> android.support.v7.c.l:
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> b
    int mIconId -> c
    android.graphics.drawable.Drawable mIcon -> d
    int mIconAttrId -> e
    java.lang.CharSequence mTitle -> f
    android.view.View mCustomTitleView -> g
    java.lang.CharSequence mMessage -> h
    java.lang.CharSequence mPositiveButtonText -> i
    android.content.DialogInterface$OnClickListener mPositiveButtonListener -> j
    java.lang.CharSequence mNegativeButtonText -> k
    android.content.DialogInterface$OnClickListener mNegativeButtonListener -> l
    java.lang.CharSequence mNeutralButtonText -> m
    android.content.DialogInterface$OnClickListener mNeutralButtonListener -> n
    boolean mCancelable -> o
    android.content.DialogInterface$OnCancelListener mOnCancelListener -> p
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> q
    android.content.DialogInterface$OnKeyListener mOnKeyListener -> r
    java.lang.CharSequence[] mItems -> s
    android.widget.ListAdapter mAdapter -> t
    android.content.DialogInterface$OnClickListener mOnClickListener -> u
    int mViewLayoutResId -> v
    android.view.View mView -> w
    int mViewSpacingLeft -> x
    int mViewSpacingTop -> y
    int mViewSpacingRight -> z
    int mViewSpacingBottom -> aa
    boolean mViewSpacingSpecified -> ab
    boolean[] mCheckedItems -> ac
    boolean mIsMultiChoice -> ad
    boolean mIsSingleChoice -> ae
    int mCheckedItem -> af
    android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener -> ag
    android.database.Cursor mCursor -> ah
    java.lang.String mLabelColumn -> ai
    java.lang.String mIsCheckedColumn -> aj
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> ak
    android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener -> al
    boolean mRecycleOnMeasure -> am
    void <init>(android.content.Context) -> <init>
    void apply(android.support.v7.app.AlertController) -> a
    void createListView(android.support.v7.app.AlertController) -> b
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup -> android.support.v7.widget.gr:
    int[] mData -> a
    java.util.List mFullSpanItems -> b
    void <init>() -> <init>
    int forceInvalidateAfter(int) -> a
    int invalidateAfter(int) -> b
    int getSpan(int) -> c
    void setSpan(int,android.support.v7.widget.StaggeredGridLayoutManager$Span) -> d
    int sizeForPosition(int) -> e
    void ensureSize(int) -> f
    void clear() -> g
    void offsetForRemoval(int,int) -> h
    void offsetFullSpansForRemoval(int,int) -> i
    void offsetForAddition(int,int) -> j
    void offsetFullSpansForAddition(int,int) -> k
    int invalidateFullSpansAfter(int) -> l
    void addFullSpanItem(android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> m
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> n
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> o
android.support.v7.view.ContextThemeWrapper -> android.support.v7.view.l:
    int mThemeResource -> a
    android.content.res.Resources$Theme mTheme -> b
    android.view.LayoutInflater mInflater -> c
    void <init>(android.content.Context,int) -> <init>
    void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    void setTheme(int) -> setTheme
    int getThemeResId() -> a
    android.content.res.Resources$Theme getTheme() -> getTheme
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> b
    void initializeTheme() -> c
android.support.v7.widget.AppCompatRadioButton -> android.support.v7.widget.bx:
    android.support.v7.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> a
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    void setButtonDrawable(int) -> setButtonDrawable
    int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
com.squareup.picasso.PicassoExecutorService -> com.squareup.a.ag:
    void <init>() -> <init>
    void adjustThreadCount(android.net.NetworkInfo) -> a
    void setThreadCount(int) -> b
    java.util.concurrent.Future submit(java.lang.Runnable) -> submit
android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> android.support.v4.a.ec:
    void <init>() -> <init>
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> j
android.support.v4.widget.NestedScrollView$SavedState$1 -> android.support.v4.widget.az:
    void <init>() -> <init>
    android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.squareup.picasso.Action$RequestWeakReference -> com.squareup.a.av:
    com.squareup.picasso.Action action -> a
    void <init>(com.squareup.picasso.Action,java.lang.Object,java.lang.ref.ReferenceQueue) -> <init>
android.support.graphics.drawable.VectorDrawableCompat$VClipPath -> android.support.a.a.p:
    void <init>() -> <init>
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> a
    void updateStateFromTypedArray(android.content.res.TypedArray) -> b
    boolean isClipPath() -> c
android.support.v4.view.ViewPropertyAnimatorCompatICS$1 -> android.support.v4.a.bf:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> a
    android.view.View val$view -> b
    void <init>(android.support.v4.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.murrayc.galaxyzoo.app.syncadapter.SubjectAdder -> com.murrayc.galaxyzoo.app.syncadapter.d:
    java.lang.String[] PROJECTION_CACHE_URIS_TO_FILES -> a
    java.lang.String[] PROJECTION_CHECK_IMAGES -> b
    java.lang.String[] PROJECTION_DOWNLOAD_MISSING_IMAGES -> c
    java.lang.String[] PROJECTION_SUBJECT_ID -> d
    java.lang.String[] PROJECTION_URI_PART_DATA -> e
    android.content.Context mContext -> f
    java.util.Map mImageDownloadsInProgress -> g
    com.android.volley.RequestQueue mRequestQueue -> h
    int[] -com-murrayc-galaxyzoo-app-provider-ImageTypeSwitchesValues -> i
    void <init>(android.content.Context,com.android.volley.RequestQueue) -> <init>
    boolean addSubjects(java.util.List,boolean) -> a
    boolean checkForDeletedCachedImages() -> b
    boolean downloadMissingImages() -> c
    void addRequestToQueue(com.android.volley.Request) -> d
    boolean addSubject(com.murrayc.galaxyzoo.app.provider.client.ZooniverseClient$Subject,boolean) -> e
    void cacheUriToFile(java.lang.String,java.lang.String,android.net.Uri,com.murrayc.galaxyzoo.app.provider.ImageType,boolean) -> f
    void cacheUriToFileWithNullChecks(java.lang.String,java.lang.String,android.net.Uri,com.murrayc.galaxyzoo.app.provider.ImageType,boolean) -> g
    void cacheUrisToFiles(android.net.Uri,boolean) -> h
    boolean cachedImageExists(java.lang.String) -> i
    void downloadMissingImage(android.net.Uri,java.lang.String,java.lang.String,com.murrayc.galaxyzoo.app.provider.ImageType) -> j
    android.content.Context getContext() -> k
    void markImageAsDownloaded(android.net.Uri,com.murrayc.galaxyzoo.app.provider.ImageType,java.lang.String) -> l
    void markImageDownloadAsNotInProgress(java.lang.String) -> m
    void onImageDownloadDone(boolean,java.lang.String,android.net.Uri,com.murrayc.galaxyzoo.app.provider.ImageType) -> n
    boolean subjectIsInDatabase(java.lang.String) -> o
    void throwIfNoNetwork() -> p
    void <clinit>() -> <clinit>
    void -wrap0(com.murrayc.galaxyzoo.app.syncadapter.SubjectAdder,boolean,java.lang.String,android.net.Uri,com.murrayc.galaxyzoo.app.provider.ImageType) -> q
    int[] -getcom-murrayc-galaxyzoo-app-provider-ImageTypeSwitchesValues() -> r
com.android.volley.TimeoutError -> com.android.a.aa:
    void <init>() -> <init>
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.a.cj:
    boolean isCtrlPressed(android.view.KeyEvent) -> a
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.b.au:
    android.graphics.Rect mEpicenter -> a
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView val$epicenterView -> b
    void <init>(android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> <init>
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
com.murrayc.galaxyzoo.app.ListFragment$Callbacks -> com.murrayc.galaxyzoo.app.i:
    void navigateToNextAvailable() -> a
    void onItemSelected(java.lang.String,boolean,android.view.View) -> b
android.support.v4.view.LayoutInflaterCompatBase -> android.support.v4.a.ba:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
    android.support.v4.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater) -> b
android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState -> android.support.v4.j.a.q:
    int mChangingConfigurations -> a
    android.graphics.drawable.Drawable$ConstantState mDrawableState -> b
    android.content.res.ColorStateList mTint -> c
    android.graphics.PorterDuff$Mode mTintMode -> d
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    int getChangingConfigurations() -> getChangingConfigurations
    boolean canConstantState() -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.a.de:
    void <init>() -> <init>
android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager$1 -> android.support.v7.c.ak:
    android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager this$1 -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.view.ViewPropertyAnimatorCompatICS -> android.support.v4.a.ap:
    void <init>() -> <init>
    void setDuration(android.view.View,long) -> a
    void alpha(android.view.View,float) -> b
    void translationX(android.view.View,float) -> c
    void translationY(android.view.View,float) -> d
    long getDuration(android.view.View) -> e
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> f
    void setStartDelay(android.view.View,long) -> g
    void cancel(android.view.View) -> h
    void start(android.view.View) -> i
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> j
com.murrayc.galaxyzoo.app.BaseActivity -> com.murrayc.galaxyzoo.app.z:
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void showUpButton() -> e
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
android.support.v7.app.AppCompatDelegateImplV9$5 -> android.support.v7.c.aq:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    void run() -> run
android.support.v4.content.res.ConfigurationHelperGingerbread -> android.support.v4.d.a.a:
    void <init>() -> <init>
    int getScreenHeightDp(android.content.res.Resources) -> a
    int getScreenWidthDp(android.content.res.Resources) -> b
    int getSmallestScreenWidthDp(android.content.res.Resources) -> c
com.murrayc.galaxyzoo.app.LoginActivity$3 -> com.murrayc.galaxyzoo.app.bb:
    com.murrayc.galaxyzoo.app.LoginActivity this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.LoginActivity,android.content.Context) -> <init>
    void onPostExecute(com.murrayc.galaxyzoo.app.LoginUtils$LoginDetails) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
com.squareup.picasso.BitmapHunter$3 -> com.squareup.a.ae:
    com.squareup.picasso.Transformation val$transformation -> a
    java.lang.RuntimeException val$e -> b
    void <init>(com.squareup.picasso.Transformation,java.lang.RuntimeException) -> <init>
    void run() -> run
android.support.design.widget.FloatingActionButtonGingerbread$ResetElevationAnimation -> android.support.design.widget.bb:
    android.support.design.widget.FloatingActionButtonGingerbread this$0 -> a
    void <init>(android.support.design.widget.FloatingActionButtonGingerbread) -> <init>
    float getTargetShadowSize() -> a
    void <init>(android.support.design.widget.FloatingActionButtonGingerbread,android.support.design.widget.FloatingActionButtonGingerbread$1) -> <init>
com.murrayc.galaxyzoo.app.DecisionTree -> com.murrayc.galaxyzoo.app.ag:
    java.lang.String firstQuestionId -> a
    com.murrayc.galaxyzoo.app.DecisionTree$DiscussQuestion mDiscussQuestion -> b
    java.util.Map questionsMap -> c
    void <init>(java.io.InputStream,java.io.InputStream) -> <init>
    void setDiscussQuestion(com.murrayc.galaxyzoo.app.DecisionTree$DiscussQuestion) -> a
    java.util.List getAllQuestions() -> b
    java.util.List getChildrenByTagName(org.w3c.dom.Element,java.lang.String) -> c
    java.lang.String getDiscussQuestionNoAnswerId() -> d
    java.lang.String getDiscussQuestionYesAnswerId() -> e
    org.w3c.dom.Node getFirstChildByTagName(org.w3c.dom.Element,java.lang.String) -> f
    com.murrayc.galaxyzoo.app.DecisionTree$Question getFirstQuestion() -> g
    com.murrayc.galaxyzoo.app.DecisionTree$Question getNextQuestionForAnswer(java.lang.String,java.lang.String) -> h
    com.murrayc.galaxyzoo.app.DecisionTree$Question getQuestion(java.lang.String) -> i
    com.murrayc.galaxyzoo.app.DecisionTree$Question getQuestionOrFirst(java.lang.String) -> j
    java.lang.String getTextOfChildNode(org.w3c.dom.Element,java.lang.String) -> k
    boolean isDiscussQuestion(java.lang.String) -> l
    com.murrayc.galaxyzoo.app.DecisionTree$Answer loadAnswer(org.w3c.dom.Element) -> m
    com.murrayc.galaxyzoo.app.DecisionTree$Checkbox loadCheckbox(org.w3c.dom.Element) -> n
    com.murrayc.galaxyzoo.app.DecisionTree$Question loadQuestion(org.w3c.dom.Element) -> o
    void loadTranslation(java.io.InputStream) -> p
    void readJsonAnswers(android.util.JsonReader,com.murrayc.galaxyzoo.app.DecisionTree$Question) -> q
    void readJsonCheckboxes(android.util.JsonReader,com.murrayc.galaxyzoo.app.DecisionTree$Question) -> r
    void readJsonQuestion(android.util.JsonReader,com.murrayc.galaxyzoo.app.DecisionTree$Question) -> s
    void readJsonQuestions(android.util.JsonReader) -> t
android.support.v4.graphics.drawable.TintAwareDrawable -> android.support.v4.j.a.m:
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
com.squareup.picasso.Action -> com.squareup.a.p:
    com.squareup.picasso.Picasso picasso -> a
    com.squareup.picasso.Request request -> b
    java.lang.ref.WeakReference target -> c
    boolean noFade -> d
    int memoryPolicy -> e
    int networkPolicy -> f
    int errorResId -> g
    android.graphics.drawable.Drawable errorDrawable -> h
    java.lang.String key -> i
    java.lang.Object tag -> j
    boolean willReplay -> k
    boolean cancelled -> l
    void <init>(com.squareup.picasso.Picasso,java.lang.Object,com.squareup.picasso.Request,int,int,int,android.graphics.drawable.Drawable,java.lang.String,java.lang.Object,boolean) -> <init>
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> a
    void error() -> b
    void cancel() -> c
    com.squareup.picasso.Request getRequest() -> d
    java.lang.Object getTarget() -> e
    java.lang.String getKey() -> f
    boolean isCancelled() -> g
    boolean willReplay() -> h
    int getMemoryPolicy() -> i
    int getNetworkPolicy() -> j
    com.squareup.picasso.Picasso getPicasso() -> k
    com.squareup.picasso.Picasso$Priority getPriority() -> l
    java.lang.Object getTag() -> m
android.support.v4.widget.PopupWindowCompat$PopupWindowImpl -> android.support.v4.widget.ah:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
    void setWindowLayoutType(android.widget.PopupWindow,int) -> b
android.support.v7.widget.RtlSpacingHelper -> android.support.v7.widget.bb:
    int mLeft -> a
    int mRight -> b
    int mStart -> c
    int mEnd -> d
    int mExplicitLeft -> e
    int mExplicitRight -> f
    boolean mIsRtl -> g
    boolean mIsRelative -> h
    void <init>() -> <init>
    int getLeft() -> a
    int getRight() -> b
    int getStart() -> c
    int getEnd() -> d
    void setRelative(int,int) -> e
    void setAbsolute(int,int) -> f
    void setDirection(boolean) -> g
android.support.v4.content.res.ConfigurationHelper$JellybeanMr1Impl -> android.support.v4.d.a.g:
    void <init>() -> <init>
    void <init>(android.support.v4.content.res.ConfigurationHelper$1) -> <init>
android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatApi20Impl -> android.support.v4.a.cs:
    void <init>() -> <init>
    int getSystemWindowInsetBottom(java.lang.Object) -> a
    int getSystemWindowInsetLeft(java.lang.Object) -> b
    int getSystemWindowInsetRight(java.lang.Object) -> c
    int getSystemWindowInsetTop(java.lang.Object) -> d
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(java.lang.Object,int,int,int,int) -> e
    void <init>(android.support.v4.view.WindowInsetsCompat$1) -> <init>
android.support.graphics.drawable.AnimatedVectorDrawableCompat -> android.support.a.a.b:
    android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState mAnimatedVectorState -> a
    android.content.Context mContext -> b
    android.animation.ArgbEvaluator mArgbEvaluator -> c
    android.graphics.drawable.Drawable$Callback mCallback -> d
    void <init>() -> <init>
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable mutate() -> mutate
    android.support.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    int getChangingConfigurations() -> getChangingConfigurations
    void draw(android.graphics.Canvas) -> draw
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onStateChange(int[]) -> onStateChange
    boolean onLevelChange(int) -> onLevelChange
    int getAlpha() -> getAlpha
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean setVisible(boolean,boolean) -> setVisible
    boolean isStateful() -> isStateful
    int getOpacity() -> getOpacity
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> b
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    boolean canApplyTheme() -> canApplyTheme
    void setupColorAnimator(android.animation.Animator) -> c
    void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> d
    boolean isRunning() -> isRunning
    boolean isStarted() -> e
    void start() -> start
    void stop() -> stop
    boolean setState(int[]) -> setState
    void setChangingConfigurations(int) -> setChangingConfigurations
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int[] getState() -> getState
    boolean getPadding(android.graphics.Rect) -> getPadding
    int getMinimumHeight() -> getMinimumHeight
    int getMinimumWidth() -> getMinimumWidth
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    void clearColorFilter() -> clearColorFilter
    int getLayoutDirection() -> getLayoutDirection
    boolean isAutoMirrored() -> isAutoMirrored
    void setAutoMirrored(boolean) -> setAutoMirrored
    void jumpToCurrentState() -> jumpToCurrentState
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    void setHotspot(float,float) -> setHotspot
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void <init>(android.support.graphics.drawable.AnimatedVectorDrawableCompat$1) -> <init>
    android.graphics.drawable.Drawable$Callback access$100(android.support.graphics.drawable.AnimatedVectorDrawableCompat) -> f
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.a.ee:
    void <init>() -> <init>
    boolean isCtrlPressed(android.view.KeyEvent) -> a
android.support.v7.widget.SearchView$OnCloseListener -> android.support.v7.widget.dq:
    boolean onClose() -> a
com.android.volley.Network -> com.android.a.o:
    com.android.volley.NetworkResponse performRequest(com.android.volley.Request) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.a.a.ai:
    void <init>() -> <init>
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    java.lang.CharSequence getClassName(java.lang.Object) -> e
    java.lang.CharSequence getContentDescription(java.lang.Object) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> g
    java.lang.CharSequence getText(java.lang.Object) -> h
    boolean isCheckable(java.lang.Object) -> i
    boolean isChecked(java.lang.Object) -> j
    boolean isClickable(java.lang.Object) -> k
    boolean isEnabled(java.lang.Object) -> l
    boolean isFocusable(java.lang.Object) -> m
    boolean isFocused(java.lang.Object) -> n
    boolean isLongClickable(java.lang.Object) -> o
    boolean isPassword(java.lang.Object) -> p
    boolean isScrollable(java.lang.Object) -> q
    boolean isSelected(java.lang.Object) -> r
    void setCheckable(java.lang.Object,boolean) -> s
    void setChecked(java.lang.Object,boolean) -> t
    void setClassName(java.lang.Object,java.lang.CharSequence) -> u
    void setScrollable(java.lang.Object,boolean) -> v
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> a
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> d
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> b
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> c
android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback -> android.support.v7.widget.cy:
    android.support.v7.widget.ActionMenuView this$0 -> a
    void <init>(android.support.v7.widget.ActionMenuView) -> <init>
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> b
    void <init>(android.support.v7.widget.ActionMenuView,android.support.v7.widget.ActionMenuView$1) -> <init>
android.support.v7.widget.RecyclerView$OnScrollListener -> android.support.v7.widget.n:
    void <init>() -> <init>
    void onScrollStateChanged(android.support.v7.widget.RecyclerView,int) -> a
    void onScrolled(android.support.v7.widget.RecyclerView,int,int) -> b
android.support.design.widget.AnimationUtils -> android.support.design.widget.cy:
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> a
    android.view.animation.Interpolator FAST_OUT_SLOW_IN_INTERPOLATOR -> b
    android.view.animation.Interpolator FAST_OUT_LINEAR_IN_INTERPOLATOR -> c
    android.view.animation.Interpolator LINEAR_OUT_SLOW_IN_INTERPOLATOR -> d
    android.view.animation.Interpolator DECELERATE_INTERPOLATOR -> e
    void <init>() -> <init>
    int lerp(int,int,float) -> a
    void <clinit>() -> <clinit>
android.support.v7.widget.ToolbarWidgetWrapper -> android.support.v7.widget.bd:
    android.support.v7.widget.Toolbar mToolbar -> a
    int mDisplayOpts -> b
    android.view.View mTabView -> c
    android.view.View mCustomView -> d
    android.graphics.drawable.Drawable mIcon -> e
    android.graphics.drawable.Drawable mLogo -> f
    android.graphics.drawable.Drawable mNavIcon -> g
    boolean mTitleSet -> h
    java.lang.CharSequence mTitle -> i
    java.lang.CharSequence mSubtitle -> j
    java.lang.CharSequence mHomeDescription -> k
    android.view.Window$Callback mWindowCallback -> l
    boolean mMenuPrepared -> m
    android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter -> n
    int mNavigationMode -> o
    int mDefaultNavigationContentDescription -> p
    android.graphics.drawable.Drawable mDefaultNavigationIcon -> q
    void <init>(android.support.v7.widget.Toolbar,boolean) -> <init>
    void <init>(android.support.v7.widget.Toolbar,boolean,int,int) -> <init>
    void setDefaultNavigationContentDescription(int) -> a
    int detectDisplayOptions() -> b
    android.view.ViewGroup getViewGroup() -> c
    android.content.Context getContext() -> d
    boolean hasExpandedActionView() -> e
    void collapseActionView() -> f
    void setWindowCallback(android.view.Window$Callback) -> g
    void setWindowTitle(java.lang.CharSequence) -> h
    java.lang.CharSequence getTitle() -> i
    void setTitle(java.lang.CharSequence) -> j
    void setTitleInt(java.lang.CharSequence) -> k
    void setSubtitle(java.lang.CharSequence) -> l
    void initProgress() -> m
    void initIndeterminateProgress() -> n
    void setIcon(int) -> o
    void setIcon(android.graphics.drawable.Drawable) -> p
    void setLogo(int) -> q
    void setLogo(android.graphics.drawable.Drawable) -> r
    void updateToolbarLogo() -> s
    boolean canShowOverflowMenu() -> t
    boolean isOverflowMenuShowing() -> u
    boolean isOverflowMenuShowPending() -> v
    boolean showOverflowMenu() -> w
    boolean hideOverflowMenu() -> x
    void setMenuPrepared() -> y
    void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> z
    void dismissPopupMenus() -> aa
    int getDisplayOptions() -> ab
    void setDisplayOptions(int) -> ac
    void setEmbeddedTabView(android.support.v7.widget.ScrollingTabContainerView) -> ad
    void setCollapsible(boolean) -> ae
    void setHomeButtonEnabled(boolean) -> af
    int getNavigationMode() -> ag
    void setCustomView(android.view.View) -> ah
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> ai
    void setNavigationIcon(android.graphics.drawable.Drawable) -> aj
    void updateNavigationIcon() -> ak
    void setNavigationContentDescription(java.lang.CharSequence) -> al
    void setNavigationContentDescription(int) -> am
    void updateHomeAccessibility() -> an
    void setVisibility(int) -> ao
    int getVisibility() -> ap
    void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback) -> aq
    android.view.Menu getMenu() -> ar
    android.support.v7.widget.Toolbar access$000(android.support.v7.widget.ToolbarWidgetWrapper) -> as
    java.lang.CharSequence access$100(android.support.v7.widget.ToolbarWidgetWrapper) -> at
    android.view.Window$Callback access$200(android.support.v7.widget.ToolbarWidgetWrapper) -> au
    boolean access$300(android.support.v7.widget.ToolbarWidgetWrapper) -> av
android.support.annotation.FloatRange -> android.support.annotation.g:
    double from() -> a
    double to() -> b
android.support.v4.view.ViewCompatJB -> android.support.v4.a.bn:
    void <init>() -> <init>
    boolean hasTransientState(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> c
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> d
    int getImportantForAccessibility(android.view.View) -> e
    void setImportantForAccessibility(android.view.View,int) -> f
    int getMinimumWidth(android.view.View) -> g
    int getMinimumHeight(android.view.View) -> h
    void requestApplyInsets(android.view.View) -> i
    boolean getFitsSystemWindows(android.view.View) -> j
    boolean hasOverlappingRendering(android.view.View) -> k
android.support.v7.widget.ScrollbarHelper -> android.support.v7.widget.gk:
    void <init>() -> <init>
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean,boolean) -> a
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> b
    int computeScrollRange(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> c
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.a.ck:
    void <init>() -> <init>
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> b
android.support.v7.widget.AppCompatProgressBarHelper -> android.support.v7.widget.da:
    int[] TINT_ATTRS -> a
    android.widget.ProgressBar mView -> b
    android.graphics.Bitmap mSampleTile -> c
    void <init>(android.widget.ProgressBar) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> a
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> b
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> c
    android.graphics.drawable.shapes.Shape getDrawableShape() -> d
    android.graphics.Bitmap getSampleTime() -> e
    void <clinit>() -> <clinit>
android.support.design.widget.CoordinatorLayout$SavedState$1 -> android.support.design.widget.cf:
    void <init>() -> <init>
    android.support.design.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    android.support.design.widget.CoordinatorLayout$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> b
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
com.android.volley.toolbox.DiskBasedCache$CountingInputStream -> com.android.a.a.g:
    int bytesRead -> a
    void <init>(java.io.InputStream) -> <init>
    int read() -> read
    int read(byte[],int,int) -> read
    void <init>(java.io.InputStream,com.android.volley.toolbox.DiskBasedCache$1) -> <init>
    int access$100(com.android.volley.toolbox.DiskBasedCache$CountingInputStream) -> a
com.squareup.picasso.Cache -> com.squareup.a.j:
    com.squareup.picasso.Cache NONE -> a
    android.graphics.Bitmap get(java.lang.String) -> a
    void set(java.lang.String,android.graphics.Bitmap) -> b
    int size() -> c
    int maxSize() -> d
    void <clinit>() -> <clinit>
android.support.v7.widget.ViewStubCompat$OnInflateListener -> android.support.v7.widget.en:
    void onInflate(android.support.v7.widget.ViewStubCompat,android.view.View) -> a
android.support.v4.app.NavUtilsJB -> android.support.v4.b.an:
    void <init>() -> <init>
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> b
    void navigateUpTo(android.app.Activity,android.content.Intent) -> c
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> d
com.squareup.picasso.OkHttpDownloader -> com.squareup.a.bm:
    OkHttpClient client -> a
    OkHttpClient defaultOkHttpClient() -> a
    void <init>(android.content.Context) -> <init>
    void <init>(java.io.File) -> <init>
    void <init>(java.io.File,long) -> <init>
    void <init>(OkHttpClient) -> <init>
    com.squareup.picasso.Downloader$Response load(android.net.Uri,int) -> a
android.support.v7.widget.SearchView -> android.support.v7.widget.ef:
    android.support.v7.widget.SearchView$SearchAutoComplete mSearchSrcTextView -> a
    android.view.View mSearchEditFrame -> b
    android.view.View mSubmitArea -> c
    android.widget.ImageView mSearchButton -> d
    android.widget.ImageView mGoButton -> e
    android.widget.ImageView mCloseButton -> f
    android.widget.ImageView mVoiceButton -> g
    android.support.v7.widget.SearchView$UpdatableTouchDelegate mTouchDelegate -> h
    android.graphics.Rect mSearchSrcTextViewBounds -> i
    android.graphics.Rect mSearchSrtTextViewBoundsExpanded -> j
    int[] mTemp -> k
    int[] mTemp2 -> l
    android.widget.ImageView mCollapsedIcon -> m
    android.graphics.drawable.Drawable mSearchHintIcon -> n
    int mSuggestionRowLayout -> o
    int mSuggestionCommitIconResId -> p
    android.content.Intent mVoiceWebSearchIntent -> q
    android.content.Intent mVoiceAppSearchIntent -> r
    java.lang.CharSequence mDefaultQueryHint -> s
    android.support.v7.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> t
    android.support.v7.widget.SearchView$OnCloseListener mOnCloseListener -> u
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> v
    android.support.v7.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> w
    android.view.View$OnClickListener mOnSearchClickListener -> x
    boolean mIconifiedByDefault -> y
    boolean mIconified -> z
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> aa
    boolean mSubmitButtonEnabled -> ab
    java.lang.CharSequence mQueryHint -> ac
    boolean mQueryRefinement -> ad
    boolean mClearingFocus -> ae
    int mMaxWidth -> af
    boolean mVoiceButtonEnabled -> ag
    java.lang.CharSequence mUserQuery -> ah
    boolean mExpandedInActionView -> ai
    int mCollapsedImeOptions -> aj
    android.app.SearchableInfo mSearchable -> ak
    android.os.Bundle mAppSearchData -> al
    android.support.v7.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> am
    java.lang.Runnable mShowImeRunnable -> an
    java.lang.Runnable mUpdateDrawableStateRunnable -> ao
    java.lang.Runnable mReleaseCursorRunnable -> ap
    java.util.WeakHashMap mOutsideDrawablesCache -> aq
    int getSuggestionRowLayout() -> getSuggestionRowLayout
    int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(android.support.v7.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(android.support.v7.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(android.support.v7.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQuery(java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> a
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> b
    int getPreferredWidth() -> getPreferredWidth
    int getPreferredHeight() -> getPreferredHeight
    void updateViewsVisibility(boolean) -> c
    boolean hasVoiceSearch() -> d
    boolean isSubmitAreaEnabled() -> e
    void updateSubmitButton(boolean) -> f
    void updateSubmitArea() -> g
    void updateCloseButton() -> h
    void postUpdateFocusedState() -> i
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> j
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> k
    void updateQueryHint() -> l
    void updateSearchAutoComplete() -> m
    void updateVoiceButton(boolean) -> n
    void onSubmitQuery() -> o
    void dismissSuggestions() -> p
    void onCloseClicked() -> q
    void onSearchClicked() -> r
    void onTextFocusChanged() -> s
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> t
    void onActionViewExpanded() -> u
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setQuery(java.lang.CharSequence) -> setQuery
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> v
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> w
    void forceSuggestionQuery() -> x
    boolean isLandscapeMode(android.content.Context) -> y
    void access$2100(android.support.v7.widget.SearchView,boolean) -> z
    void <clinit>() -> <clinit>
com.murrayc.galaxyzoo.app.LoginActivity$1 -> com.murrayc.galaxyzoo.app.az:
    com.murrayc.galaxyzoo.app.LoginActivity this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.LoginActivity) -> <init>
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
android.support.v7.view.menu.MenuPopup -> android.support.v7.view.menu.ab:
    android.graphics.Rect mEpicenterBounds -> a
    void <init>() -> <init>
    void setForceShowIcon(boolean) -> a
    void addMenu(android.support.v7.view.menu.MenuBuilder) -> d
    void setGravity(int) -> b
    void setAnchorView(android.view.View) -> e
    void setHorizontalOffset(int) -> g
    void setVerticalOffset(int) -> h
    void setEpicenterBounds(android.graphics.Rect) -> a
    android.graphics.Rect getEpicenterBounds() -> b
    void setShowTitle(boolean) -> i
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> f
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> a
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> g
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> h
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> c
    android.support.v7.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> d
    boolean shouldPreserveIconSpacing(android.support.v7.view.menu.MenuBuilder) -> e
    boolean closeMenuOnSubMenuOpened() -> g
android.support.v7.widget.LinearLayoutManager$SavedState$1 -> android.support.v7.widget.ha:
    void <init>() -> <init>
    android.support.v7.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.murrayc.galaxyzoo.app.ZooAccountAuthenticatorActivity -> com.murrayc.galaxyzoo.app.q:
    android.accounts.AccountAuthenticatorResponse mAccountAuthenticatorResponse -> a
    android.os.Bundle mResultBundle -> b
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void finish() -> finish
    void setAccountAuthenticatorResult(android.os.Bundle) -> a
android.support.v7.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> android.support.v7.view.menu.aj:
    android.support.v7.view.menu.ActionMenuItemView this$0 -> a
    void <init>(android.support.v7.view.menu.ActionMenuItemView) -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> a
    boolean onForwardingStarted() -> b
com.squareup.picasso.Picasso$CleanupThread -> com.squareup.a.e:
    java.lang.ref.ReferenceQueue referenceQueue -> a
    android.os.Handler handler -> b
    void <init>(java.lang.ref.ReferenceQueue,android.os.Handler) -> <init>
    void run() -> run
android.support.v7.app.AppCompatDelegateImplV23$AppCompatWindowCallbackV23 -> android.support.v7.c.ao:
    android.support.v7.app.AppCompatDelegateImplV23 this$0 -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplV23,android.view.Window$Callback) -> <init>
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
android.support.v7.appcompat.R$attr -> android.support.v7.a.a:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarPopupTheme -> actionBarPopupTheme
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarTheme -> actionBarTheme
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionOverflowMenuStyle -> actionOverflowMenuStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activityChooserViewStyle -> activityChooserViewStyle
    int alertDialogButtonGroupStyle -> alertDialogButtonGroupStyle
    int alertDialogCenterButtons -> alertDialogCenterButtons
    int alertDialogStyle -> alertDialogStyle
    int alertDialogTheme -> alertDialogTheme
    int allowStacking -> allowStacking
    int alpha -> alpha
    int arrowHeadLength -> arrowHeadLength
    int arrowShaftLength -> arrowShaftLength
    int autoCompleteTextViewStyle -> autoCompleteTextViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int backgroundTint -> backgroundTint
    int backgroundTintMode -> backgroundTintMode
    int barLength -> barLength
    int borderlessButtonStyle -> borderlessButtonStyle
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarNegativeButtonStyle -> buttonBarNegativeButtonStyle
    int buttonBarNeutralButtonStyle -> buttonBarNeutralButtonStyle
    int buttonBarPositiveButtonStyle -> buttonBarPositiveButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int buttonGravity -> buttonGravity
    int buttonPanelSideLayout -> buttonPanelSideLayout
    int buttonStyle -> buttonStyle
    int buttonStyleSmall -> buttonStyleSmall
    int buttonTint -> buttonTint
    int buttonTintMode -> buttonTintMode
    int checkboxStyle -> checkboxStyle
    int checkedTextViewStyle -> checkedTextViewStyle
    int closeIcon -> closeIcon
    int closeItemLayout -> closeItemLayout
    int collapseContentDescription -> collapseContentDescription
    int collapseIcon -> collapseIcon
    int color -> color
    int colorAccent -> colorAccent
    int colorBackgroundFloating -> colorBackgroundFloating
    int colorButtonNormal -> colorButtonNormal
    int colorControlActivated -> colorControlActivated
    int colorControlHighlight -> colorControlHighlight
    int colorControlNormal -> colorControlNormal
    int colorPrimary -> colorPrimary
    int colorPrimaryDark -> colorPrimaryDark
    int colorSwitchThumbNormal -> colorSwitchThumbNormal
    int commitIcon -> commitIcon
    int contentInsetEnd -> contentInsetEnd
    int contentInsetEndWithActions -> contentInsetEndWithActions
    int contentInsetLeft -> contentInsetLeft
    int contentInsetRight -> contentInsetRight
    int contentInsetStart -> contentInsetStart
    int contentInsetStartWithNavigation -> contentInsetStartWithNavigation
    int controlBackground -> controlBackground
    int customNavigationLayout -> customNavigationLayout
    int defaultQueryHint -> defaultQueryHint
    int dialogPreferredPadding -> dialogPreferredPadding
    int dialogTheme -> dialogTheme
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int drawableSize -> drawableSize
    int drawerArrowStyle -> drawerArrowStyle
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int editTextBackground -> editTextBackground
    int editTextColor -> editTextColor
    int editTextStyle -> editTextStyle
    int elevation -> elevation
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int gapBetweenBars -> gapBetweenBars
    int goIcon -> goIcon
    int height -> height
    int hideOnContentScroll -> hideOnContentScroll
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int imageButtonStyle -> imageButtonStyle
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int isLightTheme -> isLightTheme
    int itemPadding -> itemPadding
    int layout -> layout
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listDividerAlertDialog -> listDividerAlertDialog
    int listItemLayout -> listItemLayout
    int listLayout -> listLayout
    int listMenuViewStyle -> listMenuViewStyle
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int logoDescription -> logoDescription
    int maxButtonHeight -> maxButtonHeight
    int measureWithLargestChild -> measureWithLargestChild
    int multiChoiceItemLayout -> multiChoiceItemLayout
    int navigationContentDescription -> navigationContentDescription
    int navigationIcon -> navigationIcon
    int navigationMode -> navigationMode
    int overlapAnchor -> overlapAnchor
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int panelBackground -> panelBackground
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupTheme -> popupTheme
    int popupWindowStyle -> popupWindowStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryBackground -> queryBackground
    int queryHint -> queryHint
    int radioButtonStyle -> radioButtonStyle
    int ratingBarStyle -> ratingBarStyle
    int ratingBarStyleIndicator -> ratingBarStyleIndicator
    int ratingBarStyleSmall -> ratingBarStyleSmall
    int searchHintIcon -> searchHintIcon
    int searchIcon -> searchIcon
    int searchViewStyle -> searchViewStyle
    int seekBarStyle -> seekBarStyle
    int selectableItemBackground -> selectableItemBackground
    int selectableItemBackgroundBorderless -> selectableItemBackgroundBorderless
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int showText -> showText
    int singleChoiceItemLayout -> singleChoiceItemLayout
    int spinBars -> spinBars
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerStyle -> spinnerStyle
    int splitTrack -> splitTrack
    int srcCompat -> srcCompat
    int state_above_anchor -> state_above_anchor
    int subMenuArrow -> subMenuArrow
    int submitBackground -> submitBackground
    int subtitle -> subtitle
    int subtitleTextAppearance -> subtitleTextAppearance
    int subtitleTextColor -> subtitleTextColor
    int subtitleTextStyle -> subtitleTextStyle
    int suggestionRowLayout -> suggestionRowLayout
    int switchMinWidth -> switchMinWidth
    int switchPadding -> switchPadding
    int switchStyle -> switchStyle
    int switchTextAppearance -> switchTextAppearance
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearancePopupMenuHeader -> textAppearancePopupMenuHeader
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorAlertDialogListItem -> textColorAlertDialogListItem
    int textColorSearchUrl -> textColorSearchUrl
    int theme -> theme
    int thickness -> thickness
    int thumbTextPadding -> thumbTextPadding
    int thumbTint -> thumbTint
    int thumbTintMode -> thumbTintMode
    int tickMark -> tickMark
    int tickMarkTint -> tickMarkTint
    int tickMarkTintMode -> tickMarkTintMode
    int title -> title
    int titleMargin -> titleMargin
    int titleMarginBottom -> titleMarginBottom
    int titleMarginEnd -> titleMarginEnd
    int titleMarginStart -> titleMarginStart
    int titleMarginTop -> titleMarginTop
    int titleMargins -> titleMargins
    int titleTextAppearance -> titleTextAppearance
    int titleTextColor -> titleTextColor
    int titleTextStyle -> titleTextStyle
    int toolbarNavigationButtonStyle -> toolbarNavigationButtonStyle
    int toolbarStyle -> toolbarStyle
    int track -> track
    int trackTint -> trackTint
    int trackTintMode -> trackTintMode
    int voiceIcon -> voiceIcon
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    void <init>() -> <init>
android.support.v4.app.ActivityCompat -> android.support.v4.b.w:
    void <init>() -> <init>
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> a
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> b
    void finishAffinity(android.app.Activity) -> c
    void requestPermissions(android.app.Activity,java.lang.String[],int) -> d
android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplJB -> android.support.v4.d.v:
    void <init>() -> <init>
    android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal) -> a
com.murrayc.galaxyzoo.app.ListCursorAdapter$CursorObserver -> com.murrayc.galaxyzoo.app.b:
    com.murrayc.galaxyzoo.app.ListCursorAdapter this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.ListCursorAdapter) -> <init>
    void onChanged() -> onChanged
    void <init>(com.murrayc.galaxyzoo.app.ListCursorAdapter,com.murrayc.galaxyzoo.app.ListCursorAdapter$CursorObserver) -> <init>
android.support.graphics.drawable.VectorDrawableCompat$1 -> android.support.a.a.o:
android.support.v7.widget.ListViewCompat$GateKeeperDrawable -> android.support.v7.widget.et:
    boolean mEnabled -> a
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void setEnabled(boolean) -> a
    boolean setState(int[]) -> setState
    void draw(android.graphics.Canvas) -> draw
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    boolean setVisible(boolean,boolean) -> setVisible
com.android.volley.RequestQueue -> com.android.a.e:
    java.util.concurrent.atomic.AtomicInteger mSequenceGenerator -> a
    java.util.Map mWaitingRequests -> b
    java.util.Set mCurrentRequests -> c
    java.util.concurrent.PriorityBlockingQueue mCacheQueue -> d
    java.util.concurrent.PriorityBlockingQueue mNetworkQueue -> e
    com.android.volley.Cache mCache -> f
    com.android.volley.Network mNetwork -> g
    com.android.volley.ResponseDelivery mDelivery -> h
    com.android.volley.NetworkDispatcher[] mDispatchers -> i
    com.android.volley.CacheDispatcher mCacheDispatcher -> j
    java.util.List mFinishedListeners -> k
    void <init>(com.android.volley.Cache,com.android.volley.Network,int,com.android.volley.ResponseDelivery) -> <init>
    void <init>(com.android.volley.Cache,com.android.volley.Network,int) -> <init>
    void <init>(com.android.volley.Cache,com.android.volley.Network) -> <init>
    void start() -> a
    void stop() -> b
    int getSequenceNumber() -> c
    com.android.volley.Request add(com.android.volley.Request) -> d
    void finish(com.android.volley.Request) -> e
com.squareup.picasso.ContactsPhotoRequestHandler$ContactPhotoStreamIcs -> com.squareup.a.bo:
    void <init>() -> <init>
    java.io.InputStream get(android.content.ContentResolver,android.net.Uri) -> a
android.support.v7.widget.SearchView$SavedState$1 -> android.support.v7.widget.ch:
    void <init>() -> <init>
    android.support.v7.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    android.support.v7.widget.SearchView$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> b
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.graphics.ColorUtils -> android.support.v4.j.a:
    java.lang.ThreadLocal TEMP_ARRAY -> a
    void <init>() -> <init>
    int compositeColors(int,int) -> a
    int compositeAlpha(int,int) -> b
    int compositeComponent(int,int,int,int,int) -> c
    int setAlphaComponent(int,int) -> d
    void <clinit>() -> <clinit>
com.squareup.picasso.Request$1 -> com.squareup.a.ac:
com.android.volley.RequestQueue$RequestFinishedListener -> com.android.a.m:
    void onRequestFinished(com.android.volley.Request) -> a
com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver -> com.squareup.a.bl:
    com.squareup.picasso.Dispatcher dispatcher -> a
    void <init>(com.squareup.picasso.Dispatcher) -> <init>
    void register() -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.at:
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> a
    android.view.animation.Interpolator mEdgeInterpolator -> b
    android.view.View mTarget -> c
    java.lang.Runnable mRunnable -> d
    float[] mRelativeEdges -> e
    float[] mMaximumEdges -> f
    int mEdgeType -> g
    int mActivationDelay -> h
    float[] mRelativeVelocity -> i
    float[] mMinimumVelocity -> j
    float[] mMaximumVelocity -> k
    boolean mAlreadyDelayed -> l
    boolean mNeedsReset -> m
    boolean mNeedsCancel -> n
    boolean mAnimating -> o
    boolean mEnabled -> p
    boolean mExclusive -> q
    int DEFAULT_ACTIVATION_DELAY -> r
    void <init>(android.view.View) -> <init>
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> a
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> b
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> c
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> d
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> e
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> f
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> g
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> h
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> i
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> j
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> k
    void startAnimating() -> l
    void requestStop() -> m
    float computeTargetVelocity(int,float,float,float) -> n
    void scrollTargetBy(int,int) -> a
    boolean canTargetScrollHorizontally(int) -> b
    boolean canTargetScrollVertically(int) -> c
    float getEdgeValue(float,float,float,float) -> o
    float constrainEdgeValue(float,float) -> p
    int constrain(int,int,int) -> q
    float constrain(float,float,float) -> r
    void cancelTargetTouch() -> s
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> t
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> u
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> v
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> w
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> x
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> y
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> z
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> aa
    void access$600(android.support.v4.widget.AutoScrollHelper) -> ab
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> ac
    int access$800(int,int,int) -> ad
    float access$900(float,float,float) -> ae
    void <clinit>() -> <clinit>
android.support.design.R$integer -> android.support.design.f:
    int abc_config_activityDefaultDur -> abc_config_activityDefaultDur
    int abc_config_activityShortDur -> abc_config_activityShortDur
    int app_bar_elevation_anim_duration -> app_bar_elevation_anim_duration
    int bottom_sheet_slide_duration -> bottom_sheet_slide_duration
    int cancel_button_image_alpha -> cancel_button_image_alpha
    int design_snackbar_text_max_lines -> design_snackbar_text_max_lines
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
    void <init>() -> <init>
com.android.volley.Response$ErrorListener -> com.android.a.d:
    void onErrorResponse(com.android.volley.VolleyError) -> a
android.support.v4.content.IntentCompat -> android.support.v4.d.q:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    void <init>() -> <init>
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    void <clinit>() -> <clinit>
android.support.v7.widget.RecyclerView$SavedState -> android.support.v7.widget.f:
    android.os.Parcelable mLayoutState -> a
    android.os.Parcelable$Creator CREATOR -> b
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void copyFrom(android.support.v7.widget.RecyclerView$SavedState) -> a
    void access$1900(android.support.v7.widget.RecyclerView$SavedState,android.support.v7.widget.RecyclerView$SavedState) -> b
    void <clinit>() -> <clinit>
com.android.volley.toolbox.ByteArrayPool$1 -> com.android.a.a.m:
    void <init>() -> <init>
    int compare(byte[],byte[]) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void <init>(android.content.Context) -> <init>
    void setSize(int,int) -> a
    boolean isFinished() -> b
    boolean onPull(float,float) -> c
    boolean onRelease() -> d
    boolean onAbsorb(int) -> e
    boolean draw(android.graphics.Canvas) -> f
    void <clinit>() -> <clinit>
android.support.design.widget.ViewUtilsLollipop -> android.support.design.widget.cj:
    int[] STATE_LIST_ANIM_ATTRS -> a
    void <init>() -> <init>
    void setDefaultAppBarLayoutStateListAnimator(android.view.View,float) -> a
    void <clinit>() -> <clinit>
android.support.design.widget.AppBarLayout$Behavior$DragCallback -> android.support.design.widget.ai:
    void <init>() -> <init>
    boolean canDrag(android.support.design.widget.AppBarLayout) -> a
android.support.design.widget.Snackbar$3 -> android.support.design.widget.ar:
    android.support.design.widget.Snackbar this$0 -> a
    void <init>(android.support.design.widget.Snackbar) -> <init>
    void show() -> a
    void dismiss(int) -> b
com.murrayc.galaxyzoo.app.ListFragment -> com.murrayc.galaxyzoo.app.ListFragment:
    com.murrayc.galaxyzoo.app.ListCursorAdapter mAdapter -> a
    com.murrayc.galaxyzoo.app.ListFragment$Callbacks mCallbacks -> b
    java.lang.String[] mColumns -> c
    android.view.View mRootView -> d
    com.murrayc.galaxyzoo.app.ListFragment$Callbacks sDummyCallbacks -> e
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>() -> <init>
    android.support.v7.widget.RecyclerView getGridView() -> a
    void onAttach(android.content.Context) -> b
    void onCreate(android.os.Bundle) -> c
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> b
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> d
    void onDetach() -> d
    void onGridItemClicked(int,android.view.View) -> e
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> f
    void onLoaderReset(android.support.v4.content.Loader) -> f
    boolean onOptionsItemSelected(android.view.MenuItem) -> g
    void update() -> h
    void <clinit>() -> <clinit>
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> k
    void -wrap0(com.murrayc.galaxyzoo.app.ListFragment,int,android.view.View) -> i
com.murrayc.galaxyzoo.app.QuestionFragment$SaveClassificationTask -> com.murrayc.galaxyzoo.app.ap:
    com.murrayc.galaxyzoo.app.QuestionFragment$ClassificationInProgress classificationInProgress -> a
    java.lang.ref.WeakReference fragmentReference -> b
    void <init>(com.murrayc.galaxyzoo.app.QuestionFragment,com.murrayc.galaxyzoo.app.QuestionFragment$ClassificationInProgress) -> <init>
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.murrayc.galaxyzoo.app.syncadapter.AuthenticatorService -> com.murrayc.galaxyzoo.app.syncadapter.AuthenticatorService:
    com.murrayc.galaxyzoo.app.syncadapter.Authenticator mAuthenticator -> a
    void <init>() -> <init>
    android.os.IBinder onBind(android.content.Intent) -> onBind
android.support.design.internal.NavigationMenuItemView$1 -> android.support.design.internal.a:
    android.support.design.internal.NavigationMenuItemView this$0 -> a
    void <init>(android.support.design.internal.NavigationMenuItemView) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> b
com.android.volley.VolleyLog$MarkerLog -> com.android.a.c:
    boolean ENABLED -> a
    java.util.List mMarkers -> b
    boolean mFinished -> c
    void <init>() -> <init>
    void add(java.lang.String,long) -> a
    void finish(java.lang.String) -> b
    void finalize() -> finalize
    long getTotalDuration() -> c
    void <clinit>() -> <clinit>
android.support.v4.app.ActivityCompat$1 -> android.support.v4.b.bx:
    java.lang.String[] val$permissions -> a
    android.app.Activity val$activity -> b
    int val$requestCode -> c
    void <init>(java.lang.String[],android.app.Activity,int) -> <init>
    void run() -> run
com.murrayc.galaxyzoo.app.ItemActivity -> com.murrayc.galaxyzoo.app.an:
    java.lang.String mItemId -> a
    void <init>() -> <init>
    void abandonItem() -> c
    java.lang.String getItemId() -> f
    void navigateToList() -> d
    void onCreate(android.os.Bundle) -> onCreate
    void setItemId(java.lang.String) -> g
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.a.g:
    void <init>() -> <init>
    boolean expandActionView(android.view.MenuItem) -> a
    boolean isActionViewExpanded(android.view.MenuItem) -> b
android.support.annotation.ColorInt -> android.support.annotation.f:
android.support.v7.widget.ActionBarBackgroundDrawable -> android.support.v7.widget.ca:
    android.support.v7.widget.ActionBarContainer mContainer -> a
    void <init>(android.support.v7.widget.ActionBarContainer) -> <init>
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.n:
    android.support.v4.util.MapCollections this$0 -> a
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.squareup.picasso.Utils$BitmapHoneycombMR1 -> com.squareup.a.af:
    void <init>() -> <init>
    int getByteCount(android.graphics.Bitmap) -> a
android.support.design.widget.FloatingActionButton$Behavior -> android.support.design.widget.FloatingActionButton$Behavior:
    android.graphics.Rect mTmpRect -> a
    android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener mInternalAutoHideListener -> b
    boolean mAutoHideEnabled -> c
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttachedToLayoutParams(android.support.design.widget.CoordinatorLayout$LayoutParams) -> a
    boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View) -> b
    boolean isBottomSheet(android.view.View) -> c
    boolean shouldUpdateVisibility(android.view.View,android.support.design.widget.FloatingActionButton) -> d
    boolean updateFabVisibilityForAppBarLayout(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.support.design.widget.FloatingActionButton) -> e
    boolean updateFabVisibilityForBottomSheet(android.view.View,android.support.design.widget.FloatingActionButton) -> f
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,int) -> g
    boolean getInsetDodgeRect(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.graphics.Rect) -> h
    void offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton) -> i
    boolean getInsetDodgeRect(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> j
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> k
    boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> l
android.support.v4.view.AbsSavedState -> android.support.v4.a.d:
    android.support.v4.view.AbsSavedState EMPTY_STATE -> a
    android.os.Parcelable mSuperState -> b
    android.os.Parcelable$Creator CREATOR -> c
    void <init>() -> <init>
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    android.os.Parcelable getSuperState() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.support.v4.view.AbsSavedState$1) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.a.bp:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> c
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> e
    void sendAccessibilityEvent(android.view.View,int) -> f
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> g
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> h
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> i
android.support.design.internal.NavigationMenuView -> android.support.design.internal.NavigationMenuView:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void initialize(android.support.v7.view.menu.MenuBuilder) -> a
    int getWindowAnimations() -> getWindowAnimations
android.support.v7.widget.DefaultItemAnimator$3 -> android.support.v7.widget.hl:
    java.util.ArrayList val$additions -> a
    android.support.v7.widget.DefaultItemAnimator this$0 -> b
    void <init>(android.support.v7.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    void run() -> run
android.support.v7.widget.ContentFrameLayout -> android.support.v7.widget.ContentFrameLayout:
    android.util.TypedValue mMinWidthMajor -> a
    android.util.TypedValue mMinWidthMinor -> b
    android.util.TypedValue mFixedWidthMajor -> c
    android.util.TypedValue mFixedWidthMinor -> d
    android.util.TypedValue mFixedHeightMajor -> e
    android.util.TypedValue mFixedHeightMinor -> f
    android.graphics.Rect mDecorPadding -> g
    android.support.v7.widget.ContentFrameLayout$OnAttachListener mAttachListener -> h
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void dispatchFitSystemWindows(android.graphics.Rect) -> a
    void setAttachListener(android.support.v7.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    void setDecorPadding(int,int,int,int) -> setDecorPadding
    void onMeasure(int,int) -> onMeasure
    android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
android.support.v4.graphics.drawable.DrawableWrapperHoneycomb$DrawableWrapperStateHoneycomb -> android.support.v4.j.a.d:
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
android.support.v7.view.SupportActionModeWrapper$CallbackWrapper -> android.support.v7.view.f:
    android.view.ActionMode$Callback mWrappedCallback -> a
    android.content.Context mContext -> b
    java.util.ArrayList mActionModes -> c
    android.support.v4.util.SimpleArrayMap mMenus -> d
    void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> a
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> b
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> c
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> d
    android.view.Menu getMenuWrapper(android.view.Menu) -> a
    android.view.ActionMode getActionModeWrapper(android.support.v7.view.ActionMode) -> b
android.support.v7.app.TwilightManager -> android.support.v7.c.at:
    android.support.v7.app.TwilightManager sInstance -> a
    android.content.Context mContext -> b
    android.location.LocationManager mLocationManager -> c
    android.support.v7.app.TwilightManager$TwilightState mTwilightState -> d
    android.support.v7.app.TwilightManager getInstance(android.content.Context) -> a
    void <init>(android.content.Context,android.location.LocationManager) -> <init>
    boolean isNight() -> b
    android.location.Location getLastKnownLocation() -> c
    android.location.Location getLastKnownLocationForProvider(java.lang.String) -> d
    boolean isStateValid() -> e
    void updateState(android.location.Location) -> f
android.support.v4.graphics.drawable.DrawableCompatBase -> android.support.v4.j.a.b:
    void <init>() -> <init>
    void setTint(android.graphics.drawable.Drawable,int) -> a
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> b
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> c
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> d
    void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> e
android.support.v7.app.AlertDialog$Builder -> android.support.v7.c.j:
    android.support.v7.app.AlertController$AlertParams P -> a
    int mTheme -> b
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,int) -> <init>
    android.content.Context getContext() -> a
    android.support.v7.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> b
    android.support.v7.app.AlertDialog$Builder setCustomTitle(android.view.View) -> c
    android.support.v7.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> d
    android.support.v7.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> e
    android.support.v7.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> f
    android.support.v7.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> g
    android.support.v7.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener) -> h
    android.support.v7.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> i
    android.support.v7.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> j
    android.support.v7.app.AlertDialog$Builder setView(android.view.View) -> k
    android.support.v7.app.AlertDialog create() -> l
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.b.b:
    void <init>(java.lang.String,java.lang.Exception) -> <init>
android.support.v4.os.CancellationSignalCompatJellybean -> android.support.v4.f.b:
    void <init>() -> <init>
    java.lang.Object create() -> a
    void cancel(java.lang.Object) -> b
android.support.v7.app.ActionBar$OnMenuVisibilityListener -> android.support.v7.c.g:
    void onMenuVisibilityChanged(boolean) -> a
com.squareup.picasso.Utils$PicassoThread -> com.squareup.a.ad:
    void <init>(java.lang.Runnable) -> <init>
    void run() -> run
android.support.v4.app.FragmentActivity$HostCallbacks -> android.support.v4.b.q:
    android.support.v4.app.FragmentActivity this$0 -> a
    void <init>(android.support.v4.app.FragmentActivity) -> <init>
    void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean onShouldSaveFragmentState(android.support.v4.app.Fragment) -> b
    android.view.LayoutInflater onGetLayoutInflater() -> c
    void onSupportInvalidateOptionsMenu() -> d
    void onStartActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int,android.os.Bundle) -> e
    boolean onHasWindowAnimations() -> f
    int onGetWindowAnimations() -> g
    void onAttachFragment(android.support.v4.app.Fragment) -> o
    android.view.View onFindViewById(int) -> h
    boolean onHasView() -> i
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.d.ad:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
    void <init>(android.support.v4.content.ModernAsyncTask,java.lang.Object[]) -> <init>
com.murrayc.galaxyzoo.app.provider.client.ZooniverseClient -> com.murrayc.galaxyzoo.app.provider.a.d:
    android.content.Context mContext -> a
    com.android.volley.RequestQueue mQueue -> b
    java.lang.String mServerBaseUri -> c
    com.murrayc.galaxyzoo.app.LoginUtils$LoginResult loginSync(java.lang.String,java.lang.String) -> a
    void <init>(android.content.Context,java.lang.String) -> <init>
    com.android.volley.RequestQueue getRequestQueue() -> b
    java.util.List requestMoreItemsSync(int) -> c
    void requestMoreItemsAsync(int,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener) -> d
    boolean uploadClassificationSync(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> e
    android.content.Context getContext() -> f
    java.lang.String getGroupIdForNextQuery() -> g
    java.lang.String getLoginUri() -> h
    java.lang.String getPostUploadUri(java.lang.String) -> i
    java.lang.String getQueryMoreItemsUri() -> j
    java.lang.String getQueryUri(int) -> k
    java.net.HttpURLConnection openConnection(java.lang.String) -> l
    void setConnectionUserAgent(java.net.HttpURLConnection) -> m
    void throwIfNoNetwork() -> n
    void writeParamsToHttpPost(java.net.HttpURLConnection,java.util.List) -> o
android.support.design.widget.CoordinatorLayout$OnPreDrawListener -> android.support.design.widget.aq:
    android.support.design.widget.CoordinatorLayout this$0 -> a
    void <init>(android.support.design.widget.CoordinatorLayout) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.v7.view.menu.MenuWrapperFactory -> android.support.v7.view.menu.m:
    void <init>() -> <init>
    android.view.Menu wrapSupportMenu(android.content.Context,android.support.v4.internal.view.SupportMenu) -> a
    android.view.MenuItem wrapSupportMenuItem(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> b
    android.view.SubMenu wrapSupportSubMenu(android.content.Context,android.support.v4.internal.view.SupportSubMenu) -> c
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> android.support.v4.a.dd:
    java.util.WeakHashMap mStarterMap -> a
    void <init>() -> <init>
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> a
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> b
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> c
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> d
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> e
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> f
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> g
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> h
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> i
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> j
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> k
    void startAnimation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> l
    void removeStartMessage(android.view.View) -> m
    void postStartMessage(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> n
    void access$200(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> o
android.support.v4.app.LoaderManager -> android.support.v4.b.j:
    void <init>() -> <init>
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> e
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> f
    void destroyLoader(int) -> g
com.android.volley.Cache$Entry -> com.android.a.g:
    byte[] data -> a
    java.lang.String etag -> b
    long serverDate -> c
    long lastModified -> d
    long ttl -> e
    long softTtl -> f
    java.util.Map responseHeaders -> g
    void <init>() -> <init>
    boolean isExpired() -> a
    boolean refreshNeeded() -> b
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.a.a.p:
    void <init>() -> <init>
com.murrayc.galaxyzoo.app.Singleton$InitAsyncTask -> com.murrayc.galaxyzoo.app.x:
    void <init>() -> <init>
    java.lang.Void doInBackground(android.content.Context[]) -> a
    void onPostExecute(java.lang.Void) -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void <init>(com.murrayc.galaxyzoo.app.Singleton$InitAsyncTask) -> <init>
com.murrayc.galaxyzoo.app.provider.ClassificationCheckbox -> com.murrayc.galaxyzoo.app.provider.j:
    android.net.Uri CLASSIFICATION_CHECKBOXES_URI -> a
    android.net.Uri CONTENT_URI -> b
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v7.widget.TintResources -> android.support.v7.widget.ee:
    java.lang.ref.WeakReference mContextRef -> a
    void <init>(android.content.Context,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
android.support.design.widget.AppBarLayout$LayoutParams -> android.support.design.widget.u:
    int mScrollFlags -> a
    android.view.animation.Interpolator mScrollInterpolator -> b
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.widget.LinearLayout$LayoutParams) -> <init>
    int getScrollFlags() -> a
    android.view.animation.Interpolator getScrollInterpolator() -> b
    boolean isCollapsible() -> c
    boolean access$100(android.support.design.widget.AppBarLayout$LayoutParams) -> d
android.support.v7.text.AllCapsTransformationMethod -> android.support.v7.e.a:
    java.util.Locale mLocale -> a
    void <init>(android.content.Context) -> <init>
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
com.murrayc.galaxyzoo.app.ClassifyActivity -> com.murrayc.galaxyzoo.app.ClassifyActivity:
    java.lang.String[] PERMISSIONS_REQUIRED -> a
    android.support.v7.app.AlertDialog mAlertDialog -> b
    int mClassificationsDoneInSession -> c
    boolean mIsStateAlreadySaved -> d
    boolean mPendingClassificationFinished -> e
    boolean mPendingWarnAboutNetworkProblemWithRetry -> f
    android.content.BroadcastReceiver mReceiverNetworkReconnection -> g
    void <init>() -> <init>
    void abandonItem() -> c
    void checkForLoginAsync() -> h
    void checkPermissions() -> i
    void doClassificationFinished() -> j
    void doWarnAboutNetworkProblemWithRetry() -> k
    com.murrayc.galaxyzoo.app.ClassifyFragment getChildFragment() -> l
    void listenForNetworkReconnection() -> a
    void onClassificationFinished() -> g
    void onClickListenerRetry() -> m
    void onCreate(android.os.Bundle) -> onCreate
    void onExistingLoginRetrieved(com.murrayc.galaxyzoo.app.LoginUtils$LoginDetails) -> n
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onPause() -> onPause
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    void onResumeFragments() -> o
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    void requestSync() -> p
    void startNextClassification() -> q
    void stopListeningForNetworkReconnection() -> r
    void updateAfterPermissionsCheck() -> s
    void warnAboutNetworkProblemWithRetry() -> b
    void <clinit>() -> <clinit>
    android.support.v7.app.AlertDialog -set0(com.murrayc.galaxyzoo.app.ClassifyActivity,android.support.v7.app.AlertDialog) -> t
    void -wrap0(com.murrayc.galaxyzoo.app.ClassifyActivity) -> u
    void -wrap1(com.murrayc.galaxyzoo.app.ClassifyActivity,com.murrayc.galaxyzoo.app.LoginUtils$LoginDetails) -> v
    void -wrap2(com.murrayc.galaxyzoo.app.ClassifyActivity) -> w
    void -wrap3(com.murrayc.galaxyzoo.app.ClassifyActivity) -> x
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.a.a.k:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> <init>
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
com.squareup.picasso.BitmapHunter -> com.squareup.a.q:
    java.lang.Object DECODE_LOCK -> a
    java.lang.ThreadLocal NAME_BUILDER -> b
    java.util.concurrent.atomic.AtomicInteger SEQUENCE_GENERATOR -> c
    com.squareup.picasso.RequestHandler ERRORING_HANDLER -> d
    int sequence -> e
    com.squareup.picasso.Picasso picasso -> f
    com.squareup.picasso.Dispatcher dispatcher -> g
    com.squareup.picasso.Cache cache -> h
    com.squareup.picasso.Stats stats -> i
    java.lang.String key -> j
    com.squareup.picasso.Request data -> k
    int memoryPolicy -> l
    int networkPolicy -> m
    com.squareup.picasso.RequestHandler requestHandler -> n
    com.squareup.picasso.Action action -> o
    java.util.List actions -> p
    android.graphics.Bitmap result -> q
    java.util.concurrent.Future future -> r
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> s
    java.lang.Exception exception -> t
    int exifRotation -> u
    int retryCount -> v
    com.squareup.picasso.Picasso$Priority priority -> w
    void <init>(com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action,com.squareup.picasso.RequestHandler) -> <init>
    android.graphics.Bitmap decodeStream(java.io.InputStream,com.squareup.picasso.Request) -> a
    void run() -> run
    android.graphics.Bitmap hunt() -> b
    void attach(com.squareup.picasso.Action) -> c
    void detach(com.squareup.picasso.Action) -> d
    com.squareup.picasso.Picasso$Priority computeNewPriority() -> e
    boolean cancel() -> f
    boolean isCancelled() -> g
    boolean shouldRetry(boolean,android.net.NetworkInfo) -> h
    boolean supportsReplay() -> i
    android.graphics.Bitmap getResult() -> j
    java.lang.String getKey() -> k
    int getMemoryPolicy() -> l
    com.squareup.picasso.Request getData() -> m
    com.squareup.picasso.Action getAction() -> n
    com.squareup.picasso.Picasso getPicasso() -> o
    java.util.List getActions() -> p
    java.lang.Exception getException() -> q
    com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom() -> r
    com.squareup.picasso.Picasso$Priority getPriority() -> s
    void updateThreadName(com.squareup.picasso.Request) -> t
    com.squareup.picasso.BitmapHunter forRequest(com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action) -> u
    android.graphics.Bitmap applyCustomTransformations(java.util.List,android.graphics.Bitmap) -> v
    android.graphics.Bitmap transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int) -> w
    boolean shouldResize(boolean,int,int,int,int) -> x
    void <clinit>() -> <clinit>
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.f.e:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> b
com.squareup.picasso.Request -> com.squareup.a.n:
    long TOO_LONG_LOG -> a
    int id -> b
    long started -> c
    int networkPolicy -> d
    android.net.Uri uri -> e
    int resourceId -> f
    java.lang.String stableKey -> g
    java.util.List transformations -> h
    int targetWidth -> i
    int targetHeight -> j
    boolean centerCrop -> k
    boolean centerInside -> l
    boolean onlyScaleDown -> m
    float rotationDegrees -> n
    float rotationPivotX -> o
    float rotationPivotY -> p
    boolean hasRotationPivot -> q
    android.graphics.Bitmap$Config config -> r
    com.squareup.picasso.Picasso$Priority priority -> s
    void <init>(android.net.Uri,int,java.lang.String,java.util.List,int,int,boolean,boolean,boolean,float,float,float,boolean,android.graphics.Bitmap$Config,com.squareup.picasso.Picasso$Priority) -> <init>
    java.lang.String toString() -> toString
    java.lang.String logId() -> a
    java.lang.String plainId() -> b
    java.lang.String getName() -> c
    boolean hasSize() -> d
    boolean needsTransformation() -> e
    boolean needsMatrixTransform() -> f
    boolean hasCustomTransformations() -> g
    void <init>(android.net.Uri,int,java.lang.String,java.util.List,int,int,boolean,boolean,boolean,float,float,float,boolean,android.graphics.Bitmap$Config,com.squareup.picasso.Picasso$Priority,com.squareup.picasso.Request$1) -> <init>
    void <clinit>() -> <clinit>
android.support.v7.widget.ListPopupWindow$ResizePopupRunnable -> android.support.v7.widget.dv:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    void run() -> run
    void <init>(android.support.v7.widget.ListPopupWindow,android.support.v7.widget.ListPopupWindow$1) -> <init>
android.support.v7.appcompat.R$dimen -> android.support.v7.a.d:
    int abc_action_bar_content_inset_material -> abc_action_bar_content_inset_material
    int abc_action_bar_content_inset_with_nav -> abc_action_bar_content_inset_with_nav
    int abc_action_bar_default_height_material -> abc_action_bar_default_height_material
    int abc_action_bar_default_padding_end_material -> abc_action_bar_default_padding_end_material
    int abc_action_bar_default_padding_start_material -> abc_action_bar_default_padding_start_material
    int abc_action_bar_elevation_material -> abc_action_bar_elevation_material
    int abc_action_bar_icon_vertical_padding_material -> abc_action_bar_icon_vertical_padding_material
    int abc_action_bar_overflow_padding_end_material -> abc_action_bar_overflow_padding_end_material
    int abc_action_bar_overflow_padding_start_material -> abc_action_bar_overflow_padding_start_material
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin_material -> abc_action_bar_subtitle_bottom_margin_material
    int abc_action_bar_subtitle_top_margin_material -> abc_action_bar_subtitle_top_margin_material
    int abc_action_button_min_height_material -> abc_action_button_min_height_material
    int abc_action_button_min_width_material -> abc_action_button_min_width_material
    int abc_action_button_min_width_overflow_material -> abc_action_button_min_width_overflow_material
    int abc_alert_dialog_button_bar_height -> abc_alert_dialog_button_bar_height
    int abc_button_inset_horizontal_material -> abc_button_inset_horizontal_material
    int abc_button_inset_vertical_material -> abc_button_inset_vertical_material
    int abc_button_padding_horizontal_material -> abc_button_padding_horizontal_material
    int abc_button_padding_vertical_material -> abc_button_padding_vertical_material
    int abc_cascading_menus_min_smallest_width -> abc_cascading_menus_min_smallest_width
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_control_corner_material -> abc_control_corner_material
    int abc_control_inset_material -> abc_control_inset_material
    int abc_control_padding_material -> abc_control_padding_material
    int abc_dialog_fixed_height_major -> abc_dialog_fixed_height_major
    int abc_dialog_fixed_height_minor -> abc_dialog_fixed_height_minor
    int abc_dialog_fixed_width_major -> abc_dialog_fixed_width_major
    int abc_dialog_fixed_width_minor -> abc_dialog_fixed_width_minor
    int abc_dialog_list_padding_vertical_material -> abc_dialog_list_padding_vertical_material
    int abc_dialog_min_width_major -> abc_dialog_min_width_major
    int abc_dialog_min_width_minor -> abc_dialog_min_width_minor
    int abc_dialog_padding_material -> abc_dialog_padding_material
    int abc_dialog_padding_top_material -> abc_dialog_padding_top_material
    int abc_disabled_alpha_material_dark -> abc_disabled_alpha_material_dark
    int abc_disabled_alpha_material_light -> abc_disabled_alpha_material_light
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_edit_text_inset_bottom_material -> abc_edit_text_inset_bottom_material
    int abc_edit_text_inset_horizontal_material -> abc_edit_text_inset_horizontal_material
    int abc_edit_text_inset_top_material -> abc_edit_text_inset_top_material
    int abc_floating_window_z -> abc_floating_window_z
    int abc_list_item_padding_horizontal_material -> abc_list_item_padding_horizontal_material
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_progress_bar_height_material -> abc_progress_bar_height_material
    int abc_search_view_preferred_height -> abc_search_view_preferred_height
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_seekbar_track_background_height_material -> abc_seekbar_track_background_height_material
    int abc_seekbar_track_progress_height_material -> abc_seekbar_track_progress_height_material
    int abc_select_dialog_padding_start_material -> abc_select_dialog_padding_start_material
    int abc_switch_padding -> abc_switch_padding
    int abc_text_size_body_1_material -> abc_text_size_body_1_material
    int abc_text_size_body_2_material -> abc_text_size_body_2_material
    int abc_text_size_button_material -> abc_text_size_button_material
    int abc_text_size_caption_material -> abc_text_size_caption_material
    int abc_text_size_display_1_material -> abc_text_size_display_1_material
    int abc_text_size_display_2_material -> abc_text_size_display_2_material
    int abc_text_size_display_3_material -> abc_text_size_display_3_material
    int abc_text_size_display_4_material -> abc_text_size_display_4_material
    int abc_text_size_headline_material -> abc_text_size_headline_material
    int abc_text_size_large_material -> abc_text_size_large_material
    int abc_text_size_medium_material -> abc_text_size_medium_material
    int abc_text_size_menu_header_material -> abc_text_size_menu_header_material
    int abc_text_size_menu_material -> abc_text_size_menu_material
    int abc_text_size_small_material -> abc_text_size_small_material
    int abc_text_size_subhead_material -> abc_text_size_subhead_material
    int abc_text_size_subtitle_material_toolbar -> abc_text_size_subtitle_material_toolbar
    int abc_text_size_title_material -> abc_text_size_title_material
    int abc_text_size_title_material_toolbar -> abc_text_size_title_material_toolbar
    int disabled_alpha_material_dark -> disabled_alpha_material_dark
    int disabled_alpha_material_light -> disabled_alpha_material_light
    int highlight_alpha_material_colored -> highlight_alpha_material_colored
    int highlight_alpha_material_dark -> highlight_alpha_material_dark
    int highlight_alpha_material_light -> highlight_alpha_material_light
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_subtext_size -> notification_subtext_size
    void <init>() -> <init>
android.support.v7.app.ToolbarActionBar$PanelMenuPresenterCallback -> android.support.v7.c.as:
    android.support.v7.app.ToolbarActionBar this$0 -> a
    void <init>(android.support.v7.app.ToolbarActionBar) -> <init>
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> b
    void <init>(android.support.v7.app.ToolbarActionBar,android.support.v7.app.ToolbarActionBar$1) -> <init>
android.support.v4.content.res.ConfigurationHelper$HoneycombMr2Impl -> android.support.v4.d.a.i:
    void <init>() -> <init>
    int getScreenHeightDp(android.content.res.Resources) -> a
    int getScreenWidthDp(android.content.res.Resources) -> b
    int getSmallestScreenWidthDp(android.content.res.Resources) -> c
    void <init>(android.support.v4.content.res.ConfigurationHelper$1) -> <init>
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.a.ab:
    java.lang.reflect.Field mAccessibilityDelegateField -> a
    boolean accessibilityDelegateCheckFailed -> b
    void <init>() -> <init>
    boolean canScrollHorizontally(android.view.View,int) -> e
    boolean canScrollVertically(android.view.View,int) -> f
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> g
    boolean hasAccessibilityDelegate(android.view.View) -> r
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> x
    void setFitsSystemWindows(android.view.View,boolean) -> y
    void <clinit>() -> <clinit>
android.support.v7.widget.ForwardingListener$1 -> android.support.v7.widget.cb:
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.d.z:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    void <init>() -> <init>
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.a.ds:
    void <init>() -> <init>
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.a.a.q:
    void <init>() -> <init>
    void setMaxScrollX(java.lang.Object,int) -> a
    void setMaxScrollY(java.lang.Object,int) -> b
android.support.v7.widget.GridLayoutManager -> android.support.v7.widget.GridLayoutManager:
    boolean mPendingSpanCountChange -> a
    int mSpanCount -> b
    int[] mCachedBorders -> c
    android.view.View[] mSet -> d
    android.util.SparseIntArray mPreLayoutSpanSizeCache -> e
    android.util.SparseIntArray mPreLayoutSpanIndexCache -> f
    android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup -> g
    android.graphics.Rect mDecorInsets -> h
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void <init>(android.content.Context,int) -> <init>
    void <init>(android.content.Context,int,int,boolean) -> <init>
    void setStackFromEnd(boolean) -> a
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> dq
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> dr
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> dn
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> r
    void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> s
    void clearPreLayoutSpanMappingCache() -> b
    void cachePreLayoutSpanMapping() -> c
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> cn
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> cm
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> co
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object) -> cq
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> cr
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> t
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> w
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> v
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> u
    void updateMeasurements() -> d
    void setMeasuredDimension(android.graphics.Rect,int,int) -> d
    void calculateItemBorders(int) -> e
    int[] calculateItemBorders(int[],int,int) -> f
    int getSpaceForSpanRange(int,int) -> g
    void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int) -> h
    void ensureViewSet() -> j
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> x
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> y
    void ensureAnchorIsInCorrectSpan(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int) -> k
    android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int) -> l
    int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> m
    int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> n
    int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> o
    void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult) -> p
    void measureChild(android.view.View,int,boolean) -> q
    void guessMeasurement(float,int) -> r
    void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> s
    void assignSpans(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,boolean) -> t
    void setSpanCount(int) -> u
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> cf
    boolean supportsPredictiveItemAnimations() -> i
android.support.design.widget.ViewOffsetBehavior -> android.support.design.widget.ax:
    android.support.design.widget.ViewOffsetHelper mViewOffsetHelper -> a
    int mTempTopBottomOffset -> b
    int mTempLeftRightOffset -> c
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> k
    void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> a
    boolean setTopAndBottomOffset(int) -> j
    int getTopAndBottomOffset() -> i
android.support.design.widget.BottomSheetBehavior$BottomSheetCallback -> android.support.design.widget.bl:
    void <init>() -> <init>
    void onStateChanged(android.view.View,int) -> a
    void onSlide(android.view.View,float) -> b
android.support.v4.animation.GingerbreadAnimatorCompatProvider -> android.support.v4.g.b:
    void <init>() -> <init>
    void clearInterpolator(android.view.View) -> a
android.support.v7.view.SupportMenuInflater$MenuState -> android.support.v7.view.m:
    android.view.Menu menu -> a
    int groupId -> b
    int groupCategory -> c
    int groupOrder -> d
    int groupCheckable -> e
    boolean groupVisible -> f
    boolean groupEnabled -> g
    boolean itemAdded -> h
    int itemId -> i
    int itemCategoryOrder -> j
    java.lang.CharSequence itemTitle -> k
    java.lang.CharSequence itemTitleCondensed -> l
    int itemIconResId -> m
    char itemAlphabeticShortcut -> n
    char itemNumericShortcut -> o
    int itemCheckable -> p
    boolean itemChecked -> q
    boolean itemVisible -> r
    boolean itemEnabled -> s
    int itemShowAsAction -> t
    int itemActionViewLayout -> u
    java.lang.String itemActionViewClassName -> v
    java.lang.String itemActionProviderClassName -> w
    java.lang.String itemListenerMethodName -> x
    android.support.v4.view.ActionProvider itemActionProvider -> y
    android.support.v7.view.SupportMenuInflater this$0 -> z
    void <init>(android.support.v7.view.SupportMenuInflater,android.view.Menu) -> <init>
    void resetGroup() -> a
    void readGroup(android.util.AttributeSet) -> b
    void readItem(android.util.AttributeSet) -> c
    char getShortcut(java.lang.String) -> d
    void setItem(android.view.MenuItem) -> e
    void addItem() -> f
    android.view.SubMenu addSubMenuItem() -> g
    boolean hasAddedItem() -> h
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> i
    android.support.v4.view.ActionProvider access$000(android.support.v7.view.SupportMenuInflater$MenuState) -> j
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.a.cd:
    void <init>() -> <init>
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> b
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> e
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> f
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> g
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> h
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> i
android.support.v7.app.AppCompatViewInflater -> android.support.v7.c.x:
    java.lang.Class[] sConstructorSignature -> a
    int[] sOnClickAttrs -> b
    java.lang.String[] sClassPrefixList -> c
    java.util.Map sConstructorMap -> d
    java.lang.Object[] mConstructorArgs -> e
    void <init>() -> <init>
    android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> a
    android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> b
    void checkOnClickListener(android.view.View,android.util.AttributeSet) -> c
    android.view.View createView(android.content.Context,java.lang.String,java.lang.String) -> d
    android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> e
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl -> android.support.v4.a.a.ao:
    void <init>() -> <init>
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> a
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> b
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.a.af:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> a
    java.lang.Object DEFAULT_DELEGATE -> b
    java.lang.Object mBridge -> c
    void <init>() -> <init>
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> b
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> e
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> b
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> f
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> g
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> b
    void <clinit>() -> <clinit>
android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$2 -> android.support.design.widget.bh:
    android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy val$listener -> a
    android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 this$0 -> b
    void <init>(android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1,android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
com.murrayc.galaxyzoo.app.syncadapter.SyncService -> com.murrayc.galaxyzoo.app.syncadapter.SyncService:
    com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter sSyncAdapter -> a
    java.lang.Object sSyncAdapterLock -> b
    void <init>() -> <init>
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void <clinit>() -> <clinit>
android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 -> android.support.design.widget.ct:
    android.animation.ValueAnimator mValueAnimator -> a
    void <init>() -> <init>
    void start() -> a
    boolean isRunning() -> b
    void setInterpolator(android.view.animation.Interpolator) -> c
    void addUpdateListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy) -> e
    void addListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy) -> d
    void setIntValues(int,int) -> f
    int getAnimatedIntValue() -> g
    void setFloatValues(float,float) -> h
    void setDuration(long) -> i
    void cancel() -> j
    float getAnimatedFraction() -> k
    void end() -> l
android.support.v7.content.res.GrowingArrayUtils -> android.support.v7.f.a.a:
    boolean $assertionsDisabled -> a
    java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> a
    int[] append(int[],int,int) -> b
    int growSize(int) -> c
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.aw:
    int mRampUpDuration -> a
    int mRampDownDuration -> b
    float mTargetVelocityX -> c
    float mTargetVelocityY -> d
    long mStartTime -> e
    long mDeltaTime -> f
    int mDeltaX -> g
    int mDeltaY -> h
    long mStopTime -> i
    float mStopValue -> j
    int mEffectiveRampDown -> k
    void <init>() -> <init>
    void setRampUpDuration(int) -> a
    void setRampDownDuration(int) -> b
    void start() -> c
    void requestStop() -> d
    boolean isFinished() -> e
    float getValueAt(long) -> f
    float interpolateValue(float) -> g
    void computeScrollDelta() -> h
    void setTargetVelocity(float,float) -> i
    int getHorizontalDirection() -> j
    int getVerticalDirection() -> k
    int getDeltaX() -> l
    int getDeltaY() -> m
android.support.v7.widget.VectorEnabledTintResources -> android.support.v7.widget.fi:
    java.lang.ref.WeakReference mContextRef -> a
    boolean shouldBeUsed() -> a
    void <init>(android.content.Context,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    android.graphics.drawable.Drawable superGetDrawable(int) -> b
android.support.v7.app.ToolbarActionBar -> android.support.v7.c.p:
    android.support.v7.widget.DecorToolbar mDecorToolbar -> a
    boolean mToolbarMenuPrepared -> b
    android.view.Window$Callback mWindowCallback -> c
    boolean mMenuCallbackSet -> d
    boolean mLastMenuVisibility -> e
    java.util.ArrayList mMenuVisibilityListeners -> f
    android.support.v7.view.menu.ListMenuPresenter mListMenuPresenter -> g
    java.lang.Runnable mMenuInvalidator -> h
    android.support.v7.widget.Toolbar$OnMenuItemClickListener mMenuClicker -> i
    void <init>(android.support.v7.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback) -> <init>
    android.view.Window$Callback getWrappedWindowCallback() -> a
    android.content.Context getThemedContext() -> h
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> i
    void setShowHideAnimationEnabled(boolean) -> j
    void onConfigurationChanged(android.content.res.Configuration) -> k
    void setWindowTitle(java.lang.CharSequence) -> q
    boolean requestFocus() -> r
    void setDisplayOptions(int,int) -> b
    void setDisplayHomeAsUpEnabled(boolean) -> a
    void setDisplayShowTitleEnabled(boolean) -> b
    int getDisplayOptions() -> d
    boolean isShowing() -> g
    boolean invalidateOptionsMenu() -> n
    boolean collapseActionView() -> p
    void populateOptionsMenu() -> c
    boolean onKeyShortcut(int,android.view.KeyEvent) -> o
    void onDestroy() -> s
    void dispatchMenuVisibilityChanged(boolean) -> l
    android.view.View getListMenuView(android.view.Menu) -> d
    void ensureListMenuPresenter(android.view.Menu) -> e
    android.view.Menu getMenu() -> f
    android.view.Window$Callback access$000(android.support.v7.app.ToolbarActionBar) -> g
    boolean access$200(android.support.v7.app.ToolbarActionBar) -> h
    android.support.v7.widget.DecorToolbar access$300(android.support.v7.app.ToolbarActionBar) -> i
    boolean access$202(android.support.v7.app.ToolbarActionBar,boolean) -> j
    android.view.View access$400(android.support.v7.app.ToolbarActionBar,android.view.Menu) -> k
android.support.v7.widget.AppCompatSpinner$DropdownPopup$1 -> android.support.v7.widget.ev:
    android.support.v7.widget.AppCompatSpinner val$this$0 -> a
    android.support.v7.widget.AppCompatSpinner$DropdownPopup this$1 -> b
    void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup,android.support.v7.widget.AppCompatSpinner) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback -> android.support.v7.widget.cv:
    android.support.v7.widget.ActionMenuPresenter this$0 -> a
    void <init>(android.support.v7.widget.ActionMenuPresenter) -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> a
    void <init>(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$1) -> <init>
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.a.a.ae:
    void <init>() -> <init>
    void setFromIndex(java.lang.Object,int) -> d
    void setItemCount(java.lang.Object,int) -> c
    void setMaxScrollX(java.lang.Object,int) -> a
    void setMaxScrollY(java.lang.Object,int) -> b
    void setScrollX(java.lang.Object,int) -> f
    void setScrollY(java.lang.Object,int) -> g
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> e
android.support.v7.widget.SimpleItemAnimator -> android.support.v7.widget.hg:
    boolean mSupportsChangeAnimations -> a
    void <init>() -> <init>
    boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder) -> s
    boolean animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> h
    boolean animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> i
    boolean animatePersistence(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> j
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> k
    boolean animateRemove(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    boolean animateAdd(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> e
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> g
    void dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    void dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> d
    void dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> e
    void dispatchChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> f
    void dispatchRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> g
    void dispatchMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> h
    void dispatchAddStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> i
    void dispatchChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> j
    void onRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> k
    void onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> l
    void onAddStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> m
    void onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> o
    void onMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> p
    void onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> t
    void onChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> u
    void onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> v
android.support.design.widget.DirectedAcyclicGraph -> android.support.design.widget.ah:
    android.support.v4.util.Pools$Pool mListPool -> a
    android.support.v4.util.SimpleArrayMap mGraph -> b
    java.util.ArrayList mSortResult -> c
    java.util.HashSet mSortTmpMarked -> d
    void <init>() -> <init>
    void addNode(java.lang.Object) -> a
    boolean contains(java.lang.Object) -> b
    void addEdge(java.lang.Object,java.lang.Object) -> c
    java.util.List getIncomingEdges(java.lang.Object) -> d
    java.util.List getOutgoingEdges(java.lang.Object) -> e
    boolean hasOutgoingEdges(java.lang.Object) -> f
    void clear() -> g
    java.util.ArrayList getSortedList() -> h
    void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> i
    int size() -> j
    java.util.ArrayList getEmptyList() -> k
    void poolList(java.util.ArrayList) -> l
android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatBaseImpl -> android.support.v4.a.cz:
    void <init>() -> <init>
    int getSystemWindowInsetLeft(java.lang.Object) -> b
    int getSystemWindowInsetTop(java.lang.Object) -> d
    int getSystemWindowInsetRight(java.lang.Object) -> c
    int getSystemWindowInsetBottom(java.lang.Object) -> a
    boolean isConsumed(java.lang.Object) -> e
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(java.lang.Object,int,int,int,int) -> e
    void <init>(android.support.v4.view.WindowInsetsCompat$1) -> <init>
com.android.volley.toolbox.ByteArrayPool -> com.android.a.a.l:
    java.util.List mBuffersByLastUse -> a
    java.util.List mBuffersBySize -> b
    int mCurrentSize -> c
    int mSizeLimit -> d
    java.util.Comparator BUF_COMPARATOR -> e
    void <init>(int) -> <init>
    byte[] getBuf(int) -> a
    void returnBuf(byte[]) -> b
    void trim() -> c
    void <clinit>() -> <clinit>
android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC -> android.support.v4.a.as:
    void <init>(android.support.v4.view.LayoutInflaterFactory) -> <init>
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.b.bm:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void <init>(android.support.v4.app.FragmentManagerImpl,android.view.View,android.view.animation.Animation,android.support.v4.app.Fragment) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.murrayc.galaxyzoo.app.Singleton -> com.murrayc.galaxyzoo.app.v:
    boolean initializationInProgress -> a
    boolean loggedIn -> b
    java.util.List mCallbacks -> c
    java.util.Map mDecisionTrees -> d
    com.murrayc.galaxyzoo.app.IconsCache mIconsCache -> e
    com.murrayc.galaxyzoo.app.Singleton$LocaleDetails mLocaleDetails -> f
    com.murrayc.galaxyzoo.app.Singleton ourInstance -> g
    com.murrayc.galaxyzoo.app.Singleton getInstance() -> a
    void init(android.content.Context,com.murrayc.galaxyzoo.app.Singleton$Callbacks) -> b
    android.graphics.drawable.BitmapDrawable getIconDrawable(android.content.Context,java.lang.String) -> c
    void <init>(android.content.Context) -> <init>
    boolean getCachedLoggedIn() -> d
    com.murrayc.galaxyzoo.app.DecisionTree getDecisionTree(java.lang.String) -> e
    android.graphics.Bitmap getIcon(java.lang.String) -> f
    android.graphics.drawable.BitmapDrawable getIconDrawable(android.content.Context,com.murrayc.galaxyzoo.app.DecisionTree$BaseButton) -> g
    com.murrayc.galaxyzoo.app.Singleton$LocaleDetails getLocaleDetails(android.content.Context) -> h
    boolean localeIsDifferent(android.content.Context) -> i
    void onInitTaskFinished() -> j
    void setCachedLoggedIn(boolean) -> k
    void <clinit>() -> <clinit>
    com.murrayc.galaxyzoo.app.Singleton -set0(com.murrayc.galaxyzoo.app.Singleton) -> l
    void -wrap0() -> m
android.support.v7.widget.ButtonBarLayout -> android.support.v7.widget.ButtonBarLayout:
    boolean mAllowStacking -> a
    int mLastWidthSize -> b
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setAllowStacking(boolean) -> setAllowStacking
    void onMeasure(int,int) -> onMeasure
    void setStacked(boolean) -> setStacked
    boolean isStacked() -> a
android.support.v7.widget.RecyclerView$Adapter -> android.support.v7.widget.r:
    android.support.v7.widget.RecyclerView$AdapterDataObservable mObservable -> a
    boolean mHasStableIds -> b
    void <init>() -> <init>
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> e
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> h
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List) -> a
    android.support.v7.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> b
    void bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> c
    int getItemViewType(int) -> d
    long getItemId(int) -> e
    int getItemCount() -> c
    boolean hasStableIds() -> f
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> g
    boolean onFailedToRecycleView(android.support.v7.widget.RecyclerView$ViewHolder) -> h
    void onViewAttachedToWindow(android.support.v7.widget.RecyclerView$ViewHolder) -> i
    void onViewDetachedFromWindow(android.support.v7.widget.RecyclerView$ViewHolder) -> j
    void registerAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver) -> k
    void unregisterAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver) -> l
    void onAttachedToRecyclerView(android.support.v7.widget.RecyclerView) -> m
    void onDetachedFromRecyclerView(android.support.v7.widget.RecyclerView) -> n
    void notifyDataSetChanged() -> o
com.squareup.picasso.Cache$1 -> com.squareup.a.bf:
    void <init>() -> <init>
    android.graphics.Bitmap get(java.lang.String) -> a
    void set(java.lang.String,android.graphics.Bitmap) -> b
    int size() -> c
    int maxSize() -> d
android.support.v7.widget.OrientationHelper$2 -> android.support.v7.widget.gq:
    void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    int getEndAfterPadding() -> j
    int getEnd() -> k
    void offsetChildren(int) -> l
    int getStartAfterPadding() -> i
    int getDecoratedMeasurement(android.view.View) -> g
    int getDecoratedMeasurementInOther(android.view.View) -> h
    int getDecoratedEnd(android.view.View) -> d
    int getDecoratedStart(android.view.View) -> c
    int getTransformedEndWithDecoration(android.view.View) -> e
    int getTransformedStartWithDecoration(android.view.View) -> f
    int getTotalSpace() -> m
    int getEndPadding() -> n
    int getMode() -> o
    int getModeInOther() -> p
android.support.v7.view.ActionMode$Callback -> android.support.v7.view.b:
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> a
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> b
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> c
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> d
com.murrayc.galaxyzoo.app.SubjectFragment -> com.murrayc.galaxyzoo.app.p:
    java.lang.String[] mColumns -> a
    android.database.Cursor mCursor -> b
    android.widget.ImageView mImageView -> c
    boolean mInverted -> d
    android.view.View mRootView -> e
    android.support.v7.widget.ShareActionProvider mShareActionProvider -> f
    java.lang.String mUriImageInverted -> g
    java.lang.String mUriImageStandard -> h
    java.lang.String mUriStandardRemote -> i
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>() -> <init>
    void update() -> b
    void setInverted(boolean) -> c
    void doDownloadImage() -> h
    void doInvert() -> i
    boolean getInverted() -> k
    void onCreate(android.os.Bundle) -> c
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> b
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> d
    void onDetach() -> d
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> l
    void onLoaderReset(android.support.v4.content.Loader) -> f
    boolean onOptionsItemSelected(android.view.MenuItem) -> g
    void onPause() -> m
    void onSaveInstanceState(android.os.Bundle) -> k
    void showImage() -> n
    void updateFromCursor() -> o
    void updateShareActionIntent() -> p
    void <clinit>() -> <clinit>
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> k
    void -wrap0(com.murrayc.galaxyzoo.app.SubjectFragment) -> q
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.f.m:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v7.widget.ScrollingTabContainerView -> android.support.v7.widget.fc:
    java.lang.Runnable mTabSelector -> a
    android.support.v7.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> b
    android.support.v7.widget.LinearLayoutCompat mTabLayout -> c
    android.widget.Spinner mTabSpinner -> d
    boolean mAllowCollapse -> e
    int mMaxTabWidth -> f
    int mStackedTabMaxWidth -> g
    int mContentHeight -> h
    int mSelectedTabIndex -> i
    android.view.animation.Interpolator sAlphaInterpolator -> j
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> a
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> b
    boolean performExpand() -> c
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    android.widget.Spinner createSpinner() -> d
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToTab(int) -> e
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.support.v7.widget.ScrollingTabContainerView$TabView createTabView(android.support.v7.app.ActionBar$Tab,boolean) -> f
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    android.support.v7.widget.LinearLayoutCompat access$200(android.support.v7.widget.ScrollingTabContainerView) -> g
    android.support.v7.widget.ScrollingTabContainerView$TabView access$300(android.support.v7.widget.ScrollingTabContainerView,android.support.v7.app.ActionBar$Tab,boolean) -> h
    void <clinit>() -> <clinit>
android.support.v7.view.ViewPropertyAnimatorCompatSet$1 -> android.support.v7.view.j:
    boolean mProxyStarted -> a
    int mProxyEndCount -> b
    android.support.v7.view.ViewPropertyAnimatorCompatSet this$0 -> c
    void <init>(android.support.v7.view.ViewPropertyAnimatorCompatSet) -> <init>
    void onAnimationStart(android.view.View) -> a
    void onEnd() -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v7.widget.AppCompatTextHelperV17 -> android.support.v7.widget.fr:
    android.support.v7.widget.TintInfo mDrawableStartTint -> a
    android.support.v7.widget.TintInfo mDrawableEndTint -> b
    void <init>(android.widget.TextView) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> b
    void applyCompoundDrawablesTints() -> e
android.support.design.widget.ValueAnimatorCompat$AnimatorListenerAdapter -> android.support.design.widget.ap:
    void <init>() -> <init>
    void onAnimationStart(android.support.design.widget.ValueAnimatorCompat) -> b
    void onAnimationEnd(android.support.design.widget.ValueAnimatorCompat) -> a
    void onAnimationCancel(android.support.design.widget.ValueAnimatorCompat) -> c
android.support.v7.view.menu.MenuAdapter -> android.support.v7.view.menu.am:
    int ITEM_LAYOUT -> a
    android.support.v7.view.menu.MenuBuilder mAdapterMenu -> b
    int mExpandedIndex -> c
    boolean mForceShowIcon -> d
    boolean mOverflowOnly -> e
    android.view.LayoutInflater mInflater -> f
    void <init>(android.support.v7.view.menu.MenuBuilder,android.view.LayoutInflater,boolean) -> <init>
    void setForceShowIcon(boolean) -> a
    int getCount() -> getCount
    android.support.v7.view.menu.MenuBuilder getAdapterMenu() -> b
    android.support.v7.view.menu.MenuItemImpl getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> c
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
    void <clinit>() -> <clinit>
android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback -> android.support.v4.b.o:
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
android.support.design.widget.ViewOffsetHelper -> android.support.design.widget.at:
    android.view.View mView -> a
    int mLayoutTop -> b
    int mLayoutLeft -> c
    int mOffsetTop -> d
    int mOffsetLeft -> e
    void <init>(android.view.View) -> <init>
    void onViewLayout() -> a
    void updateOffsets() -> b
    boolean setTopAndBottomOffset(int) -> c
    boolean setLeftAndRightOffset(int) -> d
    int getTopAndBottomOffset() -> e
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.a.a.o:
    void <init>() -> <init>
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v7.widget.ShareActionProvider -> android.support.v7.widget.at:
    int mMaxShownActivityCount -> a
    android.support.v7.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener mOnMenuItemClickListener -> b
    android.content.Context mContext -> c
    java.lang.String mShareHistoryFileName -> d
    android.view.View onCreateActionView() -> a
    boolean hasSubMenu() -> b
    void onPrepareSubMenu(android.view.SubMenu) -> c
    void setShareIntent(android.content.Intent) -> d
    void updateIntent(android.content.Intent) -> e
    android.content.Context access$100(android.support.v7.widget.ShareActionProvider) -> f
    java.lang.String access$200(android.support.v7.widget.ShareActionProvider) -> g
    void access$300(android.support.v7.widget.ShareActionProvider,android.content.Intent) -> h
com.android.volley.NetworkResponse -> com.android.a.j:
    int statusCode -> a
    byte[] data -> b
    java.util.Map headers -> c
    boolean notModified -> d
    long networkTimeMs -> e
    void <init>(int,byte[],java.util.Map,boolean,long) -> <init>
    void <init>(byte[],java.util.Map) -> <init>
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.a.cq:
    void <init>() -> <init>
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback -> android.support.v7.widget.ek:
    void onWindowVisibilityChanged(int) -> a
    void showForSystem() -> b
    void hideForSystem() -> c
    void enableContentAnimations(boolean) -> d
    void onContentScrollStarted() -> e
    void onContentScrollStopped() -> f
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.a.a.g:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> <init>
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter$2 -> com.murrayc.galaxyzoo.app.syncadapter.g:
    com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter) -> <init>
    void onErrorResponse(com.android.volley.VolleyError) -> a
android.support.design.widget.ViewUtils -> android.support.design.widget.br:
    android.support.design.widget.ValueAnimatorCompat$Creator DEFAULT_ANIMATOR_CREATOR -> a
    void <init>() -> <init>
    android.support.design.widget.ValueAnimatorCompat createAnimator() -> a
    boolean objectEquals(java.lang.Object,java.lang.Object) -> b
    void <clinit>() -> <clinit>
android.support.graphics.drawable.PathParser$PathDataNode -> android.support.a.a.n:
    char type -> a
    float[] params -> b
    void <init>(char,float[]) -> <init>
    void <init>(android.support.graphics.drawable.PathParser$PathDataNode) -> <init>
    void nodesToPath(android.support.graphics.drawable.PathParser$PathDataNode[],android.graphics.Path) -> a
    void addCommand(android.graphics.Path,float[],char,char,float[]) -> b
    void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> c
    void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> d
    void <init>(android.support.graphics.drawable.PathParser$PathDataNode,android.support.graphics.drawable.PathParser$1) -> <init>
    void <init>(char,float[],android.support.graphics.drawable.PathParser$1) -> <init>
android.support.v7.widget.AppCompatDrawableManager -> android.support.v7.widget.dx:
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> a
    android.support.v7.widget.AppCompatDrawableManager INSTANCE -> b
    android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache COLOR_FILTER_CACHE -> c
    int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL -> d
    int[] TINT_COLOR_CONTROL_NORMAL -> e
    int[] COLORFILTER_COLOR_CONTROL_ACTIVATED -> f
    int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY -> g
    int[] TINT_COLOR_CONTROL_STATE_LIST -> h
    int[] TINT_CHECKABLE_BUTTON_LIST -> i
    java.util.WeakHashMap mTintLists -> j
    android.support.v4.util.ArrayMap mDelegates -> k
    android.util.SparseArray mKnownDrawableIdTags -> l
    java.lang.Object mDrawableCacheLock -> m
    java.util.WeakHashMap mDrawableCaches -> n
    android.util.TypedValue mTypedValue -> o
    boolean mHasCheckedVectorDrawableSetup -> p
    void <init>() -> <init>
    android.support.v7.widget.AppCompatDrawableManager get() -> a
    void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager) -> b
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> c
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> d
    void onConfigurationChanged(android.content.Context) -> e
    long createCacheKey(android.util.TypedValue) -> f
    android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> g
    android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> h
    android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> i
    android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> j
    boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> k
    android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,android.support.v7.widget.VectorEnabledTintResources,int) -> l
    boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> m
    void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate) -> n
    boolean arrayContains(int[],int) -> o
    android.graphics.PorterDuff$Mode getTintMode(int) -> p
    android.content.res.ColorStateList getTintList(android.content.Context,int) -> q
    android.content.res.ColorStateList getTintList(android.content.Context,int,android.content.res.ColorStateList) -> r
    android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> s
    void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> t
    android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context,android.content.res.ColorStateList) -> u
    android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context,android.content.res.ColorStateList) -> v
    android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context,android.content.res.ColorStateList) -> w
    android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int,android.content.res.ColorStateList) -> x
    void tintDrawable(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo,int[]) -> y
    android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> z
    android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> aa
    void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> ab
    void checkVectorDrawableSetup(android.content.Context) -> ac
    boolean isVectorDrawable(android.graphics.drawable.Drawable) -> ad
    void <clinit>() -> <clinit>
android.support.v4.content.ContextCompatApi23 -> android.support.v4.d.m:
    void <init>() -> <init>
    android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> a
android.support.v7.widget.ViewInfoStore$ProcessCallback -> android.support.v7.widget.ac:
    void processDisappeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    void processAppeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    void processPersistent(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
    void unused(android.support.v7.widget.RecyclerView$ViewHolder) -> d
com.murrayc.galaxyzoo.app.LoginActivity$4 -> com.murrayc.galaxyzoo.app.bc:
    com.murrayc.galaxyzoo.app.LoginActivity this$0 -> a
    boolean val$show -> b
    void <init>(com.murrayc.galaxyzoo.app.LoginActivity,boolean) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.squareup.leakcanary.RefWatcher -> com.squareup.b.b:
    com.squareup.leakcanary.RefWatcher DISABLED -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.design.widget.ValueAnimatorCompatImplGingerbread$1 -> android.support.design.widget.av:
    android.support.design.widget.ValueAnimatorCompatImplGingerbread this$0 -> a
    void <init>(android.support.design.widget.ValueAnimatorCompatImplGingerbread) -> <init>
    void run() -> run
android.support.v7.app.AppCompatDelegateImplV9$PanelMenuPresenterCallback -> android.support.v7.c.bm:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> b
    void <init>(android.support.v7.app.AppCompatDelegateImplV9,android.support.v7.app.AppCompatDelegateImplV9$1) -> <init>
com.android.volley.toolbox.DiskBasedCache$CacheHeader -> com.android.a.a.f:
    long size -> a
    java.lang.String key -> b
    java.lang.String etag -> c
    long serverDate -> d
    long lastModified -> e
    long ttl -> f
    long softTtl -> g
    java.util.Map responseHeaders -> h
    void <init>() -> <init>
    void <init>(java.lang.String,com.android.volley.Cache$Entry) -> <init>
    com.android.volley.toolbox.DiskBasedCache$CacheHeader readHeader(java.io.InputStream) -> a
    com.android.volley.Cache$Entry toCacheEntry(byte[]) -> b
    boolean writeHeader(java.io.OutputStream) -> c
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl -> android.support.v4.a.dq:
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> a
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> e
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> f
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> g
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> b
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> h
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> c
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> d
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> i
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> j
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> k
android.support.v7.widget.LinearLayoutCompat -> android.support.v7.widget.cs:
    boolean mBaselineAligned -> a
    int mBaselineAlignedChildIndex -> b
    int mBaselineChildTop -> c
    int mOrientation -> d
    int mGravity -> e
    int mTotalLength -> f
    float mWeightSum -> g
    boolean mUseLargestChild -> h
    int[] mMaxAscent -> i
    int[] mMaxDescent -> j
    android.graphics.drawable.Drawable mDivider -> k
    int mDividerWidth -> l
    int mDividerHeight -> m
    int mShowDividers -> n
    int mDividerPadding -> o
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setShowDividers(int) -> setShowDividers
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    int getShowDividers() -> getShowDividers
    android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    int getDividerPadding() -> getDividerPadding
    int getDividerWidth() -> getDividerWidth
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> a
    void drawDividersHorizontal(android.graphics.Canvas) -> b
    void drawHorizontalDivider(android.graphics.Canvas,int) -> c
    void drawVerticalDivider(android.graphics.Canvas,int) -> d
    void setBaselineAligned(boolean) -> setBaselineAligned
    void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    int getBaseline() -> getBaseline
    int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    android.view.View getVirtualChildAt(int) -> e
    int getVirtualChildCount() -> getVirtualChildCount
    float getWeightSum() -> getWeightSum
    void setWeightSum(float) -> setWeightSum
    void onMeasure(int,int) -> onMeasure
    boolean hasDividerBeforeChildAt(int) -> f
    void measureVertical(int,int) -> g
    void forceUniformWidth(int,int) -> h
    void measureHorizontal(int,int) -> i
    void forceUniformHeight(int,int) -> j
    int getChildrenSkipCount(android.view.View,int) -> k
    int measureNullChild(int) -> m
    void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> n
    int getLocationOffset(android.view.View) -> o
    int getNextLocationOffset(android.view.View) -> p
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layoutVertical(int,int,int,int) -> q
    void layoutHorizontal(int,int,int,int) -> r
    void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void setGravity(int) -> setGravity
    void setHorizontalGravity(int) -> setHorizontalGravity
    void setVerticalGravity(int) -> setVerticalGravity
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.v4.view.WindowInsetsCompat$1 -> android.support.v4.a.dk:
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.a.a.al:
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> a
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> b
android.support.design.widget.Snackbar$SnackbarLayout$1 -> android.support.design.widget.cv:
    android.support.design.widget.Snackbar$SnackbarLayout this$0 -> a
    void <init>(android.support.design.widget.Snackbar$SnackbarLayout) -> <init>
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
android.support.v7.view.menu.ActionMenuItem -> android.support.v7.view.menu.h:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.content.Context mContext -> l
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> m
    int mFlags -> n
    void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    android.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.view.MenuItem setVisible(boolean) -> setVisible
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> setActionView
    android.support.v4.view.ActionProvider getSupportActionProvider() -> t
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> u
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> v
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
android.support.v7.widget.DecorToolbar -> android.support.v7.widget.bf:
    android.view.ViewGroup getViewGroup() -> c
    android.content.Context getContext() -> d
    boolean hasExpandedActionView() -> e
    void collapseActionView() -> f
    void setWindowCallback(android.view.Window$Callback) -> g
    void setWindowTitle(java.lang.CharSequence) -> h
    java.lang.CharSequence getTitle() -> i
    void initProgress() -> m
    void initIndeterminateProgress() -> n
    void setIcon(int) -> o
    void setIcon(android.graphics.drawable.Drawable) -> p
    void setLogo(int) -> q
    boolean canShowOverflowMenu() -> t
    boolean isOverflowMenuShowing() -> u
    boolean isOverflowMenuShowPending() -> v
    boolean showOverflowMenu() -> w
    boolean hideOverflowMenu() -> x
    void setMenuPrepared() -> y
    void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> z
    void dismissPopupMenus() -> aa
    int getDisplayOptions() -> ab
    void setDisplayOptions(int) -> ac
    void setEmbeddedTabView(android.support.v7.widget.ScrollingTabContainerView) -> ad
    void setCollapsible(boolean) -> ae
    void setHomeButtonEnabled(boolean) -> af
    int getNavigationMode() -> ag
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> ai
    void setVisibility(int) -> ao
    int getVisibility() -> ap
    void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback) -> aq
    android.view.Menu getMenu() -> ar
com.murrayc.galaxyzoo.app.QuestionHelpFragment$1 -> com.murrayc.galaxyzoo.app.bn:
    com.murrayc.galaxyzoo.app.QuestionHelpFragment this$0 -> a
    com.murrayc.galaxyzoo.app.DecisionTree$BaseButton val$answer -> b
    int val$answerIndex -> c
    void <init>(com.murrayc.galaxyzoo.app.QuestionHelpFragment,com.murrayc.galaxyzoo.app.DecisionTree$BaseButton,int) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.view.menu.ListMenuPresenter$MenuAdapter -> android.support.v7.view.menu.x:
    int mExpandedIndex -> a
    android.support.v7.view.menu.ListMenuPresenter this$0 -> b
    void <init>(android.support.v7.view.menu.ListMenuPresenter) -> <init>
    int getCount() -> getCount
    android.support.v7.view.menu.MenuItemImpl getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.d.j:
    void <init>() -> <init>
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.a.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    void <init>(java.lang.Object) -> <init>
    java.lang.Object getInfo() -> a
    int getActions() -> b
    void addAction(int) -> c
    void getBoundsInParent(android.graphics.Rect) -> d
    void getBoundsInScreen(android.graphics.Rect) -> e
    boolean isCheckable() -> f
    void setCheckable(boolean) -> g
    boolean isChecked() -> h
    void setChecked(boolean) -> i
    boolean isFocusable() -> j
    boolean isFocused() -> k
    boolean isSelected() -> l
    boolean isClickable() -> m
    boolean isLongClickable() -> n
    boolean isEnabled() -> o
    boolean isPassword() -> p
    boolean isScrollable() -> q
    void setScrollable(boolean) -> r
    java.lang.CharSequence getPackageName() -> s
    java.lang.CharSequence getClassName() -> t
    void setClassName(java.lang.CharSequence) -> u
    java.lang.CharSequence getText() -> v
    java.lang.CharSequence getContentDescription() -> w
    java.lang.String getViewIdResourceName() -> x
    void setCollectionInfo(java.lang.Object) -> y
    void setCollectionItemInfo(java.lang.Object) -> z
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> aa
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl access$000() -> ab
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.a.a.d:
    void <init>() -> <init>
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v7.app.AppCompatDelegateImplV9$3 -> android.support.v7.c.q:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    void onFitSystemWindows(android.graphics.Rect) -> a
android.support.v7.widget.ListPopupWindow$ListSelectorHider -> android.support.v7.widget.cm:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    void run() -> run
    void <init>(android.support.v7.widget.ListPopupWindow,android.support.v7.widget.ListPopupWindow$1) -> <init>
android.support.v7.widget.AppCompatPopupWindow -> android.support.v7.widget.ej:
    boolean COMPAT_OVERLAP_ANCHOR -> a
    boolean mOverlapAnchor -> b
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void init(android.content.Context,android.util.AttributeSet,int,int) -> a
    void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    void update(android.view.View,int,int,int,int) -> update
    void wrapOnScrollChangedListener(android.widget.PopupWindow) -> b
    void setSupportOverlapAnchor(boolean) -> c
    void <clinit>() -> <clinit>
com.android.volley.CacheDispatcher -> com.android.a.r:
    boolean DEBUG -> a
    java.util.concurrent.BlockingQueue mCacheQueue -> b
    java.util.concurrent.BlockingQueue mNetworkQueue -> c
    com.android.volley.Cache mCache -> d
    com.android.volley.ResponseDelivery mDelivery -> e
    boolean mQuit -> f
    void <init>(java.util.concurrent.BlockingQueue,java.util.concurrent.BlockingQueue,com.android.volley.Cache,com.android.volley.ResponseDelivery) -> <init>
    void quit() -> a
    void run() -> run
    java.util.concurrent.BlockingQueue access$000(com.android.volley.CacheDispatcher) -> b
    void <clinit>() -> <clinit>
com.android.volley.DefaultRetryPolicy -> com.android.a.w:
    int mCurrentTimeoutMs -> a
    int mCurrentRetryCount -> b
    int mMaxNumRetries -> c
    float mBackoffMultiplier -> d
    void <init>() -> <init>
    void <init>(int,int,float) -> <init>
    int getCurrentTimeout() -> a
    int getCurrentRetryCount() -> b
    void retry(com.android.volley.VolleyError) -> c
    boolean hasAttemptRemaining() -> c
android.support.v7.app.AppCompatDelegateImplV14$AppCompatWindowCallbackV14 -> android.support.v7.c.o:
    android.support.v7.app.AppCompatDelegateImplV14 this$0 -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplV14,android.view.Window$Callback) -> <init>
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> a
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.j:
    void <init>() -> <init>
    float getCurrVelocity(java.lang.Object) -> a
com.murrayc.galaxyzoo.app.ListCursorAdapter -> com.murrayc.galaxyzoo.app.a:
    android.content.Context mContext -> a
    android.database.Cursor mCursor -> b
    com.murrayc.galaxyzoo.app.ListCursorAdapter$CursorObserver mDataSetObserver -> c
    com.murrayc.galaxyzoo.app.ListCursorAdapter$OnItemClickedListener mListener -> d
    void <init>(android.content.Context,com.murrayc.galaxyzoo.app.ListCursorAdapter$OnItemClickedListener) -> <init>
    void changeCursor(android.database.Cursor) -> a
    android.database.Cursor getItem(int) -> b
    int getItemCount() -> c
    void onBindViewHolder(com.murrayc.galaxyzoo.app.ListCursorAdapter$ViewHolder,int) -> d
    com.murrayc.galaxyzoo.app.ListCursorAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> e
    void onViewRecycled(com.murrayc.galaxyzoo.app.ListCursorAdapter$ViewHolder) -> f
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> g
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> e
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> h
    com.murrayc.galaxyzoo.app.ListCursorAdapter$OnItemClickedListener -get0(com.murrayc.galaxyzoo.app.ListCursorAdapter) -> i
android.support.v4.util.Pools$SimplePool -> android.support.v4.c.d:
    java.lang.Object[] mPool -> a
    int mPoolSize -> b
    void <init>(int) -> <init>
    java.lang.Object acquire() -> a
    boolean release(java.lang.Object) -> b
    boolean isInPool(java.lang.Object) -> c
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.p:
    android.support.v4.util.MapCollections this$0 -> a
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v7.widget.ScrollingTabContainerView$TabAdapter -> android.support.v7.widget.ds:
    android.support.v7.widget.ScrollingTabContainerView this$0 -> a
    void <init>(android.support.v7.widget.ScrollingTabContainerView) -> <init>
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void <init>(android.support.v7.widget.ScrollingTabContainerView,android.support.v7.widget.ScrollingTabContainerView$1) -> <init>
android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable -> android.support.v7.widget.ex:
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup mPopup -> a
    android.support.v7.widget.ActionMenuPresenter this$0 -> b
    void <init>(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    void run() -> run
com.murrayc.galaxyzoo.app.ListCursorAdapter$ImageLoadedCallback -> com.murrayc.galaxyzoo.app.d:
    java.lang.ref.WeakReference contextReference -> a
    java.lang.String itemId -> b
    int position -> c
    java.lang.ref.WeakReference viewHolderReference -> d
    void <init>(android.content.Context,com.murrayc.galaxyzoo.app.ListCursorAdapter$ViewHolder,int,java.lang.String) -> <init>
    com.murrayc.galaxyzoo.app.ListCursorAdapter$ViewHolder getValidViewHolder() -> a
    void onError() -> b
    void onSuccess() -> c
com.murrayc.galaxyzoo.app.LoginActivity$5 -> com.murrayc.galaxyzoo.app.bd:
    com.murrayc.galaxyzoo.app.LoginActivity this$0 -> a
    boolean val$show -> b
    void <init>(com.murrayc.galaxyzoo.app.LoginActivity,boolean) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.widget.BottomSheetBehavior$SavedState -> android.support.design.widget.ch:
    int state -> a
    android.os.Parcelable$Creator CREATOR -> b
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable,int) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v7.widget.RecyclerView$RecyclerViewDataObserver -> android.support.v7.widget.v:
    android.support.v7.widget.RecyclerView this$0 -> a
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void onChanged() -> a
    void <init>(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$1) -> <init>
com.android.volley.VolleyError -> com.android.a.k:
    com.android.volley.NetworkResponse networkResponse -> a
    long networkTimeMs -> b
    void <init>() -> <init>
    void <init>(com.android.volley.NetworkResponse) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <init>(java.lang.Throwable) -> <init>
    void setNetworkTimeMs(long) -> a
android.support.design.widget.AppBarLayout$Behavior -> android.support.design.widget.AppBarLayout$Behavior:
    int mOffsetDelta -> a
    boolean mSkipNestedPreScroll -> b
    boolean mWasNestedFlung -> c
    android.support.design.widget.ValueAnimatorCompat mOffsetAnimator -> d
    int mOffsetToChildIndexOnLayout -> e
    boolean mOffsetToChildIndexOnLayoutIsMinHeight -> f
    float mOffsetToChildIndexOnLayoutPerc -> g
    java.lang.ref.WeakReference mLastNestedScrollingChildRef -> h
    android.support.design.widget.AppBarLayout$Behavior$DragCallback mOnDragCallback -> i
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,android.view.View,int) -> a
    void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int,int,int[]) -> b
    void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int,int,int,int) -> c
    void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View) -> d
    boolean onNestedFling(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,float,float,boolean) -> e
    void animateOffsetTo(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,float) -> f
    void animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int) -> g
    int getChildIndexOnOffset(android.support.design.widget.AppBarLayout,int) -> h
    void snapToChildIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> i
    boolean checkFlag(int,int) -> j
    boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int,int) -> k
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int) -> l
    boolean canDragView(android.support.design.widget.AppBarLayout) -> m
    void onFlingFinished(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> n
    int getMaxDragOffset(android.support.design.widget.AppBarLayout) -> o
    int getScrollRangeForDragFling(android.support.design.widget.AppBarLayout) -> p
    int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int) -> q
    int interpolateOffset(android.support.design.widget.AppBarLayout,int) -> r
    void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int) -> s
    boolean shouldJumpElevationState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> t
    android.view.View getAppBarChildOnOffset(android.support.design.widget.AppBarLayout,int) -> u
    int getTopBottomOffsetForScrollingSibling() -> d
    android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> v
    void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.os.Parcelable) -> w
    int getScrollRangeForDragFling(android.view.View) -> j
    int getMaxDragOffset(android.view.View) -> i
    boolean canDragView(android.view.View) -> h
    void onFlingFinished(android.support.design.widget.CoordinatorLayout,android.view.View) -> g
    int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int) -> c
    int getTopAndBottomOffset() -> i
    boolean setTopAndBottomOffset(int) -> j
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> k
    android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View) -> a
    void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> b
    boolean onNestedFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean) -> i
    void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> d
    void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> h
    void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> e
    boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> c
    boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> h
    int access$1100(android.support.design.widget.AppBarLayout$Behavior) -> x
android.support.v7.widget.RecyclerView$Recycler -> android.support.v7.widget.t:
    java.util.ArrayList mAttachedScrap -> a
    java.util.ArrayList mChangedScrap -> b
    java.util.ArrayList mCachedViews -> c
    java.util.List mUnmodifiableAttachedScrap -> d
    int mViewCacheMax -> e
    android.support.v7.widget.RecyclerView$RecycledViewPool mRecyclerPool -> f
    android.support.v7.widget.RecyclerView$ViewCacheExtension mViewCacheExtension -> g
    android.support.v7.widget.RecyclerView this$0 -> h
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void clear() -> a
    void setViewCacheSize(int) -> b
    java.util.List getScrapList() -> c
    boolean validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder) -> d
    int convertPreLayoutPositionToPostLayout(int) -> e
    android.view.View getViewForPosition(int) -> f
    android.view.View getViewForPosition(int,boolean) -> g
    void attachAccessibilityDelegate(android.view.View) -> h
    void invalidateDisplayListInt(android.support.v7.widget.RecyclerView$ViewHolder) -> i
    void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> j
    void recycleView(android.view.View) -> k
    void recycleAndClearCachedViews() -> l
    void recycleCachedViewAt(int) -> m
    void recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder) -> n
    void addViewHolderToRecycledViewPool(android.support.v7.widget.RecyclerView$ViewHolder) -> o
    void quickRecycleScrapView(android.view.View) -> p
    void scrapView(android.view.View) -> q
    void unscrapView(android.support.v7.widget.RecyclerView$ViewHolder) -> r
    int getScrapCount() -> s
    android.view.View getScrapViewAt(int) -> t
    void clearScrap() -> u
    android.support.v7.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> v
    android.support.v7.widget.RecyclerView$ViewHolder getScrapViewForPosition(int,int,boolean) -> w
    android.support.v7.widget.RecyclerView$ViewHolder getScrapViewForId(long,int,boolean) -> x
    void dispatchViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> y
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean) -> z
    void offsetPositionRecordsForMove(int,int) -> aa
    void offsetPositionRecordsForInsert(int,int) -> ab
    void offsetPositionRecordsForRemove(int,int,boolean) -> ac
    void setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension) -> ad
    void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool) -> ae
    android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> af
    void viewRangeUpdate(int,int) -> ag
    void setAdapterPositionsAsUnknown() -> ah
    void markKnownViewsInvalid() -> ai
    void clearOldPositions() -> aj
    void markItemDecorInsetsDirty() -> ak
    java.util.ArrayList access$2900(android.support.v7.widget.RecyclerView$Recycler) -> al
android.support.v7.widget.LinearLayoutManager -> android.support.v7.widget.LinearLayoutManager:
    int mOrientation -> a
    android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState -> b
    android.support.v7.widget.OrientationHelper mOrientationHelper -> c
    boolean mLastStackFromEnd -> d
    boolean mReverseLayout -> e
    boolean mShouldReverseLayout -> f
    boolean mStackFromEnd -> g
    boolean mSmoothScrollbarEnabled -> h
    int mPendingScrollPosition -> i
    int mPendingScrollPositionOffset -> j
    boolean mRecycleChildrenOnDetach -> k
    android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState -> l
    android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo -> m
    android.support.v7.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult -> n
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,int,boolean) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> t
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> p
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dk
    android.os.Parcelable onSaveInstanceState() -> dc
    void onRestoreInstanceState(android.os.Parcelable) -> dd
    boolean canScrollHorizontally() -> z
    boolean canScrollVertically() -> aa
    void setStackFromEnd(boolean) -> a
    int getOrientation() -> a
    void setOrientation(int) -> b
    void resolveShouldLayoutReverse() -> c
    void setReverseLayout(boolean) -> d
    android.view.View findViewByPosition(int) -> ao
    int getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State) -> e
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> r
    void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> s
    void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int) -> h
    void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int) -> f
    void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> g
    boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> h
    boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> i
    int fixLayoutEndGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> j
    int fixLayoutStartGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> k
    void updateLayoutStateToFillEnd(android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> l
    void updateLayoutStateToFillEnd(int,int) -> m
    void updateLayoutStateToFillStart(android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> n
    void updateLayoutStateToFillStart(int,int) -> o
    boolean isLayoutRTL() -> p
    void ensureLayoutState() -> r
    android.support.v7.widget.LinearLayoutManager$LayoutState createLayoutState() -> s
    void scrollToPosition(int) -> ab
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> x
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> y
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> ct
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> cw
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> cs
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> cv
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> cu
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> cx
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State) -> t
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State) -> u
    int computeScrollRange(android.support.v7.widget.RecyclerView$State) -> v
    void updateLayoutState(int,int,boolean,android.support.v7.widget.RecyclerView$State) -> w
    boolean resolveIsInfinite() -> x
    int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> z
    void assertNotInLayoutOrScroll(java.lang.String) -> g
    void recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int) -> aa
    void recycleViewsFromStart(android.support.v7.widget.RecyclerView$Recycler,int) -> ab
    void recycleViewsFromEnd(android.support.v7.widget.RecyclerView$Recycler,int) -> ac
    void recycleByLayoutState(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState) -> ad
    int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean) -> ae
    void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult) -> p
    boolean shouldMeasureTwice() -> dz
    int convertFocusDirectionToLayoutDirection(int) -> af
    android.view.View getChildClosestToStart() -> ag
    android.view.View getChildClosestToEnd() -> ah
    android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> ai
    android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> aj
    android.view.View findReferenceChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> ak
    android.view.View findReferenceChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> al
    android.view.View findFirstReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> am
    android.view.View findLastReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> an
    android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int) -> l
    int findFirstVisibleItemPosition() -> ao
    int findLastVisibleItemPosition() -> ap
    android.view.View findOneVisibleChild(int,int,boolean,boolean) -> aq
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> cf
    boolean supportsPredictiveItemAnimations() -> i
android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper -> android.support.v4.a.av:
    android.support.v4.view.LayoutInflaterFactory mDelegateFactory -> a
    void <init>(android.support.v4.view.LayoutInflaterFactory) -> <init>
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    java.lang.String toString() -> toString
android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener -> android.support.v7.widget.ae:
    void onAnimationsFinished() -> a
android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo -> android.support.v7.widget.gj:
    int mPosition -> a
    int mOffset -> b
    boolean mLayoutFromEnd -> c
    boolean mInvalidateOffsets -> d
    boolean mValid -> e
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> f
    void <init>(android.support.v7.widget.StaggeredGridLayoutManager) -> <init>
    void reset() -> a
    void assignCoordinateFromPadding() -> b
    void assignCoordinateFromPadding(int) -> c
android.support.v4.app.BackStackState -> android.support.v4.b.br:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    java.util.ArrayList mSharedElementSourceNames -> j
    java.util.ArrayList mSharedElementTargetNames -> k
    android.os.Parcelable$Creator CREATOR -> l
    void <init>(android.support.v4.app.BackStackRecord) -> <init>
    void <init>(android.os.Parcel) -> <init>
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState -> android.support.v7.c.ac:
    int featureId -> a
    int background -> b
    int gravity -> c
    int x -> d
    int y -> e
    int windowAnimations -> f
    android.view.ViewGroup decorView -> g
    android.view.View shownPanelView -> h
    android.view.View createdPanelView -> i
    android.support.v7.view.menu.MenuBuilder menu -> j
    android.support.v7.view.menu.ListMenuPresenter listMenuPresenter -> k
    android.content.Context listPresenterContext -> l
    boolean isPrepared -> m
    boolean isHandled -> n
    boolean isOpen -> o
    boolean qwertyMode -> p
    boolean refreshDecorView -> q
    boolean refreshMenuContent -> r
    android.os.Bundle frozenActionViewState -> s
    void <init>(int) -> <init>
    boolean hasPanelItems() -> a
    void setStyle(android.content.Context) -> b
    void setMenu(android.support.v7.view.menu.MenuBuilder) -> c
    android.support.v7.view.menu.MenuView getListMenuView(android.support.v7.view.menu.MenuPresenter$Callback) -> d
android.support.v7.view.menu.ListMenuPresenter -> android.support.v7.view.menu.q:
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> b
    android.support.v7.view.menu.MenuBuilder mMenu -> c
    android.support.v7.view.menu.ExpandedMenuView mMenuView -> d
    int mItemIndexOffset -> e
    int mThemeRes -> f
    int mItemLayoutRes -> g
    android.support.v7.view.menu.MenuPresenter$Callback mCallback -> h
    android.support.v7.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> i
    void <init>(android.content.Context,int) -> <init>
    void <init>(int,int) -> <init>
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> a
    android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> h
    android.widget.ListAdapter getAdapter() -> a
    void updateMenuView(boolean) -> b
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> c
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> d
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> e
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean flagActionItems() -> f
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> g
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> h
    int access$000(android.support.v7.view.menu.ListMenuPresenter) -> b
com.murrayc.galaxyzoo.app.ExampleViewerActivity -> com.murrayc.galaxyzoo.app.ExampleViewerActivity:
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
android.support.v4.view.ViewPropertyAnimatorCompatJB$1 -> android.support.v4.a.bk:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> a
    android.view.View val$view -> b
    void <init>(android.support.v4.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.app.AppOpsManagerCompat$AppOpsManager23 -> android.support.v4.b.bz:
    void <init>() -> <init>
    java.lang.String permissionToOp(java.lang.String) -> a
    int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> b
    void <init>(android.support.v4.app.AppOpsManagerCompat$1) -> <init>
android.support.v4.app.SharedElementCallback -> android.support.v4.b.g:
    int MAX_IMAGE_SIZE -> a
    void <init>() -> <init>
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> a
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> b
    void onMapSharedElements(java.util.List,java.util.Map) -> c
    void <clinit>() -> <clinit>
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton -> android.support.v7.widget.cn:
    float[] mTempPts -> a
    android.support.v7.widget.ActionMenuPresenter this$0 -> b
    void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context) -> <init>
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> a
    boolean needsDividerAfter() -> b
    boolean setFrame(int,int,int,int) -> setFrame
android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl -> android.support.v4.a.dx:
    void <init>() -> <init>
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.j:
    void <init>() -> <init>
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v7.view.menu.CascadingMenuPopup$1 -> android.support.v7.view.menu.n:
    android.support.v7.view.menu.CascadingMenuPopup this$0 -> a
    void <init>(android.support.v7.view.menu.CascadingMenuPopup) -> <init>
    void onGlobalLayout() -> onGlobalLayout
com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter$1 -> com.murrayc.galaxyzoo.app.syncadapter.f:
    com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter) -> <init>
    void onResponse(java.lang.String) -> a
    void onResponse(java.lang.Object) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.a.a.f:
    void <init>() -> <init>
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollX(java.lang.Object,int) -> c
    void setScrollY(java.lang.Object,int) -> d
    void setScrollable(java.lang.Object,boolean) -> e
    void setToIndex(java.lang.Object,int) -> f
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl -> android.support.v4.a.a.ap:
    void <init>() -> <init>
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.b.ar:
    android.view.View val$sceneRoot -> a
    android.transition.Transition val$enterTransition -> b
    java.util.ArrayList val$enteringViews -> c
    android.transition.Transition val$exitTransition -> d
    java.util.ArrayList val$exitingViews -> e
    android.transition.Transition val$sharedElementTransition -> f
    java.util.ArrayList val$sharedElementTargets -> g
    java.util.Map val$renamedViews -> h
    java.util.ArrayList val$hiddenViews -> i
    android.transition.Transition val$overallTransition -> j
    android.view.View val$nonExistentView -> k
    void <init>(android.view.View,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,java.util.Map,java.util.ArrayList,android.transition.Transition,android.view.View) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.design.widget.HeaderScrollingViewBehavior -> android.support.design.widget.aw:
    android.graphics.Rect mTempRect1 -> a
    android.graphics.Rect mTempRect2 -> b
    int mVerticalLayoutGap -> c
    int mOverlayTop -> d
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> h
    void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> a
    float getOverlapRatioForOffset(android.view.View) -> d
    int getOverlapPixelsForOffset(android.view.View) -> b
    int resolveGravity(int) -> c
    android.view.View findFirstDependency(java.util.List) -> f
    int getScrollRange(android.view.View) -> g
    int getVerticalLayoutGap() -> d
    void setOverlayTop(int) -> e
    int getOverlayTop() -> f
android.support.design.widget.CheckableImageButton$1 -> android.support.design.widget.ab:
    android.support.design.widget.CheckableImageButton this$0 -> a
    void <init>(android.support.design.widget.CheckableImageButton) -> <init>
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> b
android.support.v7.widget.AppCompatImageView -> android.support.v7.widget.fa:
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    android.support.v7.widget.AppCompatImageHelper mImageHelper -> b
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setImageResource(int) -> setImageResource
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    boolean hasOverlappingRendering() -> hasOverlappingRendering
android.support.v7.view.menu.MenuView -> android.support.v7.view.menu.f:
    void initialize(android.support.v7.view.menu.MenuBuilder) -> a
android.support.design.widget.ThemeUtils -> android.support.design.widget.az:
    int[] APPCOMPAT_CHECK_ATTRS -> a
    void <init>() -> <init>
    void checkAppCompatTheme(android.content.Context) -> a
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.b.ao:
    android.graphics.Rect val$epicenter -> a
    void <init>(android.graphics.Rect) -> <init>
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v7.app.AppCompatDelegateImplV9$ListMenuDecorView -> android.support.v7.c.z:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplV9,android.content.Context) -> <init>
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setBackgroundResource(int) -> setBackgroundResource
    boolean isOutOfBounds(int,int) -> a
android.support.graphics.drawable.PathParser$1 -> android.support.a.a.j:
android.support.design.widget.FloatingActionButton$ShadowDelegateImpl -> android.support.design.widget.cc:
    android.support.design.widget.FloatingActionButton this$0 -> a
    void <init>(android.support.design.widget.FloatingActionButton) -> <init>
    float getRadius() -> a
    void setShadowPadding(int,int,int,int) -> b
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> c
    boolean isCompatPaddingEnabled() -> d
    void <init>(android.support.design.widget.FloatingActionButton,android.support.design.widget.FloatingActionButton$1) -> <init>
com.murrayc.galaxyzoo.app.provider.HttpUtils -> com.murrayc.galaxyzoo.app.provider.a:
    void <init>() -> <init>
    boolean cacheUriToFileSync(android.content.Context,com.android.volley.RequestQueue,java.lang.String,java.lang.String) -> a
    java.lang.String generateAuthorizationHeader(java.lang.String,java.lang.String) -> b
    boolean getNetworkIsConnected(android.content.Context,boolean) -> c
    java.lang.String getPostDataBytes(java.util.List) -> d
    java.lang.String getUserAgent() -> e
    void parseGetFileResponseContent(android.content.Context,byte[],java.lang.String) -> f
    void throwIfNoNetwork(android.content.Context) -> g
    void throwIfNoNetwork(android.content.Context,boolean) -> h
    void -wrap0(android.content.Context,byte[],java.lang.String) -> i
com.murrayc.galaxyzoo.app.provider.client.ZooniverseClient$LoginException -> com.murrayc.galaxyzoo.app.provider.a.f:
    void <init>(java.lang.String,java.lang.Exception) -> <init>
com.murrayc.galaxyzoo.app.syncadapter.Authenticator -> com.murrayc.galaxyzoo.app.syncadapter.a:
    android.content.Context mContext -> a
    void <init>(android.content.Context) -> <init>
    android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle) -> addAccount
    android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle) -> confirmCredentials
    android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse,java.lang.String) -> editProperties
    android.os.Bundle generateIntentBundle(android.content.Intent) -> a
    android.content.Intent generateLoginIntent(android.accounts.AccountAuthenticatorResponse) -> b
    android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle) -> getAuthToken
    java.lang.String getAuthTokenLabel(java.lang.String) -> getAuthTokenLabel
    android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String[]) -> hasFeatures
    android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle) -> updateCredentials
android.support.design.widget.ShadowDrawableWrapper -> android.support.design.widget.x:
    double COS_45 -> a
    android.graphics.Paint mCornerShadowPaint -> b
    android.graphics.Paint mEdgeShadowPaint -> c
    android.graphics.RectF mContentBounds -> d
    float mCornerRadius -> e
    android.graphics.Path mCornerShadowPath -> f
    float mMaxShadowSize -> g
    float mRawMaxShadowSize -> h
    float mShadowSize -> i
    float mRawShadowSize -> j
    boolean mDirty -> k
    int mShadowStartColor -> l
    int mShadowMiddleColor -> m
    int mShadowEndColor -> n
    boolean mAddPaddingForCorners -> o
    float mRotation -> p
    boolean mPrintedShadowClipWarning -> q
    int toEven(float) -> a
    void setAlpha(int) -> setAlpha
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setShadowSize(float,float) -> b
    boolean getPadding(android.graphics.Rect) -> getPadding
    float calculateVerticalPadding(float,float,boolean) -> c
    float calculateHorizontalPadding(float,float,boolean) -> d
    int getOpacity() -> getOpacity
    void draw(android.graphics.Canvas) -> draw
    void setRotation(float) -> e
    void drawShadow(android.graphics.Canvas) -> f
    void buildShadowCorners() -> g
    void buildComponents(android.graphics.Rect) -> h
    void setShadowSize(float) -> i
    float getShadowSize() -> j
    void <clinit>() -> <clinit>
com.murrayc.galaxyzoo.app.provider.HttpUtils$NoNetworkException -> com.murrayc.galaxyzoo.app.provider.c:
    boolean wifiOnly -> a
    void <init>(boolean) -> <init>
    boolean getWifiOnly() -> a
android.support.v4.widget.ListViewCompatKitKat -> android.support.v4.widget.l:
    void <init>() -> <init>
    void scrollListBy(android.widget.ListView,int) -> a
android.support.design.R$dimen -> android.support.design.c:
    int abc_action_bar_content_inset_material -> abc_action_bar_content_inset_material
    int abc_action_bar_content_inset_with_nav -> abc_action_bar_content_inset_with_nav
    int abc_action_bar_default_height_material -> abc_action_bar_default_height_material
    int abc_action_bar_default_padding_end_material -> abc_action_bar_default_padding_end_material
    int abc_action_bar_default_padding_start_material -> abc_action_bar_default_padding_start_material
    int abc_action_bar_elevation_material -> abc_action_bar_elevation_material
    int abc_action_bar_icon_vertical_padding_material -> abc_action_bar_icon_vertical_padding_material
    int abc_action_bar_overflow_padding_end_material -> abc_action_bar_overflow_padding_end_material
    int abc_action_bar_overflow_padding_start_material -> abc_action_bar_overflow_padding_start_material
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin_material -> abc_action_bar_subtitle_bottom_margin_material
    int abc_action_bar_subtitle_top_margin_material -> abc_action_bar_subtitle_top_margin_material
    int abc_action_button_min_height_material -> abc_action_button_min_height_material
    int abc_action_button_min_width_material -> abc_action_button_min_width_material
    int abc_action_button_min_width_overflow_material -> abc_action_button_min_width_overflow_material
    int abc_alert_dialog_button_bar_height -> abc_alert_dialog_button_bar_height
    int abc_button_inset_horizontal_material -> abc_button_inset_horizontal_material
    int abc_button_inset_vertical_material -> abc_button_inset_vertical_material
    int abc_button_padding_horizontal_material -> abc_button_padding_horizontal_material
    int abc_button_padding_vertical_material -> abc_button_padding_vertical_material
    int abc_cascading_menus_min_smallest_width -> abc_cascading_menus_min_smallest_width
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_control_corner_material -> abc_control_corner_material
    int abc_control_inset_material -> abc_control_inset_material
    int abc_control_padding_material -> abc_control_padding_material
    int abc_dialog_fixed_height_major -> abc_dialog_fixed_height_major
    int abc_dialog_fixed_height_minor -> abc_dialog_fixed_height_minor
    int abc_dialog_fixed_width_major -> abc_dialog_fixed_width_major
    int abc_dialog_fixed_width_minor -> abc_dialog_fixed_width_minor
    int abc_dialog_list_padding_vertical_material -> abc_dialog_list_padding_vertical_material
    int abc_dialog_min_width_major -> abc_dialog_min_width_major
    int abc_dialog_min_width_minor -> abc_dialog_min_width_minor
    int abc_dialog_padding_material -> abc_dialog_padding_material
    int abc_dialog_padding_top_material -> abc_dialog_padding_top_material
    int abc_disabled_alpha_material_dark -> abc_disabled_alpha_material_dark
    int abc_disabled_alpha_material_light -> abc_disabled_alpha_material_light
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_edit_text_inset_bottom_material -> abc_edit_text_inset_bottom_material
    int abc_edit_text_inset_horizontal_material -> abc_edit_text_inset_horizontal_material
    int abc_edit_text_inset_top_material -> abc_edit_text_inset_top_material
    int abc_floating_window_z -> abc_floating_window_z
    int abc_list_item_padding_horizontal_material -> abc_list_item_padding_horizontal_material
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_progress_bar_height_material -> abc_progress_bar_height_material
    int abc_search_view_preferred_height -> abc_search_view_preferred_height
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_seekbar_track_background_height_material -> abc_seekbar_track_background_height_material
    int abc_seekbar_track_progress_height_material -> abc_seekbar_track_progress_height_material
    int abc_select_dialog_padding_start_material -> abc_select_dialog_padding_start_material
    int abc_switch_padding -> abc_switch_padding
    int abc_text_size_body_1_material -> abc_text_size_body_1_material
    int abc_text_size_body_2_material -> abc_text_size_body_2_material
    int abc_text_size_button_material -> abc_text_size_button_material
    int abc_text_size_caption_material -> abc_text_size_caption_material
    int abc_text_size_display_1_material -> abc_text_size_display_1_material
    int abc_text_size_display_2_material -> abc_text_size_display_2_material
    int abc_text_size_display_3_material -> abc_text_size_display_3_material
    int abc_text_size_display_4_material -> abc_text_size_display_4_material
    int abc_text_size_headline_material -> abc_text_size_headline_material
    int abc_text_size_large_material -> abc_text_size_large_material
    int abc_text_size_medium_material -> abc_text_size_medium_material
    int abc_text_size_menu_header_material -> abc_text_size_menu_header_material
    int abc_text_size_menu_material -> abc_text_size_menu_material
    int abc_text_size_small_material -> abc_text_size_small_material
    int abc_text_size_subhead_material -> abc_text_size_subhead_material
    int abc_text_size_subtitle_material_toolbar -> abc_text_size_subtitle_material_toolbar
    int abc_text_size_title_material -> abc_text_size_title_material
    int abc_text_size_title_material_toolbar -> abc_text_size_title_material_toolbar
    int design_appbar_elevation -> design_appbar_elevation
    int design_bottom_navigation_active_item_max_width -> design_bottom_navigation_active_item_max_width
    int design_bottom_navigation_active_text_size -> design_bottom_navigation_active_text_size
    int design_bottom_navigation_height -> design_bottom_navigation_height
    int design_bottom_navigation_item_max_width -> design_bottom_navigation_item_max_width
    int design_bottom_navigation_margin -> design_bottom_navigation_margin
    int design_bottom_navigation_text_size -> design_bottom_navigation_text_size
    int design_bottom_sheet_modal_elevation -> design_bottom_sheet_modal_elevation
    int design_bottom_sheet_peek_height_min -> design_bottom_sheet_peek_height_min
    int design_fab_border_width -> design_fab_border_width
    int design_fab_elevation -> design_fab_elevation
    int design_fab_image_size -> design_fab_image_size
    int design_fab_size_mini -> design_fab_size_mini
    int design_fab_size_normal -> design_fab_size_normal
    int design_fab_translation_z_pressed -> design_fab_translation_z_pressed
    int design_navigation_elevation -> design_navigation_elevation
    int design_navigation_icon_padding -> design_navigation_icon_padding
    int design_navigation_icon_size -> design_navigation_icon_size
    int design_navigation_max_width -> design_navigation_max_width
    int design_navigation_padding_bottom -> design_navigation_padding_bottom
    int design_navigation_separator_vertical_padding -> design_navigation_separator_vertical_padding
    int design_snackbar_action_inline_max_width -> design_snackbar_action_inline_max_width
    int design_snackbar_background_corner_radius -> design_snackbar_background_corner_radius
    int design_snackbar_elevation -> design_snackbar_elevation
    int design_snackbar_extra_spacing_horizontal -> design_snackbar_extra_spacing_horizontal
    int design_snackbar_max_width -> design_snackbar_max_width
    int design_snackbar_min_width -> design_snackbar_min_width
    int design_snackbar_padding_horizontal -> design_snackbar_padding_horizontal
    int design_snackbar_padding_vertical -> design_snackbar_padding_vertical
    int design_snackbar_padding_vertical_2lines -> design_snackbar_padding_vertical_2lines
    int design_snackbar_text_size -> design_snackbar_text_size
    int design_tab_max_width -> design_tab_max_width
    int design_tab_scrollable_min_width -> design_tab_scrollable_min_width
    int design_tab_text_size -> design_tab_text_size
    int design_tab_text_size_2line -> design_tab_text_size_2line
    int disabled_alpha_material_dark -> disabled_alpha_material_dark
    int disabled_alpha_material_light -> disabled_alpha_material_light
    int highlight_alpha_material_colored -> highlight_alpha_material_colored
    int highlight_alpha_material_dark -> highlight_alpha_material_dark
    int highlight_alpha_material_light -> highlight_alpha_material_light
    int item_touch_helper_max_drag_scroll_per_frame -> item_touch_helper_max_drag_scroll_per_frame
    int item_touch_helper_swipe_escape_max_velocity -> item_touch_helper_swipe_escape_max_velocity
    int item_touch_helper_swipe_escape_velocity -> item_touch_helper_swipe_escape_velocity
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_subtext_size -> notification_subtext_size
    void <init>() -> <init>
android.support.design.widget.Snackbar$8 -> android.support.design.widget.bo:
    android.support.design.widget.Snackbar this$0 -> a
    void <init>(android.support.design.widget.Snackbar) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v7.widget.SuggestionsAdapter$ChildViewCache -> android.support.v7.widget.cz:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon1 -> c
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
    void <init>(android.view.View) -> <init>
android.support.v7.widget.ActivityChooserView$3 -> android.support.v7.widget.ed:
    android.support.v7.widget.ActivityChooserView this$0 -> a
    void <init>(android.support.v7.widget.ActivityChooserView,android.view.View) -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> a
    boolean onForwardingStarted() -> b
    boolean onForwardingStopped() -> c
android.support.v7.view.menu.ActionMenuItemView$PopupCallback -> android.support.v7.view.menu.an:
    void <init>() -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> a
android.support.v4.app.ActivityCompatJB -> android.support.v4.b.bu:
    void <init>() -> <init>
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> a
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> b
    void finishAffinity(android.app.Activity) -> c
com.murrayc.galaxyzoo.app.DecisionTree$DiscussQuestion -> com.murrayc.galaxyzoo.app.ah:
    java.lang.String noAnswerId -> a
    java.lang.String questionId -> b
    java.lang.String yesAnswerId -> c
    void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    java.lang.String getNoAnswerId() -> a
    java.lang.String getQuestionId() -> b
    java.lang.String getYesAnswerId() -> c
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.b.ab:
    void onBackStackChanged() -> a
android.support.v7.app.AlertController$3 -> android.support.v7.c.be:
    android.view.View val$top -> a
    android.view.View val$bottom -> b
    android.support.v7.app.AlertController this$0 -> c
    void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View) -> <init>
    void run() -> run
com.murrayc.galaxyzoo.app.ExampleViewerFragment -> com.murrayc.galaxyzoo.app.u:
    android.widget.ImageView mImageView -> a
    android.view.View mLoadingView -> b
    android.view.View mRootView -> c
    java.lang.String mUriStr -> d
    java.lang.String mUriStrAlternative -> e
    void <init>() -> <init>
    void loadBitmap(java.lang.String,java.lang.String,android.widget.ImageView) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> d
    void onPause() -> m
    void setExampleUrl(java.lang.String) -> b
    void setExampleUrlAlternative(java.lang.String) -> c
    void showLoadingView(boolean) -> d
    void update() -> e
    void -wrap0(com.murrayc.galaxyzoo.app.ExampleViewerFragment,java.lang.String,java.lang.String,android.widget.ImageView) -> f
    void -wrap1(com.murrayc.galaxyzoo.app.ExampleViewerFragment,boolean) -> g
android.support.design.widget.ViewGroupUtils$1 -> android.support.design.widget.am:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.a.a.m:
    void <init>() -> <init>
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> a
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> b
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> c
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean) -> d
android.support.v7.widget.ForwardingListener$DisallowIntercept -> android.support.v7.widget.bt:
    android.support.v7.widget.ForwardingListener this$0 -> a
    void <init>(android.support.v7.widget.ForwardingListener) -> <init>
    void run() -> run
    void <init>(android.support.v7.widget.ForwardingListener,android.support.v7.widget.ForwardingListener$1) -> <init>
android.support.v4.app.FragmentController -> android.support.v4.b.s:
    android.support.v4.app.FragmentHostCallback mHost -> a
    android.support.v4.app.FragmentController createController(android.support.v4.app.FragmentHostCallback) -> a
    void <init>(android.support.v4.app.FragmentHostCallback) -> <init>
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> b
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> c
    void attachHost(android.support.v4.app.Fragment) -> d
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> e
    void noteStateNotSaved() -> f
    android.os.Parcelable saveAllState() -> g
    void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig) -> h
    android.support.v4.app.FragmentManagerNonConfig retainNestedNonConfig() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroy() -> q
    void dispatchMultiWindowModeChanged(boolean) -> r
    void dispatchPictureInPictureModeChanged(boolean) -> s
    void dispatchConfigurationChanged(android.content.res.Configuration) -> t
    void dispatchLowMemory() -> u
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> v
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> w
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> x
    boolean dispatchContextItemSelected(android.view.MenuItem) -> y
    void dispatchOptionsMenuClosed(android.view.Menu) -> z
    boolean execPendingActions() -> aa
    void doLoaderStart() -> ab
    void doLoaderStop(boolean) -> ac
    void doLoaderDestroy() -> ad
    void reportLoaderStart() -> ae
    android.support.v4.util.SimpleArrayMap retainLoaderNonConfig() -> af
    void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap) -> ag
    void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> ah
android.support.design.widget.Snackbar$4 -> android.support.design.widget.m:
    android.support.design.widget.Snackbar this$0 -> a
    void <init>(android.support.design.widget.Snackbar) -> <init>
    void onDismiss(android.view.View) -> a
    void onDragStateChanged(int) -> b
android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl -> android.support.v4.a.df:
    void <init>() -> <init>
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> k
android.support.v7.widget.FitWindowsViewGroup -> android.support.v7.widget.bh:
    void setOnFitSystemWindowsListener(android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
com.squareup.picasso.Utils$OkHttpLoaderCreator -> com.squareup.a.z:
    void <init>() -> <init>
    com.squareup.picasso.Downloader create(android.content.Context) -> a
android.support.v4.view.ViewParentCompat -> android.support.v4.a.ea:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> a
    void <init>() -> <init>
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> c
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> d
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> e
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> f
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> g
    void <clinit>() -> <clinit>
android.support.v4.view.OnApplyWindowInsetsListener -> android.support.v4.a.ah:
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
android.support.v7.view.menu.MenuPresenter$Callback -> android.support.v7.view.menu.a:
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> b
android.support.v4.content.PermissionChecker -> android.support.v4.d.ag:
    void <init>() -> <init>
    int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> a
    int checkSelfPermission(android.content.Context,java.lang.String) -> b
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.bc:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter -> android.support.v4.a.ct:
    java.lang.ref.WeakReference mViewRef -> a
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> b
    android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl this$0 -> c
    void <init>(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> <init>
    void run() -> run
    void <init>(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorCompat$1) -> <init>
android.support.v4.app.ActivityOptionsCompat24 -> android.support.v4.b.ak:
    android.app.ActivityOptions mActivityOptions -> a
    android.support.v4.app.ActivityOptionsCompat24 makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> a
    void <init>(android.app.ActivityOptions) -> <init>
    android.os.Bundle toBundle() -> b
android.support.v4.view.ViewPropertyAnimatorCompatJB -> android.support.v4.a.bm:
    void <init>() -> <init>
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> a
android.support.design.widget.FloatingActionButtonGingerbread -> android.support.design.widget.ad:
    android.support.design.widget.StateListAnimator mStateListAnimator -> a
    android.support.design.widget.ShadowDrawableWrapper mShadowDrawable -> b
    void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate,android.support.design.widget.ValueAnimatorCompat$Creator) -> <init>
    void setBackgroundTintList(android.content.res.ColorStateList) -> a
    void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> b
    void setRippleColor(int) -> c
    float getElevation() -> d
    void onElevationsChanged(float,float) -> e
    void onDrawableStateChanged(int[]) -> f
    void jumpDrawableToCurrentState() -> g
    void hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> h
    void show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> i
    void onCompatShadowChanged() -> j
    void getPadding(android.graphics.Rect) -> k
    android.support.design.widget.ValueAnimatorCompat createAnimator(android.support.design.widget.FloatingActionButtonGingerbread$ShadowAnimatorImpl) -> l
    android.content.res.ColorStateList createColorStateList(int) -> m
android.support.v7.widget.StaggeredGridLayoutManager$SavedState$1 -> android.support.v7.widget.hn:
    void <init>() -> <init>
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.view.SupportActionModeWrapper -> android.support.v7.view.k:
    android.content.Context mContext -> a
    android.support.v7.view.ActionMode mWrappedObject -> b
    void <init>(android.content.Context,android.support.v7.view.ActionMode) -> <init>
    java.lang.Object getTag() -> getTag
    void setTag(java.lang.Object) -> setTag
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void invalidate() -> invalidate
    void finish() -> finish
    android.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(int) -> setTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(int) -> setSubtitle
    android.view.View getCustomView() -> getCustomView
    void setCustomView(android.view.View) -> setCustomView
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean getTitleOptionalHint() -> getTitleOptionalHint
    void setTitleOptionalHint(boolean) -> setTitleOptionalHint
    boolean isTitleOptional() -> isTitleOptional
android.support.v7.widget.OpReorderer -> android.support.v7.widget.hd:
    android.support.v7.widget.OpReorderer$Callback mCallback -> a
    void <init>(android.support.v7.widget.OpReorderer$Callback) -> <init>
    void reorderOps(java.util.List) -> a
    void swapMoveOp(java.util.List,int,int) -> b
    void swapMoveRemove(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> c
    void swapMoveAdd(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> d
    void swapMoveUpdate(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> e
    int getLastMoveOutOfOrder(java.util.List) -> f
android.support.design.widget.FloatingActionButton$1 -> android.support.design.widget.aj:
    android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener val$listener -> a
    android.support.design.widget.FloatingActionButton this$0 -> b
    void <init>(android.support.design.widget.FloatingActionButton,android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener) -> <init>
    void onShown() -> a
    void onHidden() -> b
com.android.volley.toolbox.HttpHeaderParser -> com.android.a.a.b:
    void <init>() -> <init>
    com.android.volley.Cache$Entry parseCacheHeaders(com.android.volley.NetworkResponse) -> a
    long parseDateAsEpoch(java.lang.String) -> b
    java.lang.String parseCharset(java.util.Map,java.lang.String) -> c
    java.lang.String parseCharset(java.util.Map) -> d
android.support.v7.widget.AppCompatEditText -> android.support.v7.widget.cj:
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> b
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
android.support.v7.widget.StaggeredGridLayoutManager$Span -> android.support.v7.widget.gz:
    java.util.ArrayList mViews -> a
    int mCachedStart -> b
    int mCachedEnd -> c
    int mDeletedSize -> d
    int mIndex -> e
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> f
    void <init>(android.support.v7.widget.StaggeredGridLayoutManager,int) -> <init>
    int getStartLine(int) -> a
    void calculateCachedStart() -> b
    int getStartLine() -> c
    int getEndLine(int) -> d
    void calculateCachedEnd() -> e
    int getEndLine() -> f
    void prependToSpan(android.view.View) -> g
    void appendToSpan(android.view.View) -> h
    void cacheReferenceLineAndClear(boolean,int) -> i
    void clear() -> j
    void invalidateCache() -> k
    void setLine(int) -> l
    void popEnd() -> m
    void popStart() -> n
    int getDeletedSize() -> o
    android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> p
    void onOffset(int) -> q
    android.view.View getFocusableViewAfter(int,int) -> r
    java.util.ArrayList access$100(android.support.v7.widget.StaggeredGridLayoutManager$Span) -> s
    void <init>(android.support.v7.widget.StaggeredGridLayoutManager,int,android.support.v7.widget.StaggeredGridLayoutManager$1) -> <init>
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.e:
    void <init>() -> <init>
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> b
    boolean isFinished(java.lang.Object) -> c
    boolean onPull(java.lang.Object,float) -> d
    boolean onRelease(java.lang.Object) -> e
    boolean onAbsorb(java.lang.Object,int) -> f
    boolean draw(java.lang.Object,android.graphics.Canvas) -> g
com.murrayc.galaxyzoo.app.ItemFragment$Callbacks -> com.murrayc.galaxyzoo.app.m:
    void abandonItem() -> c
    void navigateToList() -> d
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.a.y:
    void <init>() -> <init>
    int getLayoutDirection(android.view.View) -> a
    int getPaddingStart(android.view.View) -> c
    int getPaddingEnd(android.view.View) -> j
    void setPaddingRelative(android.view.View,int,int,int,int) -> k
    int getWindowSystemUiVisibility(android.view.View) -> l
    boolean isPaddingRelative(android.view.View) -> n
android.support.design.widget.ValueAnimatorCompat$Impl -> android.support.design.widget.bd:
    void <init>() -> <init>
    void start() -> a
    boolean isRunning() -> b
    void setInterpolator(android.view.animation.Interpolator) -> c
    void addListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy) -> d
    void addUpdateListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy) -> e
    void setIntValues(int,int) -> f
    int getAnimatedIntValue() -> g
    void setFloatValues(float,float) -> h
    void setDuration(long) -> i
    void cancel() -> j
    float getAnimatedFraction() -> k
    void end() -> l
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.a.a.as:
    void <init>() -> <init>
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$1) -> <init>
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.a.q:
    void <init>() -> <init>
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> c
com.murrayc.galaxyzoo.app.GalaxyZooApplication -> com.murrayc.galaxyzoo.app.GalaxyZooApplication:
    com.squareup.picasso.Picasso$Listener picassoListener -> a
    void <init>() -> <init>
    void onCreate() -> onCreate
    void <clinit>() -> <clinit>
android.support.v4.view.LayoutInflaterCompat -> android.support.v4.a.dz:
    android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl IMPL -> a
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
    android.support.v4.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater) -> b
    void <clinit>() -> <clinit>
android.support.v7.view.menu.MenuBuilder -> android.support.v7.view.menu.c:
    int[] sCategoryToOrder -> a
    android.content.Context mContext -> b
    android.content.res.Resources mResources -> c
    boolean mQwertyMode -> d
    boolean mShortcutsVisible -> e
    android.support.v7.view.menu.MenuBuilder$Callback mCallback -> f
    java.util.ArrayList mItems -> g
    java.util.ArrayList mVisibleItems -> h
    boolean mIsVisibleItemsStale -> i
    java.util.ArrayList mActionItems -> j
    java.util.ArrayList mNonActionItems -> k
    boolean mIsActionItemsStale -> l
    int mDefaultShowAsAction -> m
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> n
    java.lang.CharSequence mHeaderTitle -> o
    android.graphics.drawable.Drawable mHeaderIcon -> p
    android.view.View mHeaderView -> q
    boolean mPreventDispatchingItemsChanged -> r
    boolean mItemsChangedWhileDispatchPrevented -> s
    boolean mOptionalIconsVisible -> t
    boolean mIsClosing -> u
    java.util.ArrayList mTempShortcutItemList -> v
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> w
    android.support.v7.view.menu.MenuItemImpl mExpandedItem -> x
    boolean mOverrideVisibleItems -> y
    void <init>(android.content.Context) -> <init>
    android.support.v7.view.menu.MenuBuilder setDefaultShowAsAction(int) -> a
    void addMenuPresenter(android.support.v7.view.menu.MenuPresenter) -> b
    void addMenuPresenter(android.support.v7.view.menu.MenuPresenter,android.content.Context) -> c
    void removeMenuPresenter(android.support.v7.view.menu.MenuPresenter) -> d
    void dispatchPresenterUpdate(boolean) -> e
    boolean dispatchSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder,android.support.v7.view.menu.MenuPresenter) -> f
    void saveActionViewStates(android.os.Bundle) -> g
    void restoreActionViewStates(android.os.Bundle) -> h
    java.lang.String getActionViewStatesKey() -> i
    void setCallback(android.support.v7.view.menu.MenuBuilder$Callback) -> j
    android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> k
    android.support.v7.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> l
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> m
    void clear() -> clear
    void setExclusiveItemChecked(android.view.MenuItem) -> n
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> o
    int findGroupIndex(int) -> p
    int findGroupIndex(int,int) -> q
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> r
    boolean isQwertyMode() -> s
    void setShortcutsVisibleInner(boolean) -> t
    boolean isShortcutsVisible() -> u
    android.content.res.Resources getResources() -> v
    android.content.Context getContext() -> w
    boolean dispatchMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> x
    void changeMenuMode() -> y
    int findInsertIndex(java.util.ArrayList,int) -> z
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> aa
    android.support.v7.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> ab
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(android.view.MenuItem,int) -> ac
    boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int) -> ad
    void close(boolean) -> ae
    void close() -> close
    void onItemsChanged(boolean) -> af
    void stopDispatchingItemsChanged() -> ag
    void startDispatchingItemsChanged() -> ah
    void onItemVisibleChanged(android.support.v7.view.menu.MenuItemImpl) -> ai
    void onItemActionRequestChanged(android.support.v7.view.menu.MenuItemImpl) -> aj
    java.util.ArrayList getVisibleItems() -> ak
    void flagActionItems() -> al
    java.util.ArrayList getActionItems() -> am
    java.util.ArrayList getNonActionItems() -> an
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> ao
    android.support.v7.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> ap
    android.support.v7.view.menu.MenuBuilder setHeaderTitleInt(int) -> aq
    android.support.v7.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> ar
    android.support.v7.view.menu.MenuBuilder setHeaderIconInt(int) -> as
    android.support.v7.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> at
    java.lang.CharSequence getHeaderTitle() -> au
    android.graphics.drawable.Drawable getHeaderIcon() -> av
    android.view.View getHeaderView() -> aw
    android.support.v7.view.menu.MenuBuilder getRootMenu() -> ax
    boolean getOptionalIconsVisible() -> ay
    boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl) -> az
    boolean collapseItemActionView(android.support.v7.view.menu.MenuItemImpl) -> ba
    android.support.v7.view.menu.MenuItemImpl getExpandedItem() -> bb
    void setOverrideVisibleItems(boolean) -> bc
    void <clinit>() -> <clinit>
com.murrayc.galaxyzoo.app.DecisionTree$BaseButton -> com.murrayc.galaxyzoo.app.ai:
    int examplesCount -> a
    java.lang.String icon -> b
    java.lang.String id -> c
    java.lang.String text -> d
    java.lang.String getText() -> a
    int getExamplesCount() -> b
    java.lang.String getExampleIconName(java.lang.String,int) -> c
    java.lang.String getExampleIconNameWithCommonMistake(java.lang.String,int) -> d
    java.lang.String getIcon() -> e
    void <init>(java.lang.String,java.lang.String,java.lang.String,int) -> <init>
    java.lang.String getId() -> f
    void setText(java.lang.String) -> g
android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase -> android.support.v7.c.bp:
    android.support.v7.app.AppCompatDelegateImplBase this$0 -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplBase,android.view.Window$Callback) -> <init>
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    void onContentChanged() -> onContentChanged
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
android.support.design.internal.NavigationMenuItemView -> android.support.design.internal.NavigationMenuItemView:
    int[] CHECKED_STATE_SET -> a
    int mIconSize -> b
    boolean mNeedsEmptyIcon -> c
    boolean mCheckable -> d
    android.widget.CheckedTextView mTextView -> e
    android.widget.FrameLayout mActionArea -> f
    android.support.v7.view.menu.MenuItemImpl mItemData -> g
    android.content.res.ColorStateList mIconTintList -> h
    boolean mHasIconTintList -> i
    android.graphics.drawable.Drawable mEmptyDrawable -> j
    android.support.v4.view.AccessibilityDelegateCompat mAccessibilityDelegate -> k
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> a
    boolean shouldExpandActionArea() -> b
    void adjustAppearance() -> c
    void setActionView(android.view.View) -> setActionView
    android.graphics.drawable.StateListDrawable createDefaultBackground() -> d
    android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    void setTitle(java.lang.CharSequence) -> setTitle
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean prefersCondensedTitle() -> e
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void setTextColor(android.content.res.ColorStateList) -> setTextColor
    void setNeedsEmptyIcon(boolean) -> setNeedsEmptyIcon
    boolean access$000(android.support.design.internal.NavigationMenuItemView) -> f
    void <clinit>() -> <clinit>
android.support.graphics.drawable.VectorDrawableCommon -> android.support.a.a.t:
    android.graphics.drawable.Drawable mDelegateDrawable -> a
    void <init>() -> <init>
    android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> a
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    boolean onLevelChange(int) -> onLevelChange
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    void setFilterBitmap(boolean) -> setFilterBitmap
    void jumpToCurrentState() -> jumpToCurrentState
    void setAutoMirrored(boolean) -> setAutoMirrored
    boolean isAutoMirrored() -> isAutoMirrored
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    int getLayoutDirection() -> getLayoutDirection
    void clearColorFilter() -> clearColorFilter
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    int[] getState() -> getState
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    void setChangingConfigurations(int) -> setChangingConfigurations
    boolean setState(int[]) -> setState
android.support.design.widget.HeaderBehavior -> android.support.design.widget.bj:
    java.lang.Runnable mFlingRunnable -> a
    android.support.v4.widget.ScrollerCompat mScroller -> b
    boolean mIsBeingDragged -> c
    int mActivePointerId -> d
    int mLastMotionY -> e
    int mTouchSlop -> f
    android.view.VelocityTracker mVelocityTracker -> g
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> c
    boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> e
    int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> b
    int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int) -> c
    int getTopBottomOffsetForScrollingSibling() -> d
    int scroll(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int) -> e
    boolean fling(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,float) -> f
    void onFlingFinished(android.support.design.widget.CoordinatorLayout,android.view.View) -> g
    boolean canDragView(android.view.View) -> h
    int getMaxDragOffset(android.view.View) -> i
    int getScrollRangeForDragFling(android.view.View) -> j
    void ensureVelocityTracker() -> k
    android.support.v4.widget.ScrollerCompat access$000(android.support.design.widget.HeaderBehavior) -> l
android.support.v7.widget.RecyclerView -> android.support.v7.widget.RecyclerView:
    int[] NESTED_SCROLLING_ATTRS -> a
    int[] CLIP_TO_PADDING_ATTR -> b
    boolean FORCE_INVALIDATE_DISPLAY_LIST -> c
    boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC -> d
    java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE -> e
    android.support.v7.widget.RecyclerView$RecyclerViewDataObserver mObserver -> f
    android.support.v7.widget.RecyclerView$Recycler mRecycler -> g
    android.support.v7.widget.RecyclerView$SavedState mPendingSavedState -> h
    android.support.v7.widget.AdapterHelper mAdapterHelper -> i
    android.support.v7.widget.ChildHelper mChildHelper -> j
    android.support.v7.widget.ViewInfoStore mViewInfoStore -> k
    boolean mClipToPadding -> l
    java.lang.Runnable mUpdateChildViewsRunnable -> m
    android.graphics.Rect mTempRect -> n
    android.graphics.Rect mTempRect2 -> o
    android.graphics.RectF mTempRectF -> p
    android.support.v7.widget.RecyclerView$Adapter mAdapter -> q
    android.support.v7.widget.RecyclerView$LayoutManager mLayout -> r
    android.support.v7.widget.RecyclerView$RecyclerListener mRecyclerListener -> s
    java.util.ArrayList mItemDecorations -> t
    java.util.ArrayList mOnItemTouchListeners -> u
    android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener -> v
    boolean mIsAttached -> w
    boolean mHasFixedSize -> x
    boolean mFirstLayoutComplete -> y
    int mEatRequestLayout -> z
    boolean mLayoutRequestEaten -> aa
    boolean mLayoutFrozen -> ab
    boolean mIgnoreMotionEventTillDown -> ac
    int mEatenAccessibilityChangeFlags -> ad
    boolean mAdapterUpdateDuringMeasure -> ae
    boolean mPostUpdatesOnAnimation -> af
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> ag
    java.util.List mOnChildAttachStateListeners -> ah
    boolean mDataSetHasChangedAfterLayout -> ai
    int mLayoutOrScrollCounter -> aj
    int mDispatchScrollCounter -> ak
    android.support.v4.widget.EdgeEffectCompat mLeftGlow -> al
    android.support.v4.widget.EdgeEffectCompat mTopGlow -> am
    android.support.v4.widget.EdgeEffectCompat mRightGlow -> an
    android.support.v4.widget.EdgeEffectCompat mBottomGlow -> ao
    android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator -> ap
    int mScrollState -> aq
    int mScrollPointerId -> ar
    android.view.VelocityTracker mVelocityTracker -> as
    int mInitialTouchX -> at
    int mInitialTouchY -> au
    int mLastTouchX -> av
    int mLastTouchY -> aw
    int mTouchSlop -> ax
    android.support.v7.widget.RecyclerView$OnFlingListener mOnFlingListener -> ay
    int mMinFlingVelocity -> az
    int mMaxFlingVelocity -> ba
    float mScrollFactor -> bb
    boolean mPreserveFocusAfterLayout -> bc
    android.support.v7.widget.RecyclerView$ViewFlinger mViewFlinger -> bd
    android.support.v7.widget.RecyclerView$State mState -> be
    android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener -> bf
    java.util.List mScrollListeners -> bg
    boolean mItemsAddedOrRemoved -> bh
    boolean mItemsChanged -> bi
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener -> bj
    boolean mPostedAnimatorRunner -> bk
    android.support.v7.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate -> bl
    android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> bm
    int[] mMinMaxLayoutPositions -> bn
    android.support.v4.view.NestedScrollingChildHelper mScrollingChildHelper -> bo
    int[] mScrollOffset -> bp
    int[] mScrollConsumed -> bq
    int[] mNestedOffsets -> br
    java.lang.Runnable mItemAnimatorRunner -> bs
    android.view.animation.Interpolator sQuinticInterpolator -> bt
    android.support.v7.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback -> bu
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    android.support.v7.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    void setAccessibilityDelegateCompat(android.support.v7.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> a
    java.lang.String getFullClassName(android.content.Context,java.lang.String) -> b
    void initChildrenHelper() -> c
    void initAdapterManager() -> d
    void setHasFixedSize(boolean) -> setHasFixedSize
    void setClipToPadding(boolean) -> setClipToPadding
    void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    void setAdapter(android.support.v7.widget.RecyclerView$Adapter) -> setAdapter
    void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    android.support.v7.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    void setRecyclerListener(android.support.v7.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    int getBaseline() -> getBaseline
    void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager) -> setLayoutManager
    void setOnFlingListener(android.support.v7.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    android.support.v7.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder) -> e
    boolean removeAnimatingView(android.view.View) -> f
    android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    void setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    void setItemViewCacheSize(int) -> setItemViewCacheSize
    int getScrollState() -> getScrollState
    void setScrollState(int) -> setScrollState
    void setChildDrawingOrderCallback(android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    void setOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    void jumpToPositionForSmoothScroller(int) -> g
    void scrollTo(int,int) -> scrollTo
    void scrollBy(int,int) -> scrollBy
    void consumePendingUpdateOperations() -> h
    boolean hasUpdatedView() -> i
    boolean scrollByInternal(int,int,android.view.MotionEvent) -> j
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    void eatRequestLayout() -> k
    void resumeRequestLayout(boolean) -> l
    void setLayoutFrozen(boolean) -> setLayoutFrozen
    void smoothScrollBy(int,int) -> m
    boolean fling(int,int) -> n
    void stopScroll() -> o
    void stopScrollersInternal() -> p
    int getMinFlingVelocity() -> getMinFlingVelocity
    int getMaxFlingVelocity() -> getMaxFlingVelocity
    void pullGlows(float,float,float,float) -> q
    void releaseGlows() -> r
    void considerReleasingGlowsOnScroll(int,int) -> s
    void absorbGlows(int,int) -> t
    void ensureLeftGlow() -> u
    void ensureRightGlow() -> v
    void ensureTopGlow() -> w
    void ensureBottomGlow() -> x
    void invalidateGlows() -> y
    android.view.View focusSearch(android.view.View,int) -> focusSearch
    boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> z
    boolean isPreferredNextFocusAbsolute(android.view.View,android.view.View,int) -> aa
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean isAttachedToWindow() -> isAttachedToWindow
    void assertNotInLayoutOrScroll(java.lang.String) -> ab
    boolean dispatchOnItemTouchIntercept(android.view.MotionEvent) -> ac
    boolean dispatchOnItemTouch(android.view.MotionEvent) -> ad
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void resetTouch() -> ae
    void cancelTouch() -> af
    void onPointerUp(android.view.MotionEvent) -> ag
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getScrollFactor() -> getScrollFactor
    void onMeasure(int,int) -> onMeasure
    void defaultOnMeasure(int,int) -> ah
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setItemAnimator(android.support.v7.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    void onEnterLayoutOrScroll() -> ai
    void onExitLayoutOrScroll() -> aj
    boolean isAccessibilityEnabled() -> ak
    void dispatchContentChangedIfNecessary() -> al
    boolean isComputingLayout() -> am
    boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> an
    void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v7.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    void postAnimationRunner() -> ao
    boolean predictiveItemAnimationsEnabled() -> ap
    void processAdapterUpdatesAndSetAnimationFlags() -> aq
    void dispatchLayout() -> ar
    void saveFocusInfo() -> as
    void resetFocusInfo() -> at
    void recoverFocusFromState() -> au
    int getDeepestFocusedViewWithId(android.view.View) -> av
    void dispatchLayoutStep1() -> aw
    void dispatchLayoutStep2() -> ax
    void dispatchLayoutStep3() -> ay
    void handleMissingPreInfoForChangeError(long,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> az
    void recordAnimationInfoIfBouncedHiddenView(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> ba
    void findMinMaxChildLayoutPositions(int[]) -> bb
    boolean didChildRangeChange(int,int) -> bc
    void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder) -> bd
    void animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> be
    void animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> bf
    void animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> bg
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void markItemDecorInsetsDirty() -> bh
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    void saveOldPositions() -> bi
    void clearOldPositions() -> bj
    void offsetPositionRecordsForMove(int,int) -> bk
    void offsetPositionRecordsForInsert(int,int) -> bl
    void offsetPositionRecordsForRemove(int,int,boolean) -> bm
    void viewRangeUpdate(int,int,java.lang.Object) -> bn
    boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder) -> bo
    void setDataSetChangedAfterLayout() -> setDataSetChangedAfterLayout
    void markKnownViewsInvalid() -> bp
    boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> bq
    android.view.View findContainingItemView(android.view.View) -> br
    android.support.v7.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> bs
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> bt
    int getChildLayoutPosition(android.view.View) -> bu
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> bv
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> bw
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> bx
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void offsetChildrenVertical(int) -> by
    void onChildAttachedToWindow(android.view.View) -> bz
    void onChildDetachedFromWindow(android.view.View) -> ca
    void offsetChildrenHorizontal(int) -> cb
    android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> cc
    void onScrolled(int,int) -> cd
    void dispatchOnScrolled(int,int) -> ce
    void onScrollStateChanged(int) -> cf
    void dispatchOnScrollStateChanged(int) -> cg
    boolean hasPendingAdapterUpdates() -> ch
    void repositionShadowingViews() -> ci
    void dispatchChildDetached(android.view.View) -> cj
    void dispatchChildAttached(android.view.View) -> ck
    int getAdapterPositionFor(android.support.v7.widget.RecyclerView$ViewHolder) -> cl
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    boolean access$100(android.support.v7.widget.RecyclerView) -> cm
    boolean access$200(android.support.v7.widget.RecyclerView) -> cn
    boolean access$302(android.support.v7.widget.RecyclerView,boolean) -> co
    void access$400(android.support.v7.widget.RecyclerView) -> cp
    boolean access$602(android.support.v7.widget.RecyclerView,boolean) -> cq
    void access$700(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> cr
    void access$800(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> cs
    boolean access$900(android.support.v7.widget.RecyclerView) -> ct
    void access$1000(android.support.v7.widget.RecyclerView) -> cu
    void access$1100(android.support.v7.widget.RecyclerView,android.view.View) -> cv
    void access$1200(android.support.v7.widget.RecyclerView,android.view.View) -> cw
    void access$1300(android.support.v7.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> cx
    void access$1400(android.support.v7.widget.RecyclerView,int) -> cy
    android.view.animation.Interpolator access$3000() -> cz
    android.support.v7.widget.RecyclerView$Adapter access$3100(android.support.v7.widget.RecyclerView) -> da
    void access$3200(android.support.v7.widget.RecyclerView) -> db
    void access$3300(android.support.v7.widget.RecyclerView) -> dc
    void access$3400(android.support.v7.widget.RecyclerView) -> dd
    java.util.ArrayList access$3600(android.support.v7.widget.RecyclerView) -> de
    void access$3700(android.support.v7.widget.RecyclerView,int,int) -> df
    boolean access$3800(android.support.v7.widget.RecyclerView) -> dg
    void access$3900(android.support.v7.widget.RecyclerView,int) -> dh
    void access$4000(android.support.v7.widget.RecyclerView) -> di
    boolean access$4500() -> dj
    void access$4600(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> dk
    android.support.v7.widget.RecyclerViewAccessibilityDelegate access$4700(android.support.v7.widget.RecyclerView) -> dl
    boolean access$5100(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> dm
    android.support.v7.widget.RecyclerView$RecyclerListener access$5200(android.support.v7.widget.RecyclerView) -> dn
    android.graphics.Rect access$5300(android.support.v7.widget.RecyclerView) -> do
    boolean access$5400(android.support.v7.widget.RecyclerView) -> dp
    android.graphics.RectF access$5500(android.support.v7.widget.RecyclerView) -> dq
    void access$5600(android.support.v7.widget.RecyclerView,int,int) -> dr
    int access$5700(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> ds
    android.support.v7.widget.RecyclerView$ViewFlinger access$5900(android.support.v7.widget.RecyclerView) -> dt
    void access$6200(android.support.v7.widget.RecyclerView,int) -> du
    boolean access$6400(android.support.v7.widget.RecyclerView,android.view.View) -> dv
    void <clinit>() -> <clinit>
android.support.v7.view.menu.ListMenuItemView -> android.support.v7.view.menu.ListMenuItemView:
    android.support.v7.view.menu.MenuItemImpl mItemData -> a
    android.widget.ImageView mIconView -> b
    android.widget.RadioButton mRadioButton -> c
    android.widget.TextView mTitleView -> d
    android.widget.CheckBox mCheckBox -> e
    android.widget.TextView mShortcutView -> f
    android.widget.ImageView mSubMenuArrowView -> g
    android.graphics.drawable.Drawable mBackground -> h
    int mTextAppearance -> i
    android.content.Context mTextAppearanceContext -> j
    boolean mPreserveIconSpacing -> k
    android.graphics.drawable.Drawable mSubMenuArrow -> l
    int mMenuType -> m
    android.view.LayoutInflater mInflater -> n
    boolean mForceShowIcon -> o
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onFinishInflate() -> onFinishInflate
    void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> a
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> a
    void insertRadioButton() -> b
    void insertCheckBox() -> c
    boolean prefersCondensedTitle() -> e
    android.view.LayoutInflater getInflater() -> getInflater
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.b.bb:
    int[] Fragment -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.design.R$styleable -> android.support.design.i:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_contentInsetEnd -> ActionBar_contentInsetEnd
    int ActionBar_contentInsetEndWithActions -> ActionBar_contentInsetEndWithActions
    int ActionBar_contentInsetLeft -> ActionBar_contentInsetLeft
    int ActionBar_contentInsetRight -> ActionBar_contentInsetRight
    int ActionBar_contentInsetStart -> ActionBar_contentInsetStart
    int ActionBar_contentInsetStartWithNavigation -> ActionBar_contentInsetStartWithNavigation
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_elevation -> ActionBar_elevation
    int ActionBar_height -> ActionBar_height
    int ActionBar_hideOnContentScroll -> ActionBar_hideOnContentScroll
    int ActionBar_homeAsUpIndicator -> ActionBar_homeAsUpIndicator
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_popupTheme -> ActionBar_popupTheme
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_closeItemLayout -> ActionMode_closeItemLayout
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_layout -> AlertDialog_android_layout
    int AlertDialog_buttonPanelSideLayout -> AlertDialog_buttonPanelSideLayout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int[] AppBarLayout -> AppBarLayout
    int[] AppBarLayoutStates -> AppBarLayoutStates
    int AppBarLayoutStates_state_collapsed -> AppBarLayoutStates_state_collapsed
    int AppBarLayoutStates_state_collapsible -> AppBarLayoutStates_state_collapsible
    int[] AppBarLayout_Layout -> AppBarLayout_Layout
    int AppBarLayout_Layout_layout_scrollFlags -> AppBarLayout_Layout_layout_scrollFlags
    int AppBarLayout_Layout_layout_scrollInterpolator -> AppBarLayout_Layout_layout_scrollInterpolator
    int AppBarLayout_android_background -> AppBarLayout_android_background
    int AppBarLayout_elevation -> AppBarLayout_elevation
    int AppBarLayout_expanded -> AppBarLayout_expanded
    int[] AppCompatImageView -> AppCompatImageView
    int AppCompatImageView_android_src -> AppCompatImageView_android_src
    int AppCompatImageView_srcCompat -> AppCompatImageView_srcCompat
    int[] AppCompatSeekBar -> AppCompatSeekBar
    int AppCompatSeekBar_android_thumb -> AppCompatSeekBar_android_thumb
    int AppCompatSeekBar_tickMark -> AppCompatSeekBar_tickMark
    int AppCompatSeekBar_tickMarkTint -> AppCompatSeekBar_tickMarkTint
    int AppCompatSeekBar_tickMarkTintMode -> AppCompatSeekBar_tickMarkTintMode
    int[] AppCompatTextHelper -> AppCompatTextHelper
    int AppCompatTextHelper_android_drawableBottom -> AppCompatTextHelper_android_drawableBottom
    int AppCompatTextHelper_android_drawableEnd -> AppCompatTextHelper_android_drawableEnd
    int AppCompatTextHelper_android_drawableLeft -> AppCompatTextHelper_android_drawableLeft
    int AppCompatTextHelper_android_drawableRight -> AppCompatTextHelper_android_drawableRight
    int AppCompatTextHelper_android_drawableStart -> AppCompatTextHelper_android_drawableStart
    int AppCompatTextHelper_android_drawableTop -> AppCompatTextHelper_android_drawableTop
    int AppCompatTextHelper_android_textAppearance -> AppCompatTextHelper_android_textAppearance
    int[] AppCompatTextView -> AppCompatTextView
    int AppCompatTextView_android_textAppearance -> AppCompatTextView_android_textAppearance
    int AppCompatTextView_textAllCaps -> AppCompatTextView_textAllCaps
    int[] AppCompatTheme -> AppCompatTheme
    int AppCompatTheme_actionBarDivider -> AppCompatTheme_actionBarDivider
    int AppCompatTheme_actionBarItemBackground -> AppCompatTheme_actionBarItemBackground
    int AppCompatTheme_actionBarPopupTheme -> AppCompatTheme_actionBarPopupTheme
    int AppCompatTheme_actionBarSize -> AppCompatTheme_actionBarSize
    int AppCompatTheme_actionBarSplitStyle -> AppCompatTheme_actionBarSplitStyle
    int AppCompatTheme_actionBarStyle -> AppCompatTheme_actionBarStyle
    int AppCompatTheme_actionBarTabBarStyle -> AppCompatTheme_actionBarTabBarStyle
    int AppCompatTheme_actionBarTabStyle -> AppCompatTheme_actionBarTabStyle
    int AppCompatTheme_actionBarTabTextStyle -> AppCompatTheme_actionBarTabTextStyle
    int AppCompatTheme_actionBarTheme -> AppCompatTheme_actionBarTheme
    int AppCompatTheme_actionBarWidgetTheme -> AppCompatTheme_actionBarWidgetTheme
    int AppCompatTheme_actionButtonStyle -> AppCompatTheme_actionButtonStyle
    int AppCompatTheme_actionDropDownStyle -> AppCompatTheme_actionDropDownStyle
    int AppCompatTheme_actionMenuTextAppearance -> AppCompatTheme_actionMenuTextAppearance
    int AppCompatTheme_actionMenuTextColor -> AppCompatTheme_actionMenuTextColor
    int AppCompatTheme_actionModeBackground -> AppCompatTheme_actionModeBackground
    int AppCompatTheme_actionModeCloseButtonStyle -> AppCompatTheme_actionModeCloseButtonStyle
    int AppCompatTheme_actionModeCloseDrawable -> AppCompatTheme_actionModeCloseDrawable
    int AppCompatTheme_actionModeCopyDrawable -> AppCompatTheme_actionModeCopyDrawable
    int AppCompatTheme_actionModeCutDrawable -> AppCompatTheme_actionModeCutDrawable
    int AppCompatTheme_actionModeFindDrawable -> AppCompatTheme_actionModeFindDrawable
    int AppCompatTheme_actionModePasteDrawable -> AppCompatTheme_actionModePasteDrawable
    int AppCompatTheme_actionModePopupWindowStyle -> AppCompatTheme_actionModePopupWindowStyle
    int AppCompatTheme_actionModeSelectAllDrawable -> AppCompatTheme_actionModeSelectAllDrawable
    int AppCompatTheme_actionModeShareDrawable -> AppCompatTheme_actionModeShareDrawable
    int AppCompatTheme_actionModeSplitBackground -> AppCompatTheme_actionModeSplitBackground
    int AppCompatTheme_actionModeStyle -> AppCompatTheme_actionModeStyle
    int AppCompatTheme_actionModeWebSearchDrawable -> AppCompatTheme_actionModeWebSearchDrawable
    int AppCompatTheme_actionOverflowButtonStyle -> AppCompatTheme_actionOverflowButtonStyle
    int AppCompatTheme_actionOverflowMenuStyle -> AppCompatTheme_actionOverflowMenuStyle
    int AppCompatTheme_activityChooserViewStyle -> AppCompatTheme_activityChooserViewStyle
    int AppCompatTheme_alertDialogButtonGroupStyle -> AppCompatTheme_alertDialogButtonGroupStyle
    int AppCompatTheme_alertDialogCenterButtons -> AppCompatTheme_alertDialogCenterButtons
    int AppCompatTheme_alertDialogStyle -> AppCompatTheme_alertDialogStyle
    int AppCompatTheme_alertDialogTheme -> AppCompatTheme_alertDialogTheme
    int AppCompatTheme_android_windowAnimationStyle -> AppCompatTheme_android_windowAnimationStyle
    int AppCompatTheme_android_windowIsFloating -> AppCompatTheme_android_windowIsFloating
    int AppCompatTheme_autoCompleteTextViewStyle -> AppCompatTheme_autoCompleteTextViewStyle
    int AppCompatTheme_borderlessButtonStyle -> AppCompatTheme_borderlessButtonStyle
    int AppCompatTheme_buttonBarButtonStyle -> AppCompatTheme_buttonBarButtonStyle
    int AppCompatTheme_buttonBarNegativeButtonStyle -> AppCompatTheme_buttonBarNegativeButtonStyle
    int AppCompatTheme_buttonBarNeutralButtonStyle -> AppCompatTheme_buttonBarNeutralButtonStyle
    int AppCompatTheme_buttonBarPositiveButtonStyle -> AppCompatTheme_buttonBarPositiveButtonStyle
    int AppCompatTheme_buttonBarStyle -> AppCompatTheme_buttonBarStyle
    int AppCompatTheme_buttonStyle -> AppCompatTheme_buttonStyle
    int AppCompatTheme_buttonStyleSmall -> AppCompatTheme_buttonStyleSmall
    int AppCompatTheme_checkboxStyle -> AppCompatTheme_checkboxStyle
    int AppCompatTheme_checkedTextViewStyle -> AppCompatTheme_checkedTextViewStyle
    int AppCompatTheme_colorAccent -> AppCompatTheme_colorAccent
    int AppCompatTheme_colorBackgroundFloating -> AppCompatTheme_colorBackgroundFloating
    int AppCompatTheme_colorButtonNormal -> AppCompatTheme_colorButtonNormal
    int AppCompatTheme_colorControlActivated -> AppCompatTheme_colorControlActivated
    int AppCompatTheme_colorControlHighlight -> AppCompatTheme_colorControlHighlight
    int AppCompatTheme_colorControlNormal -> AppCompatTheme_colorControlNormal
    int AppCompatTheme_colorPrimary -> AppCompatTheme_colorPrimary
    int AppCompatTheme_colorPrimaryDark -> AppCompatTheme_colorPrimaryDark
    int AppCompatTheme_colorSwitchThumbNormal -> AppCompatTheme_colorSwitchThumbNormal
    int AppCompatTheme_controlBackground -> AppCompatTheme_controlBackground
    int AppCompatTheme_dialogPreferredPadding -> AppCompatTheme_dialogPreferredPadding
    int AppCompatTheme_dialogTheme -> AppCompatTheme_dialogTheme
    int AppCompatTheme_dividerHorizontal -> AppCompatTheme_dividerHorizontal
    int AppCompatTheme_dividerVertical -> AppCompatTheme_dividerVertical
    int AppCompatTheme_dropDownListViewStyle -> AppCompatTheme_dropDownListViewStyle
    int AppCompatTheme_dropdownListPreferredItemHeight -> AppCompatTheme_dropdownListPreferredItemHeight
    int AppCompatTheme_editTextBackground -> AppCompatTheme_editTextBackground
    int AppCompatTheme_editTextColor -> AppCompatTheme_editTextColor
    int AppCompatTheme_editTextStyle -> AppCompatTheme_editTextStyle
    int AppCompatTheme_homeAsUpIndicator -> AppCompatTheme_homeAsUpIndicator
    int AppCompatTheme_imageButtonStyle -> AppCompatTheme_imageButtonStyle
    int AppCompatTheme_listChoiceBackgroundIndicator -> AppCompatTheme_listChoiceBackgroundIndicator
    int AppCompatTheme_listDividerAlertDialog -> AppCompatTheme_listDividerAlertDialog
    int AppCompatTheme_listMenuViewStyle -> AppCompatTheme_listMenuViewStyle
    int AppCompatTheme_listPopupWindowStyle -> AppCompatTheme_listPopupWindowStyle
    int AppCompatTheme_listPreferredItemHeight -> AppCompatTheme_listPreferredItemHeight
    int AppCompatTheme_listPreferredItemHeightLarge -> AppCompatTheme_listPreferredItemHeightLarge
    int AppCompatTheme_listPreferredItemHeightSmall -> AppCompatTheme_listPreferredItemHeightSmall
    int AppCompatTheme_listPreferredItemPaddingLeft -> AppCompatTheme_listPreferredItemPaddingLeft
    int AppCompatTheme_listPreferredItemPaddingRight -> AppCompatTheme_listPreferredItemPaddingRight
    int AppCompatTheme_panelBackground -> AppCompatTheme_panelBackground
    int AppCompatTheme_panelMenuListTheme -> AppCompatTheme_panelMenuListTheme
    int AppCompatTheme_panelMenuListWidth -> AppCompatTheme_panelMenuListWidth
    int AppCompatTheme_popupMenuStyle -> AppCompatTheme_popupMenuStyle
    int AppCompatTheme_popupWindowStyle -> AppCompatTheme_popupWindowStyle
    int AppCompatTheme_radioButtonStyle -> AppCompatTheme_radioButtonStyle
    int AppCompatTheme_ratingBarStyle -> AppCompatTheme_ratingBarStyle
    int AppCompatTheme_ratingBarStyleIndicator -> AppCompatTheme_ratingBarStyleIndicator
    int AppCompatTheme_ratingBarStyleSmall -> AppCompatTheme_ratingBarStyleSmall
    int AppCompatTheme_searchViewStyle -> AppCompatTheme_searchViewStyle
    int AppCompatTheme_seekBarStyle -> AppCompatTheme_seekBarStyle
    int AppCompatTheme_selectableItemBackground -> AppCompatTheme_selectableItemBackground
    int AppCompatTheme_selectableItemBackgroundBorderless -> AppCompatTheme_selectableItemBackgroundBorderless
    int AppCompatTheme_spinnerDropDownItemStyle -> AppCompatTheme_spinnerDropDownItemStyle
    int AppCompatTheme_spinnerStyle -> AppCompatTheme_spinnerStyle
    int AppCompatTheme_switchStyle -> AppCompatTheme_switchStyle
    int AppCompatTheme_textAppearanceLargePopupMenu -> AppCompatTheme_textAppearanceLargePopupMenu
    int AppCompatTheme_textAppearanceListItem -> AppCompatTheme_textAppearanceListItem
    int AppCompatTheme_textAppearanceListItemSmall -> AppCompatTheme_textAppearanceListItemSmall
    int AppCompatTheme_textAppearancePopupMenuHeader -> AppCompatTheme_textAppearancePopupMenuHeader
    int AppCompatTheme_textAppearanceSearchResultSubtitle -> AppCompatTheme_textAppearanceSearchResultSubtitle
    int AppCompatTheme_textAppearanceSearchResultTitle -> AppCompatTheme_textAppearanceSearchResultTitle
    int AppCompatTheme_textAppearanceSmallPopupMenu -> AppCompatTheme_textAppearanceSmallPopupMenu
    int AppCompatTheme_textColorAlertDialogListItem -> AppCompatTheme_textColorAlertDialogListItem
    int AppCompatTheme_textColorSearchUrl -> AppCompatTheme_textColorSearchUrl
    int AppCompatTheme_toolbarNavigationButtonStyle -> AppCompatTheme_toolbarNavigationButtonStyle
    int AppCompatTheme_toolbarStyle -> AppCompatTheme_toolbarStyle
    int AppCompatTheme_windowActionBar -> AppCompatTheme_windowActionBar
    int AppCompatTheme_windowActionBarOverlay -> AppCompatTheme_windowActionBarOverlay
    int AppCompatTheme_windowActionModeOverlay -> AppCompatTheme_windowActionModeOverlay
    int AppCompatTheme_windowFixedHeightMajor -> AppCompatTheme_windowFixedHeightMajor
    int AppCompatTheme_windowFixedHeightMinor -> AppCompatTheme_windowFixedHeightMinor
    int AppCompatTheme_windowFixedWidthMajor -> AppCompatTheme_windowFixedWidthMajor
    int AppCompatTheme_windowFixedWidthMinor -> AppCompatTheme_windowFixedWidthMinor
    int AppCompatTheme_windowMinWidthMajor -> AppCompatTheme_windowMinWidthMajor
    int AppCompatTheme_windowMinWidthMinor -> AppCompatTheme_windowMinWidthMinor
    int AppCompatTheme_windowNoTitle -> AppCompatTheme_windowNoTitle
    int[] BottomSheetBehavior_Layout -> BottomSheetBehavior_Layout
    int BottomSheetBehavior_Layout_behavior_hideable -> BottomSheetBehavior_Layout_behavior_hideable
    int BottomSheetBehavior_Layout_behavior_peekHeight -> BottomSheetBehavior_Layout_behavior_peekHeight
    int BottomSheetBehavior_Layout_behavior_skipCollapsed -> BottomSheetBehavior_Layout_behavior_skipCollapsed
    int[] ButtonBarLayout -> ButtonBarLayout
    int ButtonBarLayout_allowStacking -> ButtonBarLayout_allowStacking
    int[] CollapsingToolbarLayout -> CollapsingToolbarLayout
    int[] CollapsingToolbarLayout_Layout -> CollapsingToolbarLayout_Layout
    int CollapsingToolbarLayout_Layout_layout_collapseMode -> CollapsingToolbarLayout_Layout_layout_collapseMode
    int CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier -> CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier
    int CollapsingToolbarLayout_collapsedTitleGravity -> CollapsingToolbarLayout_collapsedTitleGravity
    int CollapsingToolbarLayout_collapsedTitleTextAppearance -> CollapsingToolbarLayout_collapsedTitleTextAppearance
    int CollapsingToolbarLayout_contentScrim -> CollapsingToolbarLayout_contentScrim
    int CollapsingToolbarLayout_expandedTitleGravity -> CollapsingToolbarLayout_expandedTitleGravity
    int CollapsingToolbarLayout_expandedTitleMargin -> CollapsingToolbarLayout_expandedTitleMargin
    int CollapsingToolbarLayout_expandedTitleMarginBottom -> CollapsingToolbarLayout_expandedTitleMarginBottom
    int CollapsingToolbarLayout_expandedTitleMarginEnd -> CollapsingToolbarLayout_expandedTitleMarginEnd
    int CollapsingToolbarLayout_expandedTitleMarginStart -> CollapsingToolbarLayout_expandedTitleMarginStart
    int CollapsingToolbarLayout_expandedTitleMarginTop -> CollapsingToolbarLayout_expandedTitleMarginTop
    int CollapsingToolbarLayout_expandedTitleTextAppearance -> CollapsingToolbarLayout_expandedTitleTextAppearance
    int CollapsingToolbarLayout_scrimAnimationDuration -> CollapsingToolbarLayout_scrimAnimationDuration
    int CollapsingToolbarLayout_scrimVisibleHeightTrigger -> CollapsingToolbarLayout_scrimVisibleHeightTrigger
    int CollapsingToolbarLayout_statusBarScrim -> CollapsingToolbarLayout_statusBarScrim
    int CollapsingToolbarLayout_title -> CollapsingToolbarLayout_title
    int CollapsingToolbarLayout_titleEnabled -> CollapsingToolbarLayout_titleEnabled
    int CollapsingToolbarLayout_toolbarId -> CollapsingToolbarLayout_toolbarId
    int[] ColorStateListItem -> ColorStateListItem
    int ColorStateListItem_alpha -> ColorStateListItem_alpha
    int ColorStateListItem_android_alpha -> ColorStateListItem_android_alpha
    int ColorStateListItem_android_color -> ColorStateListItem_android_color
    int[] CompoundButton -> CompoundButton
    int CompoundButton_android_button -> CompoundButton_android_button
    int CompoundButton_buttonTint -> CompoundButton_buttonTint
    int CompoundButton_buttonTintMode -> CompoundButton_buttonTintMode
    int[] CoordinatorLayout -> CoordinatorLayout
    int[] CoordinatorLayout_Layout -> CoordinatorLayout_Layout
    int CoordinatorLayout_Layout_android_layout_gravity -> CoordinatorLayout_Layout_android_layout_gravity
    int CoordinatorLayout_Layout_layout_anchor -> CoordinatorLayout_Layout_layout_anchor
    int CoordinatorLayout_Layout_layout_anchorGravity -> CoordinatorLayout_Layout_layout_anchorGravity
    int CoordinatorLayout_Layout_layout_behavior -> CoordinatorLayout_Layout_layout_behavior
    int CoordinatorLayout_Layout_layout_dodgeInsetEdges -> CoordinatorLayout_Layout_layout_dodgeInsetEdges
    int CoordinatorLayout_Layout_layout_insetEdge -> CoordinatorLayout_Layout_layout_insetEdge
    int CoordinatorLayout_Layout_layout_keyline -> CoordinatorLayout_Layout_layout_keyline
    int CoordinatorLayout_keylines -> CoordinatorLayout_keylines
    int CoordinatorLayout_statusBarBackground -> CoordinatorLayout_statusBarBackground
    int[] DesignTheme -> DesignTheme
    int DesignTheme_bottomSheetDialogTheme -> DesignTheme_bottomSheetDialogTheme
    int DesignTheme_bottomSheetStyle -> DesignTheme_bottomSheetStyle
    int DesignTheme_textColorError -> DesignTheme_textColorError
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int DrawerArrowToggle_arrowHeadLength -> DrawerArrowToggle_arrowHeadLength
    int DrawerArrowToggle_arrowShaftLength -> DrawerArrowToggle_arrowShaftLength
    int DrawerArrowToggle_barLength -> DrawerArrowToggle_barLength
    int DrawerArrowToggle_color -> DrawerArrowToggle_color
    int DrawerArrowToggle_drawableSize -> DrawerArrowToggle_drawableSize
    int DrawerArrowToggle_gapBetweenBars -> DrawerArrowToggle_gapBetweenBars
    int DrawerArrowToggle_spinBars -> DrawerArrowToggle_spinBars
    int DrawerArrowToggle_thickness -> DrawerArrowToggle_thickness
    int[] FloatingActionButton -> FloatingActionButton
    int[] FloatingActionButton_Behavior_Layout -> FloatingActionButton_Behavior_Layout
    int FloatingActionButton_Behavior_Layout_behavior_autoHide -> FloatingActionButton_Behavior_Layout_behavior_autoHide
    int FloatingActionButton_backgroundTint -> FloatingActionButton_backgroundTint
    int FloatingActionButton_backgroundTintMode -> FloatingActionButton_backgroundTintMode
    int FloatingActionButton_borderWidth -> FloatingActionButton_borderWidth
    int FloatingActionButton_elevation -> FloatingActionButton_elevation
    int FloatingActionButton_fabSize -> FloatingActionButton_fabSize
    int FloatingActionButton_pressedTranslationZ -> FloatingActionButton_pressedTranslationZ
    int FloatingActionButton_rippleColor -> FloatingActionButton_rippleColor
    int FloatingActionButton_useCompatPadding -> FloatingActionButton_useCompatPadding
    int[] ForegroundLinearLayout -> ForegroundLinearLayout
    int ForegroundLinearLayout_android_foreground -> ForegroundLinearLayout_android_foreground
    int ForegroundLinearLayout_android_foregroundGravity -> ForegroundLinearLayout_android_foregroundGravity
    int ForegroundLinearLayout_foregroundInsidePadding -> ForegroundLinearLayout_foregroundInsidePadding
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int LinearLayoutCompat_Layout_android_layout_gravity -> LinearLayoutCompat_Layout_android_layout_gravity
    int LinearLayoutCompat_Layout_android_layout_height -> LinearLayoutCompat_Layout_android_layout_height
    int LinearLayoutCompat_Layout_android_layout_weight -> LinearLayoutCompat_Layout_android_layout_weight
    int LinearLayoutCompat_Layout_android_layout_width -> LinearLayoutCompat_Layout_android_layout_width
    int LinearLayoutCompat_android_baselineAligned -> LinearLayoutCompat_android_baselineAligned
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> LinearLayoutCompat_android_baselineAlignedChildIndex
    int LinearLayoutCompat_android_gravity -> LinearLayoutCompat_android_gravity
    int LinearLayoutCompat_android_orientation -> LinearLayoutCompat_android_orientation
    int LinearLayoutCompat_android_weightSum -> LinearLayoutCompat_android_weightSum
    int LinearLayoutCompat_divider -> LinearLayoutCompat_divider
    int LinearLayoutCompat_dividerPadding -> LinearLayoutCompat_dividerPadding
    int LinearLayoutCompat_measureWithLargestChild -> LinearLayoutCompat_measureWithLargestChild
    int LinearLayoutCompat_showDividers -> LinearLayoutCompat_showDividers
    int[] ListPopupWindow -> ListPopupWindow
    int ListPopupWindow_android_dropDownHorizontalOffset -> ListPopupWindow_android_dropDownHorizontalOffset
    int ListPopupWindow_android_dropDownVerticalOffset -> ListPopupWindow_android_dropDownVerticalOffset
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int MenuView_preserveIconSpacing -> MenuView_preserveIconSpacing
    int MenuView_subMenuArrow -> MenuView_subMenuArrow
    int[] NavigationView -> NavigationView
    int NavigationView_android_background -> NavigationView_android_background
    int NavigationView_android_fitsSystemWindows -> NavigationView_android_fitsSystemWindows
    int NavigationView_android_maxWidth -> NavigationView_android_maxWidth
    int NavigationView_elevation -> NavigationView_elevation
    int NavigationView_headerLayout -> NavigationView_headerLayout
    int NavigationView_itemBackground -> NavigationView_itemBackground
    int NavigationView_itemIconTint -> NavigationView_itemIconTint
    int NavigationView_itemTextAppearance -> NavigationView_itemTextAppearance
    int NavigationView_itemTextColor -> NavigationView_itemTextColor
    int NavigationView_menu -> NavigationView_menu
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int PopupWindowBackgroundState_state_above_anchor -> PopupWindowBackgroundState_state_above_anchor
    int PopupWindow_android_popupAnimationStyle -> PopupWindow_android_popupAnimationStyle
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int PopupWindow_overlapAnchor -> PopupWindow_overlapAnchor
    int[] RecyclerView -> RecyclerView
    int RecyclerView_android_descendantFocusability -> RecyclerView_android_descendantFocusability
    int RecyclerView_android_orientation -> RecyclerView_android_orientation
    int RecyclerView_layoutManager -> RecyclerView_layoutManager
    int RecyclerView_reverseLayout -> RecyclerView_reverseLayout
    int RecyclerView_spanCount -> RecyclerView_spanCount
    int RecyclerView_stackFromEnd -> RecyclerView_stackFromEnd
    int[] ScrimInsetsFrameLayout -> ScrimInsetsFrameLayout
    int ScrimInsetsFrameLayout_insetForeground -> ScrimInsetsFrameLayout_insetForeground
    int[] ScrollingViewBehavior_Layout -> ScrollingViewBehavior_Layout
    int ScrollingViewBehavior_Layout_behavior_overlapTop -> ScrollingViewBehavior_Layout_behavior_overlapTop
    int[] SearchView -> SearchView
    int SearchView_android_focusable -> SearchView_android_focusable
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_closeIcon -> SearchView_closeIcon
    int SearchView_commitIcon -> SearchView_commitIcon
    int SearchView_defaultQueryHint -> SearchView_defaultQueryHint
    int SearchView_goIcon -> SearchView_goIcon
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_layout -> SearchView_layout
    int SearchView_queryBackground -> SearchView_queryBackground
    int SearchView_queryHint -> SearchView_queryHint
    int SearchView_searchHintIcon -> SearchView_searchHintIcon
    int SearchView_searchIcon -> SearchView_searchIcon
    int SearchView_submitBackground -> SearchView_submitBackground
    int SearchView_suggestionRowLayout -> SearchView_suggestionRowLayout
    int SearchView_voiceIcon -> SearchView_voiceIcon
    int[] SnackbarLayout -> SnackbarLayout
    int SnackbarLayout_android_maxWidth -> SnackbarLayout_android_maxWidth
    int SnackbarLayout_elevation -> SnackbarLayout_elevation
    int SnackbarLayout_maxActionInlineWidth -> SnackbarLayout_maxActionInlineWidth
    int[] Spinner -> Spinner
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_entries -> Spinner_android_entries
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_popupTheme -> Spinner_popupTheme
    int[] SwitchCompat -> SwitchCompat
    int SwitchCompat_android_textOff -> SwitchCompat_android_textOff
    int SwitchCompat_android_textOn -> SwitchCompat_android_textOn
    int SwitchCompat_android_thumb -> SwitchCompat_android_thumb
    int SwitchCompat_showText -> SwitchCompat_showText
    int SwitchCompat_splitTrack -> SwitchCompat_splitTrack
    int SwitchCompat_switchMinWidth -> SwitchCompat_switchMinWidth
    int SwitchCompat_switchPadding -> SwitchCompat_switchPadding
    int SwitchCompat_switchTextAppearance -> SwitchCompat_switchTextAppearance
    int SwitchCompat_thumbTextPadding -> SwitchCompat_thumbTextPadding
    int SwitchCompat_thumbTint -> SwitchCompat_thumbTint
    int SwitchCompat_thumbTintMode -> SwitchCompat_thumbTintMode
    int SwitchCompat_track -> SwitchCompat_track
    int SwitchCompat_trackTint -> SwitchCompat_trackTint
    int SwitchCompat_trackTintMode -> SwitchCompat_trackTintMode
    int[] TabItem -> TabItem
    int TabItem_android_icon -> TabItem_android_icon
    int TabItem_android_layout -> TabItem_android_layout
    int TabItem_android_text -> TabItem_android_text
    int[] TabLayout -> TabLayout
    int TabLayout_tabBackground -> TabLayout_tabBackground
    int TabLayout_tabContentStart -> TabLayout_tabContentStart
    int TabLayout_tabGravity -> TabLayout_tabGravity
    int TabLayout_tabIndicatorColor -> TabLayout_tabIndicatorColor
    int TabLayout_tabIndicatorHeight -> TabLayout_tabIndicatorHeight
    int TabLayout_tabMaxWidth -> TabLayout_tabMaxWidth
    int TabLayout_tabMinWidth -> TabLayout_tabMinWidth
    int TabLayout_tabMode -> TabLayout_tabMode
    int TabLayout_tabPadding -> TabLayout_tabPadding
    int TabLayout_tabPaddingBottom -> TabLayout_tabPaddingBottom
    int TabLayout_tabPaddingEnd -> TabLayout_tabPaddingEnd
    int TabLayout_tabPaddingStart -> TabLayout_tabPaddingStart
    int TabLayout_tabPaddingTop -> TabLayout_tabPaddingTop
    int TabLayout_tabSelectedTextColor -> TabLayout_tabSelectedTextColor
    int TabLayout_tabTextAppearance -> TabLayout_tabTextAppearance
    int TabLayout_tabTextColor -> TabLayout_tabTextColor
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_shadowColor -> TextAppearance_android_shadowColor
    int TextAppearance_android_shadowDx -> TextAppearance_android_shadowDx
    int TextAppearance_android_shadowDy -> TextAppearance_android_shadowDy
    int TextAppearance_android_shadowRadius -> TextAppearance_android_shadowRadius
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int TextAppearance_textAllCaps -> TextAppearance_textAllCaps
    int[] TextInputLayout -> TextInputLayout
    int TextInputLayout_android_hint -> TextInputLayout_android_hint
    int TextInputLayout_android_textColorHint -> TextInputLayout_android_textColorHint
    int TextInputLayout_counterEnabled -> TextInputLayout_counterEnabled
    int TextInputLayout_counterMaxLength -> TextInputLayout_counterMaxLength
    int TextInputLayout_counterOverflowTextAppearance -> TextInputLayout_counterOverflowTextAppearance
    int TextInputLayout_counterTextAppearance -> TextInputLayout_counterTextAppearance
    int TextInputLayout_errorEnabled -> TextInputLayout_errorEnabled
    int TextInputLayout_errorTextAppearance -> TextInputLayout_errorTextAppearance
    int TextInputLayout_hintAnimationEnabled -> TextInputLayout_hintAnimationEnabled
    int TextInputLayout_hintEnabled -> TextInputLayout_hintEnabled
    int TextInputLayout_hintTextAppearance -> TextInputLayout_hintTextAppearance
    int TextInputLayout_passwordToggleContentDescription -> TextInputLayout_passwordToggleContentDescription
    int TextInputLayout_passwordToggleDrawable -> TextInputLayout_passwordToggleDrawable
    int TextInputLayout_passwordToggleEnabled -> TextInputLayout_passwordToggleEnabled
    int TextInputLayout_passwordToggleTint -> TextInputLayout_passwordToggleTint
    int TextInputLayout_passwordToggleTintMode -> TextInputLayout_passwordToggleTintMode
    int[] Toolbar -> Toolbar
    int Toolbar_android_gravity -> Toolbar_android_gravity
    int Toolbar_android_minHeight -> Toolbar_android_minHeight
    int Toolbar_buttonGravity -> Toolbar_buttonGravity
    int Toolbar_collapseContentDescription -> Toolbar_collapseContentDescription
    int Toolbar_collapseIcon -> Toolbar_collapseIcon
    int Toolbar_contentInsetEnd -> Toolbar_contentInsetEnd
    int Toolbar_contentInsetEndWithActions -> Toolbar_contentInsetEndWithActions
    int Toolbar_contentInsetLeft -> Toolbar_contentInsetLeft
    int Toolbar_contentInsetRight -> Toolbar_contentInsetRight
    int Toolbar_contentInsetStart -> Toolbar_contentInsetStart
    int Toolbar_contentInsetStartWithNavigation -> Toolbar_contentInsetStartWithNavigation
    int Toolbar_logo -> Toolbar_logo
    int Toolbar_logoDescription -> Toolbar_logoDescription
    int Toolbar_maxButtonHeight -> Toolbar_maxButtonHeight
    int Toolbar_navigationContentDescription -> Toolbar_navigationContentDescription
    int Toolbar_navigationIcon -> Toolbar_navigationIcon
    int Toolbar_popupTheme -> Toolbar_popupTheme
    int Toolbar_subtitle -> Toolbar_subtitle
    int Toolbar_subtitleTextAppearance -> Toolbar_subtitleTextAppearance
    int Toolbar_subtitleTextColor -> Toolbar_subtitleTextColor
    int Toolbar_title -> Toolbar_title
    int Toolbar_titleMargin -> Toolbar_titleMargin
    int Toolbar_titleMarginBottom -> Toolbar_titleMarginBottom
    int Toolbar_titleMarginEnd -> Toolbar_titleMarginEnd
    int Toolbar_titleMarginStart -> Toolbar_titleMarginStart
    int Toolbar_titleMarginTop -> Toolbar_titleMarginTop
    int Toolbar_titleMargins -> Toolbar_titleMargins
    int Toolbar_titleTextAppearance -> Toolbar_titleTextAppearance
    int Toolbar_titleTextColor -> Toolbar_titleTextColor
    int[] View -> View
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int ViewBackgroundHelper_android_background -> ViewBackgroundHelper_android_background
    int ViewBackgroundHelper_backgroundTint -> ViewBackgroundHelper_backgroundTint
    int ViewBackgroundHelper_backgroundTintMode -> ViewBackgroundHelper_backgroundTintMode
    int[] ViewStubCompat -> ViewStubCompat
    int ViewStubCompat_android_id -> ViewStubCompat_android_id
    int ViewStubCompat_android_inflatedId -> ViewStubCompat_android_inflatedId
    int ViewStubCompat_android_layout -> ViewStubCompat_android_layout
    int View_android_focusable -> View_android_focusable
    int View_android_theme -> View_android_theme
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int View_theme -> View_theme
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.murrayc.galaxyzoo.app.QuestionFragment -> com.murrayc.galaxyzoo.app.ao:
    com.murrayc.galaxyzoo.app.QuestionFragment$Callbacks mCallbacks -> a
    java.util.Map mCheckboxButtons -> b
    com.murrayc.galaxyzoo.app.QuestionFragment$ClassificationInProgress mClassificationInProgress -> c
    java.lang.String[] mColumns -> d
    android.database.Cursor mCursor -> e
    boolean mLoaderFinished -> f
    com.murrayc.galaxyzoo.app.QuestionLinearLayout mRootView -> g
    com.murrayc.galaxyzoo.app.QuestionFragment$Callbacks sDummyCallbacks -> h
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>() -> <init>
    void setItemId(java.lang.String) -> d
    android.widget.TableRow addRowToTable(android.app.Activity,android.widget.TableLayout) -> a
    android.widget.Button createAnswerButton(android.app.Activity,com.murrayc.galaxyzoo.app.DecisionTree$Answer) -> b
    void doExamples() -> h
    java.lang.String getCurrentDateTimeAsIso8601() -> i
    void insertButtonInRow(android.content.Context,android.widget.TableRow,android.view.View) -> j
    void onAnswerButtonClicked(java.lang.String,java.lang.String) -> k
    void onAttach(android.content.Context) -> b
    void onCreate(android.os.Bundle) -> c
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> b
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> d
    void onDetach() -> d
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> l
    void onLoaderReset(android.support.v4.content.Loader) -> f
    boolean onOptionsItemSelected(android.view.MenuItem) -> g
    void onPrepareOptionsMenu(android.view.Menu) -> m
    void onSaveInstanceState(android.os.Bundle) -> k
    void onSingletonInitialized() -> g
    void restartClassification() -> n
    void saveClassificationSync(com.murrayc.galaxyzoo.app.QuestionFragment$ClassificationInProgress) -> o
    void showNextQuestion(java.lang.String,java.lang.String) -> p
    void storeAnswer(java.lang.String,java.lang.String) -> q
    void update() -> r
    void updateFromCursor() -> s
    void updateIfReady() -> t
    void wipeClassification() -> u
    void <clinit>() -> <clinit>
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> k
    com.murrayc.galaxyzoo.app.QuestionFragment$Callbacks -get0(com.murrayc.galaxyzoo.app.QuestionFragment) -> v
    void -wrap0(com.murrayc.galaxyzoo.app.QuestionFragment,java.lang.String,java.lang.String) -> w
    void -wrap1(com.murrayc.galaxyzoo.app.QuestionFragment,com.murrayc.galaxyzoo.app.QuestionFragment$ClassificationInProgress) -> x
    void -wrap2(com.murrayc.galaxyzoo.app.QuestionFragment) -> y
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.b.r:
    java.lang.Object custom -> a
    android.support.v4.app.FragmentManagerNonConfig fragments -> b
    android.support.v4.util.SimpleArrayMap loaders -> c
    void <init>() -> <init>
android.support.v7.widget.RecyclerView$1 -> android.support.v7.widget.af:
    android.support.v7.widget.RecyclerView this$0 -> a
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void run() -> run
android.support.v4.view.NestedScrollingChildHelper -> android.support.v4.a.c:
    android.view.View mView -> a
    android.view.ViewParent mNestedScrollingParent -> b
    boolean mIsNestedScrollingEnabled -> c
    int[] mTempNestedScrollConsumed -> d
    void <init>(android.view.View) -> <init>
    void setNestedScrollingEnabled(boolean) -> a
    boolean isNestedScrollingEnabled() -> b
    boolean hasNestedScrollingParent() -> c
    boolean startNestedScroll(int) -> d
    void stopNestedScroll() -> e
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> f
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> g
    boolean dispatchNestedFling(float,float,boolean) -> h
    boolean dispatchNestedPreFling(float,float) -> i
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.d.s:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.design.widget.Snackbar$SnackbarLayout$OnAttachStateChangeListener -> android.support.design.widget.e:
    void onViewAttachedToWindow(android.view.View) -> a
    void onViewDetachedFromWindow(android.view.View) -> b
android.support.v7.view.menu.SubMenuBuilder -> android.support.v7.view.menu.g:
    android.support.v7.view.menu.MenuBuilder mParentMenu -> a
    android.support.v7.view.menu.MenuItemImpl mItem -> b
    void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> <init>
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> s
    boolean isShortcutsVisible() -> u
    android.view.Menu getParentMenu() -> a
    android.view.MenuItem getItem() -> getItem
    void setCallback(android.support.v7.view.menu.MenuBuilder$Callback) -> j
    android.support.v7.view.menu.MenuBuilder getRootMenu() -> ax
    boolean dispatchMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> x
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl) -> az
    boolean collapseItemActionView(android.support.v7.view.menu.MenuItemImpl) -> ba
    java.lang.String getActionViewStatesKey() -> i
android.support.v7.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> android.support.v7.widget.au:
    android.support.v7.widget.ShareActionProvider this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.j.a.o:
    void <init>() -> <init>
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> c
    int getAlpha(android.graphics.drawable.Drawable) -> d
com.android.volley.toolbox.DiskBasedCache$1 -> com.android.a.a.o:
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.d.r:
    void <init>() -> <init>
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.a.a.ar:
    void <init>() -> <init>
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.a.db:
    void <init>() -> <init>
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> b
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> b
com.murrayc.galaxyzoo.app.ClassifyActivity$3 -> com.murrayc.galaxyzoo.app.bx:
    com.murrayc.galaxyzoo.app.ClassifyActivity this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.ClassifyActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.widget.SearchView$SearchAutoComplete -> android.support.v7.widget.SearchView$SearchAutoComplete:
    int mThreshold -> a
    android.support.v7.widget.SearchView mSearchView -> b
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onFinishInflate() -> onFinishInflate
    void setSearchView(android.support.v7.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat -> android.support.v4.widget.y:
    void <init>() -> <init>
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> a
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> b
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> c
android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> android.support.a.a.f:
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> a
    void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
    boolean canApplyTheme() -> canApplyTheme
    int getChangingConfigurations() -> getChangingConfigurations
com.murrayc.galaxyzoo.app.ItemFragment$1 -> com.murrayc.galaxyzoo.app.bh:
    void <init>() -> <init>
    void abandonItem() -> c
    void navigateToList() -> d
android.support.v7.app.WindowDecorActionBar -> android.support.v7.c.au:
    android.view.animation.Interpolator sHideInterpolator -> a
    android.view.animation.Interpolator sShowInterpolator -> b
    boolean ALLOW_SHOW_HIDE_ANIMATIONS -> c
    android.content.Context mContext -> d
    android.content.Context mThemedContext -> e
    android.app.Activity mActivity -> f
    android.app.Dialog mDialog -> g
    android.support.v7.widget.ActionBarOverlayLayout mOverlayLayout -> h
    android.support.v7.widget.ActionBarContainer mContainerView -> i
    android.support.v7.widget.DecorToolbar mDecorToolbar -> j
    android.support.v7.widget.ActionBarContextView mContextView -> k
    android.view.View mContentView -> l
    android.support.v7.widget.ScrollingTabContainerView mTabScrollView -> m
    java.util.ArrayList mTabs -> n
    int mSavedTabPosition -> o
    boolean mDisplayHomeAsUpSet -> p
    android.support.v7.app.WindowDecorActionBar$ActionModeImpl mActionMode -> q
    android.support.v7.view.ActionMode mDeferredDestroyActionMode -> r
    android.support.v7.view.ActionMode$Callback mDeferredModeDestroyCallback -> s
    boolean mLastMenuVisibility -> t
    java.util.ArrayList mMenuVisibilityListeners -> u
    boolean mHasEmbeddedTabs -> v
    int mCurWindowVisibility -> w
    boolean mContentAnimations -> x
    boolean mHiddenByApp -> y
    boolean mHiddenBySystem -> z
    boolean mShowingForMode -> aa
    boolean mNowShowing -> ab
    android.support.v7.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim -> ac
    boolean mShowHideAnimationEnabled -> ad
    boolean mHideOnContentScroll -> ae
    android.support.v4.view.ViewPropertyAnimatorListener mHideListener -> af
    android.support.v4.view.ViewPropertyAnimatorListener mShowListener -> ag
    android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener -> ah
    boolean $assertionsDisabled -> ai
    void <init>(android.app.Activity,boolean) -> <init>
    void <init>(android.app.Dialog) -> <init>
    void init(android.view.View) -> a
    android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View) -> b
    void setElevation(float) -> c
    void onConfigurationChanged(android.content.res.Configuration) -> k
    void setHasEmbeddedTabs(boolean) -> e
    void completeDeferredDestroyActionMode() -> i
    void onWindowVisibilityChanged(int) -> a
    void setShowHideAnimationEnabled(boolean) -> j
    void dispatchMenuVisibilityChanged(boolean) -> l
    void setDisplayHomeAsUpEnabled(boolean) -> a
    void setDisplayShowTitleEnabled(boolean) -> b
    void setHomeButtonEnabled(boolean) -> k
    void setWindowTitle(java.lang.CharSequence) -> q
    boolean requestFocus() -> r
    void setDisplayOptions(int,int) -> b
    int getNavigationMode() -> l
    int getDisplayOptions() -> d
    android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback) -> m
    int getHeight() -> m
    void enableContentAnimations(boolean) -> d
    void showForActionMode() -> o
    void showForSystem() -> b
    void hideForActionMode() -> q
    void hideForSystem() -> c
    void setHideOnContentScrollEnabled(boolean) -> r
    int getHideOffset() -> t
    boolean checkShowingFlags(boolean,boolean,boolean) -> u
    void updateVisibility(boolean) -> v
    void doShow(boolean) -> w
    void doHide(boolean) -> x
    boolean isShowing() -> g
    void animateToMode(boolean) -> y
    boolean shouldAnimateContextView() -> z
    android.content.Context getThemedContext() -> h
    void onContentScrollStarted() -> e
    void onContentScrollStopped() -> f
    boolean collapseActionView() -> p
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> i
    boolean access$000(android.support.v7.app.WindowDecorActionBar) -> aa
    android.view.View access$100(android.support.v7.app.WindowDecorActionBar) -> ab
    android.support.v7.widget.ActionBarContainer access$200(android.support.v7.app.WindowDecorActionBar) -> ac
    android.support.v7.view.ViewPropertyAnimatorCompatSet access$302(android.support.v7.app.WindowDecorActionBar,android.support.v7.view.ViewPropertyAnimatorCompatSet) -> ad
    android.support.v7.widget.ActionBarOverlayLayout access$400(android.support.v7.app.WindowDecorActionBar) -> ae
    boolean access$500(android.support.v7.app.WindowDecorActionBar) -> af
    boolean access$600(android.support.v7.app.WindowDecorActionBar) -> ag
    boolean access$700(boolean,boolean,boolean) -> ah
    android.support.v7.widget.ActionBarContextView access$800(android.support.v7.app.WindowDecorActionBar) -> ai
    android.support.v7.widget.DecorToolbar access$900(android.support.v7.app.WindowDecorActionBar) -> aj
    android.content.Context access$1000(android.support.v7.app.WindowDecorActionBar) -> ak
    void <clinit>() -> <clinit>
android.support.v4.content.res.ConfigurationHelper$GingerbreadImpl -> android.support.v4.d.a.j:
    void <init>() -> <init>
    int getScreenHeightDp(android.content.res.Resources) -> a
    int getScreenWidthDp(android.content.res.Resources) -> b
    int getSmallestScreenWidthDp(android.content.res.Resources) -> c
    void <init>(android.support.v4.content.res.ConfigurationHelper$1) -> <init>
android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> android.support.v4.a.cv:
    void <init>() -> <init>
android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl -> android.support.v4.widget.ak:
    void <init>() -> <init>
    boolean onPull(java.lang.Object,float,float) -> g
android.support.v7.widget.RecyclerView$4 -> android.support.v7.widget.gc:
    android.support.v7.widget.RecyclerView this$0 -> a
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void processDisappeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    void processAppeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    void processPersistent(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
    void unused(android.support.v7.widget.RecyclerView$ViewHolder) -> d
android.support.v4.view.LayoutInflaterCompatHC -> android.support.v4.a.az:
    java.lang.reflect.Field sLayoutInflaterFactory2Field -> a
    boolean sCheckedField -> b
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
    void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> b
android.support.v4.view.ScrollingView -> android.support.v4.a.a:
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
com.squareup.picasso.Callback -> com.squareup.a.a:
    void onSuccess() -> c
    void onError() -> b
android.support.v7.app.AppCompatCallback -> android.support.v7.c.b:
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> k
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> l
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> m
android.support.design.widget.ValueAnimatorCompatImplGingerbread -> android.support.design.widget.bp:
    android.os.Handler sHandler -> a
    long mStartTime -> b
    boolean mIsRunning -> c
    float mAnimatedFraction -> d
    int[] mIntValues -> e
    float[] mFloatValues -> f
    long mDuration -> g
    android.view.animation.Interpolator mInterpolator -> h
    java.util.ArrayList mListeners -> i
    java.util.ArrayList mUpdateListeners -> j
    java.lang.Runnable mRunnable -> k
    void <init>() -> <init>
    void start() -> a
    void startInternal() -> c
    boolean isRunning() -> b
    void setInterpolator(android.view.animation.Interpolator) -> c
    void addListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy) -> d
    void addUpdateListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy) -> e
    void setIntValues(int,int) -> f
    int getAnimatedIntValue() -> g
    void setFloatValues(float,float) -> h
    void setDuration(long) -> i
    void cancel() -> j
    float getAnimatedFraction() -> k
    void end() -> l
    void update() -> d
    void dispatchAnimationUpdate() -> e
    void dispatchAnimationStart() -> f
    void dispatchAnimationCancel() -> h
    void dispatchAnimationEnd() -> i
    void <clinit>() -> <clinit>
android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9$1 -> android.support.v7.c.ae:
    android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9 this$1 -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9) -> <init>
    void onAnimationEnd(android.view.View) -> b
android.support.v7.widget.DefaultItemAnimator$8 -> android.support.v7.widget.hc:
    android.support.v7.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.support.v4.view.ViewPropertyAnimatorCompat val$newViewAnimation -> b
    android.view.View val$newView -> c
    android.support.v7.widget.DefaultItemAnimator this$0 -> d
    void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> <init>
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
android.support.design.widget.CoordinatorLayout -> android.support.design.widget.CoordinatorLayout:
    java.lang.String WIDGET_PACKAGE_NAME -> a
    java.lang.Class[] CONSTRUCTOR_PARAMS -> b
    java.lang.ThreadLocal sConstructors -> c
    java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR -> d
    java.util.List mDependencySortedChildren -> e
    android.support.design.widget.DirectedAcyclicGraph mChildDag -> f
    java.util.List mTempList1 -> g
    java.util.List mTempDependenciesList -> h
    android.graphics.Rect mTempRect1 -> i
    android.graphics.Rect mTempRect2 -> j
    android.graphics.Rect mTempRect3 -> k
    android.graphics.Rect mTempRect4 -> l
    int[] mTempIntPair -> m
    android.graphics.Paint mScrimPaint -> n
    boolean mDisallowInterceptReset -> o
    boolean mIsAttachedToWindow -> p
    int[] mKeylines -> q
    android.view.View mBehaviorTouchView -> r
    android.view.View mNestedScrollingDirectChild -> s
    android.view.View mNestedScrollingTarget -> t
    android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener -> u
    boolean mNeedsPreDrawListener -> v
    android.support.v4.view.WindowInsetsCompat mLastInsets -> w
    boolean mDrawStatusBarBackground -> x
    android.graphics.drawable.Drawable mStatusBarBackground -> y
    android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener -> z
    android.support.v4.view.OnApplyWindowInsetsListener mApplyWindowInsetsListener -> aa
    android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper -> ab
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    android.graphics.drawable.Drawable getStatusBarBackground() -> getStatusBarBackground
    void drawableStateChanged() -> drawableStateChanged
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void setVisibility(int) -> setVisibility
    void setStatusBarBackgroundResource(int) -> setStatusBarBackgroundResource
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    android.support.v4.view.WindowInsetsCompat setWindowInsets(android.support.v4.view.WindowInsetsCompat) -> a
    android.support.v4.view.WindowInsetsCompat getLastWindowInsets() -> getLastWindowInsets
    void resetTouchBehaviors() -> b
    void getTopSortedChildren(java.util.List) -> c
    boolean performIntercept(android.view.MotionEvent,int) -> d
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    int getKeyline(int) -> e
    android.support.design.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> f
    android.support.design.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> g
    void prepareChildren(boolean) -> h
    void getDescendantRect(android.view.View,android.graphics.Rect) -> i
    int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    void onMeasureChild(android.view.View,int,int,int,int) -> j
    void onMeasure(int,int) -> onMeasure
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(android.support.v4.view.WindowInsetsCompat) -> k
    void onLayoutChild(android.view.View,int) -> l
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDraw(android.graphics.Canvas) -> onDraw
    void setFitsSystemWindows(boolean) -> setFitsSystemWindows
    void recordLastChildRect(android.view.View,android.graphics.Rect) -> m
    void getLastChildRect(android.view.View,android.graphics.Rect) -> n
    void getChildRect(android.view.View,boolean,android.graphics.Rect) -> o
    void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,android.support.design.widget.CoordinatorLayout$LayoutParams,int,int) -> p
    void constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> q
    void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> r
    void layoutChildWithAnchor(android.view.View,android.view.View,int) -> s
    void layoutChildWithKeyline(android.view.View,int,int) -> t
    void layoutChild(android.view.View,int) -> u
    int resolveGravity(int) -> v
    int resolveKeylineGravity(int) -> w
    int resolveAnchoredChildGravity(int) -> x
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void onChildViewsChanged(int) -> y
    void offsetChildByInset(android.view.View,android.graphics.Rect,int) -> z
    void setInsetOffsetX(android.view.View,int) -> setInsetOffsetX
    void setInsetOffsetY(android.view.View,int) -> setInsetOffsetY
    void dispatchDependentViewsChanged(android.view.View) -> aa
    java.util.List getDependencies(android.view.View) -> ab
    java.util.List getDependents(android.view.View) -> ac
    java.util.List getDependencySortedChildren() -> getDependencySortedChildren
    void ensurePreDrawListener() -> ad
    boolean hasDependencies(android.view.View) -> ae
    void addPreDrawListener() -> af
    void removePreDrawListener() -> ag
    void offsetChildToAnchor(android.view.View,int) -> ah
    boolean isPointInChildBounds(android.view.View,int,int) -> ai
    android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.support.design.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void setupForInsets() -> setupForInsets
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$OnHierarchyChangeListener access$300(android.support.design.widget.CoordinatorLayout) -> aj
    void <clinit>() -> <clinit>
com.murrayc.galaxyzoo.app.UiUtils -> com.murrayc.galaxyzoo.app.ay:
    boolean warnAboutMissingNetwork(android.app.Activity,android.view.View) -> a
    void warnAboutNoNetworkConnection(android.view.View,com.murrayc.galaxyzoo.app.provider.HttpUtils$NoNetworkException) -> b
    void showToolbar(android.support.v7.app.AppCompatActivity) -> c
    void showLoggedInMessage(android.view.View) -> d
    void openDiscussionPage(android.content.Context,java.lang.String) -> e
    boolean warnAboutMissingNetwork(android.app.Activity,android.view.View,boolean) -> f
    int getPxForDpResource(android.content.Context,int) -> g
    android.os.Bundle getTransitionOptionsBundle(android.app.Activity,android.view.View) -> h
    void <init>() -> <init>
    void warnAboutNoNetworkConnection(android.view.View,boolean) -> i
    void warnAboutNoNetworkConnectionAtAll(android.view.View) -> j
    void warnAboutNoWifiNetworkConnection(android.view.View) -> k
android.support.v4.view.ViewCompatLollipop$1 -> android.support.v4.a.am:
    android.support.v4.view.ViewCompatLollipop$OnApplyWindowInsetsListenerBridge val$bridge -> a
    void <init>(android.support.v4.view.ViewCompatLollipop$OnApplyWindowInsetsListenerBridge) -> <init>
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.d.k:
    void <init>() -> <init>
    void startActivities(android.content.Context,android.content.Intent[]) -> a
android.support.v4.app.AppOpsManagerCompat$1 -> android.support.v4.b.bv:
android.support.v4.os.AsyncTaskCompatHoneycomb -> android.support.v4.f.g:
    void <init>() -> <init>
    void executeParallel(android.os.AsyncTask,java.lang.Object[]) -> a
android.support.v4.os.CancellationSignal -> android.support.v4.f.a:
    boolean mIsCanceled -> a
    android.support.v4.os.CancellationSignal$OnCancelListener mOnCancelListener -> b
    java.lang.Object mCancellationSignalObj -> c
    boolean mCancelInProgress -> d
    void <init>() -> <init>
    boolean isCanceled() -> a
    void throwIfCanceled() -> b
    void cancel() -> c
    java.lang.Object getCancellationSignalObject() -> d
android.support.design.widget.FloatingActionButtonGingerbread$ElevateToTranslationZAnimation -> android.support.design.widget.as:
    android.support.design.widget.FloatingActionButtonGingerbread this$0 -> a
    void <init>(android.support.design.widget.FloatingActionButtonGingerbread) -> <init>
    float getTargetShadowSize() -> a
    void <init>(android.support.design.widget.FloatingActionButtonGingerbread,android.support.design.widget.FloatingActionButtonGingerbread$1) -> <init>
android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9 -> android.support.v7.c.bh:
    android.support.v7.view.ActionMode$Callback mWrapped -> a
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> b
    void <init>(android.support.v7.app.AppCompatDelegateImplV9,android.support.v7.view.ActionMode$Callback) -> <init>
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> a
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> b
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> c
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> d
android.support.design.widget.AppBarLayout -> android.support.design.widget.k:
    int mTotalScrollRange -> a
    int mDownPreScrollRange -> b
    int mDownScrollRange -> c
    boolean mHaveChildWithInterpolator -> d
    int mPendingAction -> e
    android.support.v4.view.WindowInsetsCompat mLastInsets -> f
    java.util.List mListeners -> g
    boolean mCollapsible -> h
    boolean mCollapsed -> i
    int[] mTmpStatesArray -> j
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void updateCollapsible() -> a
    void invalidateScrollRanges() -> b
    void setOrientation(int) -> setOrientation
    void setExpanded(boolean) -> setExpanded
    void setExpanded(boolean,boolean) -> setExpanded
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.design.widget.AppBarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean hasChildWithInterpolator() -> c
    int getTotalScrollRange() -> getTotalScrollRange
    boolean hasScrollableChildren() -> d
    int getUpNestedPreScrollRange() -> getUpNestedPreScrollRange
    int getDownNestedPreScrollRange() -> getDownNestedPreScrollRange
    int getDownNestedScrollRange() -> getDownNestedScrollRange
    void dispatchOffsetUpdates(int) -> e
    int getMinimumHeightForVisibleOverlappingContent() -> getMinimumHeightForVisibleOverlappingContent
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    boolean setCollapsibleState(boolean) -> f
    boolean setCollapsedState(boolean) -> g
    void setTargetElevation(float) -> setTargetElevation
    float getTargetElevation() -> getTargetElevation
    int getPendingAction() -> getPendingAction
    void resetPendingAction() -> h
    int getTopInset() -> getTopInset
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean access$200(android.support.design.widget.AppBarLayout) -> i
    int access$300(android.support.design.widget.AppBarLayout) -> j
    int access$400(android.support.design.widget.AppBarLayout) -> k
    int access$500(android.support.design.widget.AppBarLayout) -> l
    int access$600(android.support.design.widget.AppBarLayout) -> m
    void access$700(android.support.design.widget.AppBarLayout) -> n
    void access$800(android.support.design.widget.AppBarLayout,int) -> o
    boolean access$900(android.support.design.widget.AppBarLayout) -> p
    boolean access$1000(android.support.design.widget.AppBarLayout,boolean) -> q
android.support.design.widget.ValueAnimatorCompat -> android.support.design.widget.cr:
    android.support.design.widget.ValueAnimatorCompat$Impl mImpl -> a
    void <init>(android.support.design.widget.ValueAnimatorCompat$Impl) -> <init>
    void start() -> a
    boolean isRunning() -> b
    void setInterpolator(android.view.animation.Interpolator) -> c
    void addUpdateListener(android.support.design.widget.ValueAnimatorCompat$AnimatorUpdateListener) -> d
    void addListener(android.support.design.widget.ValueAnimatorCompat$AnimatorListener) -> e
    void setIntValues(int,int) -> f
    int getAnimatedIntValue() -> g
    void setFloatValues(float,float) -> h
    void setDuration(long) -> i
    void cancel() -> j
    float getAnimatedFraction() -> k
    void end() -> l
android.support.annotation.CallSuper -> android.support.annotation.d:
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.s:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> b
    boolean isFinished(java.lang.Object) -> c
    boolean onRelease(java.lang.Object) -> d
    boolean onAbsorb(java.lang.Object,int) -> e
    boolean draw(java.lang.Object,android.graphics.Canvas) -> f
    boolean onPull(java.lang.Object,float,float) -> g
android.support.v7.widget.SearchView$AutoCompleteTextViewReflector -> android.support.v7.widget.dm:
    java.lang.reflect.Method doBeforeTextChanged -> a
    java.lang.reflect.Method doAfterTextChanged -> b
    java.lang.reflect.Method ensureImeVisible -> c
    java.lang.reflect.Method showSoftInputUnchecked -> d
    void <init>() -> <init>
    void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> a
    void doAfterTextChanged(android.widget.AutoCompleteTextView) -> b
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> c
android.support.v7.widget.ActionMenuView -> android.support.v7.widget.ActionMenuView:
    android.support.v7.view.menu.MenuBuilder mMenu -> a
    android.content.Context mPopupContext -> b
    int mPopupTheme -> c
    boolean mReserveOverflow -> d
    android.support.v7.widget.ActionMenuPresenter mPresenter -> e
    android.support.v7.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> f
    android.support.v7.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> g
    boolean mFormatItems -> h
    int mFormatItemsWidth -> i
    int mMinCellSize -> j
    int mGeneratedItemPadding -> k
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener -> l
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setPopupTheme(int) -> setPopupTheme
    int getPopupTheme() -> getPopupTheme
    void setPresenter(android.support.v7.widget.ActionMenuPresenter) -> setPresenter
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setOnMenuItemClickListener(android.support.v7.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> a
    int measureChildForCells(android.view.View,int,int,int,int) -> b
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    boolean isOverflowReserved() -> c
    void setOverflowReserved(boolean) -> setOverflowReserved
    android.support.v7.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.v7.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> d
    boolean invokeItem(android.support.v7.view.menu.MenuItemImpl) -> e
    int getWindowAnimations() -> getWindowAnimations
    void initialize(android.support.v7.view.menu.MenuBuilder) -> a
    android.view.Menu getMenu() -> getMenu
    void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    android.support.v7.view.menu.MenuBuilder peekMenu() -> f
    boolean showOverflowMenu() -> g
    boolean hideOverflowMenu() -> h
    boolean isOverflowMenuShowing() -> i
    boolean isOverflowMenuShowPending() -> j
    void dismissPopupMenus() -> k
    boolean hasSupportDividerBeforeChildAt(int) -> l
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener access$200(android.support.v7.widget.ActionMenuView) -> m
    android.support.v7.view.menu.MenuBuilder$Callback access$300(android.support.v7.widget.ActionMenuView) -> n
android.support.v7.app.ToolbarActionBar$ActionMenuPresenterCallback -> android.support.v7.c.af:
    boolean mClosingActionMenu -> a
    android.support.v7.app.ToolbarActionBar this$0 -> b
    void <init>(android.support.v7.app.ToolbarActionBar) -> <init>
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> b
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> a
    void <init>(android.support.v7.app.ToolbarActionBar,android.support.v7.app.ToolbarActionBar$1) -> <init>
android.support.v7.widget.DropDownListView -> android.support.v7.widget.ei:
    boolean mListSelectionHidden -> a
    boolean mHijackFocus -> b
    boolean mDrawsInPressedState -> c
    android.support.v4.view.ViewPropertyAnimatorCompat mClickAnimation -> d
    android.support.v4.widget.ListViewAutoScrollHelper mScrollHelper -> e
    void <init>(android.content.Context,boolean) -> <init>
    boolean onForwardedEvent(android.view.MotionEvent,int) -> a
    void clickPressedItem(android.view.View,int) -> a
    void setListSelectionHidden(boolean) -> setListSelectionHidden
    void clearPressedItem() -> d
    void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    boolean touchModeDrawsInPressedStateCompat() -> c
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
android.support.design.widget.BottomSheetBehavior$2 -> android.support.design.widget.bx:
    android.support.design.widget.BottomSheetBehavior this$0 -> a
    void <init>(android.support.design.widget.BottomSheetBehavior) -> <init>
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> i
    void onViewDragStateChanged(int) -> c
    void onViewReleased(android.view.View,float,float) -> d
    int clampViewPositionVertical(android.view.View,int,int) -> h
    int clampViewPositionHorizontal(android.view.View,int,int) -> g
    int getViewVerticalDragRange(android.view.View) -> a
android.support.v7.widget.FitWindowsFrameLayout -> android.support.v7.widget.FitWindowsFrameLayout:
    android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> a
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setOnFitSystemWindowsListener(android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
com.murrayc.galaxyzoo.app.LoginUtils$LoginDetails -> com.murrayc.galaxyzoo.app.ab:
    java.lang.String name -> a
    boolean isAnonymous -> b
    java.lang.String authApiKey -> c
    void <init>() -> <init>
android.support.v4.widget.CompoundButtonCompat$LollipopCompoundButtonImpl -> android.support.v4.widget.ad:
    void <init>() -> <init>
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> a
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> b
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.a.n:
    void onSubUiVisibilityChanged(boolean) -> t
android.support.v7.widget.Toolbar$3 -> android.support.v7.widget.ea:
    android.support.v7.widget.Toolbar this$0 -> a
    void <init>(android.support.v7.widget.Toolbar) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.a.ed:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.app.BackStackRecord$2 -> android.support.v4.b.bk:
    android.view.View val$sceneRoot -> a
    java.lang.Object val$sharedElementTransition -> b
    java.util.ArrayList val$sharedElementTargets -> c
    android.support.v4.app.BackStackRecord$TransitionState val$state -> d
    java.lang.Object val$enterTransition -> e
    java.lang.Object val$exitTransition -> f
    boolean val$isBack -> g
    android.support.v4.app.Fragment val$inFragment -> h
    android.support.v4.app.Fragment val$outFragment -> i
    android.support.v4.app.BackStackRecord this$0 -> j
    void <init>(android.support.v4.app.BackStackRecord,android.view.View,java.lang.Object,java.util.ArrayList,android.support.v4.app.BackStackRecord$TransitionState,java.lang.Object,java.lang.Object,boolean,android.support.v4.app.Fragment,android.support.v4.app.Fragment) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.v4.view.NestedScrollingParentHelper -> android.support.v4.a.eh:
    android.view.ViewGroup mViewGroup -> a
    int mNestedScrollAxes -> b
    void <init>(android.view.ViewGroup) -> <init>
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> a
    int getNestedScrollAxes() -> b
    void onStopNestedScroll(android.view.View) -> c
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> android.support.v4.a.dm:
    java.util.WeakHashMap mLayerMap -> a
    void <init>() -> <init>
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> a
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> b
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> c
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> d
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> e
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> f
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> g
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> h
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> i
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> j
android.support.v7.widget.Toolbar$2 -> android.support.v7.widget.bq:
    android.support.v7.widget.Toolbar this$0 -> a
    void <init>(android.support.v7.widget.Toolbar) -> <init>
    void run() -> run
com.android.volley.toolbox.BasicNetwork -> com.android.a.a.n:
    boolean DEBUG -> a
    int SLOW_REQUEST_THRESHOLD_MS -> b
    int DEFAULT_POOL_SIZE -> c
    com.android.volley.toolbox.HttpStack mHttpStack -> d
    com.android.volley.toolbox.ByteArrayPool mPool -> e
    void <init>(com.android.volley.toolbox.HttpStack) -> <init>
    void <init>(com.android.volley.toolbox.HttpStack,com.android.volley.toolbox.ByteArrayPool) -> <init>
    com.android.volley.NetworkResponse performRequest(com.android.volley.Request) -> a
    void logSlowRequests(long,com.android.volley.Request,byte[],StatusLine) -> b
    void attemptRetryOnException(java.lang.String,com.android.volley.Request,com.android.volley.VolleyError) -> c
    void addCacheHeaders(java.util.Map,com.android.volley.Cache$Entry) -> d
    byte[] entityToBytes(HttpEntity) -> e
    java.util.Map convertHeaders(Header[]) -> f
    void <clinit>() -> <clinit>
android.support.v7.widget.DefaultItemAnimator$6 -> android.support.v7.widget.gm:
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> a
    int val$deltaX -> b
    int val$deltaY -> c
    android.support.v4.view.ViewPropertyAnimatorCompat val$animation -> d
    android.support.v7.widget.DefaultItemAnimator this$0 -> e
    void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,int,int,android.support.v4.view.ViewPropertyAnimatorCompat) -> <init>
    void onAnimationStart(android.view.View) -> a
    void onAnimationCancel(android.view.View) -> c
    void onAnimationEnd(android.view.View) -> b
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21 -> android.support.v4.b.aj:
    android.support.v4.app.ActivityOptionsCompat21 mImpl -> a
    void <init>(android.support.v4.app.ActivityOptionsCompat21) -> <init>
    android.os.Bundle toBundle() -> b
android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl -> android.support.v4.a.du:
    void <init>() -> <init>
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> a
android.support.v4.view.NestedScrollingParent -> android.support.v4.a.dy:
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
android.support.graphics.drawable.VectorDrawableCompat$VFullPath -> android.support.a.a.r:
    int[] mThemeAttrs -> a
    int mStrokeColor -> b
    float mStrokeWidth -> c
    int mFillColor -> d
    float mStrokeAlpha -> e
    int mFillRule -> f
    float mFillAlpha -> g
    float mTrimPathStart -> h
    float mTrimPathEnd -> i
    float mTrimPathOffset -> j
    android.graphics.Paint$Cap mStrokeLineCap -> k
    android.graphics.Paint$Join mStrokeLineJoin -> l
    float mStrokeMiterlimit -> m
    void <init>() -> <init>
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> a
    android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> b
    void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> c
    void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> d
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.d.ac:
    java.lang.Object[] mParams -> a
    void <init>() -> <init>
    void <init>(android.support.v4.content.ModernAsyncTask$1) -> <init>
android.support.v4.graphics.drawable.DrawableWrapperLollipop$DrawableWrapperStateLollipop -> android.support.v4.j.a.l:
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
android.support.v4.view.WindowInsetsCompatApi21 -> android.support.v4.a.ak:
    void <init>() -> <init>
    boolean isConsumed(java.lang.Object) -> a
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.bd:
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.database.Cursor mCursor -> c
    android.content.Context mContext -> d
    int mRowIDColumn -> e
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    android.support.v4.widget.CursorFilter mCursorFilter -> h
    android.widget.FilterQueryProvider mFilterQueryProvider -> i
    void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> e
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> f
    void changeCursor(android.database.Cursor) -> d
    android.database.Cursor swapCursor(android.database.Cursor) -> b
    java.lang.CharSequence convertToString(android.database.Cursor) -> l
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> b
    android.widget.Filter getFilter() -> getFilter
    void onContentChanged() -> c
com.murrayc.galaxyzoo.app.provider.ItemsContentProvider$DatabaseHelper -> com.murrayc.galaxyzoo.app.provider.h:
    void <init>(android.content.Context) -> <init>
    void createIndex(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String) -> a
    void createTable(android.database.sqlite.SQLiteDatabase) -> b
    void dropTable(android.database.sqlite.SQLiteDatabase,java.lang.String) -> c
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.a.a.e:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> b
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> c
    java.lang.Object findFocus(int) -> d
com.murrayc.galaxyzoo.app.syncadapter.SubjectAdder$1 -> com.murrayc.galaxyzoo.app.syncadapter.h:
    com.murrayc.galaxyzoo.app.syncadapter.SubjectAdder this$0 -> a
    java.lang.String val$uriFileToCache -> b
    android.net.Uri val$itemUri -> c
    com.murrayc.galaxyzoo.app.provider.ImageType val$imageType -> d
    void <init>(com.murrayc.galaxyzoo.app.syncadapter.SubjectAdder,java.lang.String,android.net.Uri,com.murrayc.galaxyzoo.app.provider.ImageType) -> <init>
    void onResponse(java.lang.Boolean) -> a
    void onResponse(java.lang.Object) -> b
android.support.v4.view.ViewCompatKitKat -> android.support.v4.a.bq:
    void <init>() -> <init>
    void setAccessibilityLiveRegion(android.view.View,int) -> a
    boolean isLaidOut(android.view.View) -> b
    boolean isAttachedToWindow(android.view.View) -> c
android.support.v7.widget.DefaultItemAnimator$MoveInfo -> android.support.v7.widget.ge:
    android.support.v7.widget.RecyclerView$ViewHolder holder -> a
    int fromX -> b
    int fromY -> c
    int toX -> d
    int toY -> e
    void <init>(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    void <init>(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int,android.support.v7.widget.DefaultItemAnimator$1) -> <init>
android.support.v7.view.menu.MenuPopupHelper$1 -> android.support.v7.view.menu.j:
    android.support.v7.view.menu.MenuPopupHelper this$0 -> a
    void <init>(android.support.v7.view.menu.MenuPopupHelper) -> <init>
    void onDismiss() -> onDismiss
android.support.v7.app.ActionBar$Tab -> android.support.v7.c.f:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getIcon() -> a
    java.lang.CharSequence getText() -> b
    android.view.View getCustomView() -> c
    void select() -> d
    java.lang.CharSequence getContentDescription() -> e
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.ay:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void <init>(android.support.v4.widget.CursorAdapter) -> <init>
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void <init>(android.support.v4.widget.CursorAdapter,android.support.v4.widget.CursorAdapter$1) -> <init>
android.support.v7.app.AlertController$AlertParams$4 -> android.support.v7.c.bj:
    android.widget.ListView val$listView -> a
    android.support.v7.app.AlertController val$dialog -> b
    android.support.v7.app.AlertController$AlertParams this$0 -> c
    void <init>(android.support.v7.app.AlertController$AlertParams,android.widget.ListView,android.support.v7.app.AlertController) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.android.volley.NoConnectionError -> com.android.a.y:
    void <init>() -> <init>
    void <init>(java.lang.Throwable) -> <init>
android.support.v7.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> android.support.v7.view.menu.ak:
    android.support.v7.view.menu.MenuItemWrapperICS this$0 -> a
    void <init>(android.support.v7.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.a.do:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> a
android.support.v7.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> android.support.v7.view.menu.ac:
    android.support.v7.view.menu.MenuItemWrapperICS this$0 -> a
    void <init>(android.support.v7.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    boolean onMenuItemActionExpand(android.view.MenuItem) -> a
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> b
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.b.y:
    void <init>() -> <init>
android.support.v4.content.ContextCompat -> android.support.v4.d.b:
    java.lang.Object sLock -> a
    android.util.TypedValue sTempValue -> b
    void <init>() -> <init>
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> b
    android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> c
    int checkSelfPermission(android.content.Context,java.lang.String) -> d
    void <clinit>() -> <clinit>
android.support.v4.view.KeyEventCompat -> android.support.v4.a.cb:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean isCtrlPressed(android.view.KeyEvent) -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.graphics.drawable.PathParser$ExtractFloatResult -> android.support.a.a.i:
    int mEndPosition -> a
    boolean mEndWithNegOrDot -> b
    void <init>() -> <init>
    void <init>(android.support.graphics.drawable.PathParser$1) -> <init>
android.support.v7.widget.DrawableUtils -> android.support.v7.widget.fo:
    android.graphics.Rect INSETS_NONE -> a
    java.lang.Class sInsetsClazz -> b
    void <init>() -> <init>
    void fixDrawable(android.graphics.drawable.Drawable) -> a
    boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> b
    void fixVectorDrawableTinting(android.graphics.drawable.Drawable) -> c
    android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> d
    void <clinit>() -> <clinit>
android.support.v4.util.ContainerHelpers -> android.support.v4.c.q:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    void <init>() -> <init>
    int idealIntArraySize(int) -> a
    int idealLongArraySize(int) -> b
    int idealByteArraySize(int) -> c
    boolean equal(java.lang.Object,java.lang.Object) -> d
    int binarySearch(int[],int,int) -> e
    int binarySearch(long[],int,long) -> f
    void <clinit>() -> <clinit>
android.support.v4.view.WindowInsetsCompatApi20 -> android.support.v4.a.bt:
    void <init>() -> <init>
    int getSystemWindowInsetBottom(java.lang.Object) -> a
    int getSystemWindowInsetLeft(java.lang.Object) -> b
    int getSystemWindowInsetRight(java.lang.Object) -> c
    int getSystemWindowInsetTop(java.lang.Object) -> d
    java.lang.Object replaceSystemWindowInsets(java.lang.Object,int,int,int,int) -> e
android.support.v4.view.ViewCompat$Api24ViewCompatImpl -> android.support.v4.a.t:
    void <init>() -> <init>
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.a.cm:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl,android.support.v4.view.AccessibilityDelegateCompat) -> <init>
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> c
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> e
    void sendAccessibilityEvent(android.view.View,int) -> f
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> g
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> h
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> i
android.support.v7.widget.LinearLayoutManager$LayoutChunkResult -> android.support.v7.widget.aq:
    int mConsumed -> a
    boolean mFinished -> b
    boolean mIgnoreConsumed -> c
    boolean mFocusable -> d
    void <init>() -> <init>
    void resetInternal() -> a
android.support.v7.widget.AppCompatTextHelper -> android.support.v7.widget.ak:
    android.widget.TextView mView -> a
    android.support.v7.widget.TintInfo mDrawableLeftTint -> b
    android.support.v7.widget.TintInfo mDrawableTopTint -> c
    android.support.v7.widget.TintInfo mDrawableRightTint -> d
    android.support.v7.widget.TintInfo mDrawableBottomTint -> e
    android.support.v7.widget.AppCompatTextHelper create(android.widget.TextView) -> a
    void <init>(android.widget.TextView) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> b
    void onSetTextAppearance(android.content.Context,int) -> c
    void setAllCaps(boolean) -> d
    void applyCompoundDrawablesTints() -> e
    void applyCompoundDrawableTint(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo) -> f
    android.support.v7.widget.TintInfo createTintInfo(android.content.Context,android.support.v7.widget.AppCompatDrawableManager,int) -> g
com.murrayc.galaxyzoo.app.LoginActivity$UserLoginTask -> com.murrayc.galaxyzoo.app.h:
    java.lang.Exception exceptionCaught -> a
    java.lang.String mPassword -> b
    java.lang.String mUsername -> c
    com.murrayc.galaxyzoo.app.LoginActivity this$0 -> d
    void <init>(com.murrayc.galaxyzoo.app.LoginActivity,java.lang.String,java.lang.String) -> <init>
    com.murrayc.galaxyzoo.app.LoginUtils$LoginResult doInBackground(java.lang.Void[]) -> a
    void onCancelled() -> onCancelled
    void onPostExecute(com.murrayc.galaxyzoo.app.LoginUtils$LoginResult) -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.squareup.picasso.Picasso$1 -> com.squareup.a.bq:
    void <init>(android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.murrayc.galaxyzoo.app.provider.Item -> com.murrayc.galaxyzoo.app.provider.l:
    android.net.Uri CONTENT_URI -> a
    android.net.Uri ITEMS_URI -> b
    android.net.Uri FILE_URI -> c
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v7.widget.Toolbar$SavedState$1 -> android.support.v7.widget.gb:
    void <init>() -> <init>
    android.support.v7.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    android.support.v7.widget.Toolbar$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> b
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.design.R$attr -> android.support.design.b:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarPopupTheme -> actionBarPopupTheme
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarTheme -> actionBarTheme
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionOverflowMenuStyle -> actionOverflowMenuStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activityChooserViewStyle -> activityChooserViewStyle
    int alertDialogButtonGroupStyle -> alertDialogButtonGroupStyle
    int alertDialogCenterButtons -> alertDialogCenterButtons
    int alertDialogStyle -> alertDialogStyle
    int alertDialogTheme -> alertDialogTheme
    int allowStacking -> allowStacking
    int alpha -> alpha
    int arrowHeadLength -> arrowHeadLength
    int arrowShaftLength -> arrowShaftLength
    int autoCompleteTextViewStyle -> autoCompleteTextViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int backgroundTint -> backgroundTint
    int backgroundTintMode -> backgroundTintMode
    int barLength -> barLength
    int behavior_autoHide -> behavior_autoHide
    int behavior_hideable -> behavior_hideable
    int behavior_overlapTop -> behavior_overlapTop
    int behavior_peekHeight -> behavior_peekHeight
    int behavior_skipCollapsed -> behavior_skipCollapsed
    int borderWidth -> borderWidth
    int borderlessButtonStyle -> borderlessButtonStyle
    int bottomSheetDialogTheme -> bottomSheetDialogTheme
    int bottomSheetStyle -> bottomSheetStyle
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarNegativeButtonStyle -> buttonBarNegativeButtonStyle
    int buttonBarNeutralButtonStyle -> buttonBarNeutralButtonStyle
    int buttonBarPositiveButtonStyle -> buttonBarPositiveButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int buttonGravity -> buttonGravity
    int buttonPanelSideLayout -> buttonPanelSideLayout
    int buttonStyle -> buttonStyle
    int buttonStyleSmall -> buttonStyleSmall
    int buttonTint -> buttonTint
    int buttonTintMode -> buttonTintMode
    int checkboxStyle -> checkboxStyle
    int checkedTextViewStyle -> checkedTextViewStyle
    int closeIcon -> closeIcon
    int closeItemLayout -> closeItemLayout
    int collapseContentDescription -> collapseContentDescription
    int collapseIcon -> collapseIcon
    int collapsedTitleGravity -> collapsedTitleGravity
    int collapsedTitleTextAppearance -> collapsedTitleTextAppearance
    int color -> color
    int colorAccent -> colorAccent
    int colorBackgroundFloating -> colorBackgroundFloating
    int colorButtonNormal -> colorButtonNormal
    int colorControlActivated -> colorControlActivated
    int colorControlHighlight -> colorControlHighlight
    int colorControlNormal -> colorControlNormal
    int colorPrimary -> colorPrimary
    int colorPrimaryDark -> colorPrimaryDark
    int colorSwitchThumbNormal -> colorSwitchThumbNormal
    int commitIcon -> commitIcon
    int contentInsetEnd -> contentInsetEnd
    int contentInsetEndWithActions -> contentInsetEndWithActions
    int contentInsetLeft -> contentInsetLeft
    int contentInsetRight -> contentInsetRight
    int contentInsetStart -> contentInsetStart
    int contentInsetStartWithNavigation -> contentInsetStartWithNavigation
    int contentScrim -> contentScrim
    int controlBackground -> controlBackground
    int counterEnabled -> counterEnabled
    int counterMaxLength -> counterMaxLength
    int counterOverflowTextAppearance -> counterOverflowTextAppearance
    int counterTextAppearance -> counterTextAppearance
    int customNavigationLayout -> customNavigationLayout
    int defaultQueryHint -> defaultQueryHint
    int dialogPreferredPadding -> dialogPreferredPadding
    int dialogTheme -> dialogTheme
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int drawableSize -> drawableSize
    int drawerArrowStyle -> drawerArrowStyle
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int editTextBackground -> editTextBackground
    int editTextColor -> editTextColor
    int editTextStyle -> editTextStyle
    int elevation -> elevation
    int errorEnabled -> errorEnabled
    int errorTextAppearance -> errorTextAppearance
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int expanded -> expanded
    int expandedTitleGravity -> expandedTitleGravity
    int expandedTitleMargin -> expandedTitleMargin
    int expandedTitleMarginBottom -> expandedTitleMarginBottom
    int expandedTitleMarginEnd -> expandedTitleMarginEnd
    int expandedTitleMarginStart -> expandedTitleMarginStart
    int expandedTitleMarginTop -> expandedTitleMarginTop
    int expandedTitleTextAppearance -> expandedTitleTextAppearance
    int fabSize -> fabSize
    int foregroundInsidePadding -> foregroundInsidePadding
    int gapBetweenBars -> gapBetweenBars
    int goIcon -> goIcon
    int headerLayout -> headerLayout
    int height -> height
    int hideOnContentScroll -> hideOnContentScroll
    int hintAnimationEnabled -> hintAnimationEnabled
    int hintEnabled -> hintEnabled
    int hintTextAppearance -> hintTextAppearance
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int imageButtonStyle -> imageButtonStyle
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int insetForeground -> insetForeground
    int isLightTheme -> isLightTheme
    int itemBackground -> itemBackground
    int itemIconTint -> itemIconTint
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int itemTextColor -> itemTextColor
    int keylines -> keylines
    int layout -> layout
    int layoutManager -> layoutManager
    int layout_anchor -> layout_anchor
    int layout_anchorGravity -> layout_anchorGravity
    int layout_behavior -> layout_behavior
    int layout_collapseMode -> layout_collapseMode
    int layout_collapseParallaxMultiplier -> layout_collapseParallaxMultiplier
    int layout_dodgeInsetEdges -> layout_dodgeInsetEdges
    int layout_insetEdge -> layout_insetEdge
    int layout_keyline -> layout_keyline
    int layout_scrollFlags -> layout_scrollFlags
    int layout_scrollInterpolator -> layout_scrollInterpolator
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listDividerAlertDialog -> listDividerAlertDialog
    int listItemLayout -> listItemLayout
    int listLayout -> listLayout
    int listMenuViewStyle -> listMenuViewStyle
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int logoDescription -> logoDescription
    int maxActionInlineWidth -> maxActionInlineWidth
    int maxButtonHeight -> maxButtonHeight
    int measureWithLargestChild -> measureWithLargestChild
    int menu -> menu
    int multiChoiceItemLayout -> multiChoiceItemLayout
    int navigationContentDescription -> navigationContentDescription
    int navigationIcon -> navigationIcon
    int navigationMode -> navigationMode
    int overlapAnchor -> overlapAnchor
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int panelBackground -> panelBackground
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int passwordToggleContentDescription -> passwordToggleContentDescription
    int passwordToggleDrawable -> passwordToggleDrawable
    int passwordToggleEnabled -> passwordToggleEnabled
    int passwordToggleTint -> passwordToggleTint
    int passwordToggleTintMode -> passwordToggleTintMode
    int popupMenuStyle -> popupMenuStyle
    int popupTheme -> popupTheme
    int popupWindowStyle -> popupWindowStyle
    int preserveIconSpacing -> preserveIconSpacing
    int pressedTranslationZ -> pressedTranslationZ
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryBackground -> queryBackground
    int queryHint -> queryHint
    int radioButtonStyle -> radioButtonStyle
    int ratingBarStyle -> ratingBarStyle
    int ratingBarStyleIndicator -> ratingBarStyleIndicator
    int ratingBarStyleSmall -> ratingBarStyleSmall
    int reverseLayout -> reverseLayout
    int rippleColor -> rippleColor
    int scrimAnimationDuration -> scrimAnimationDuration
    int scrimVisibleHeightTrigger -> scrimVisibleHeightTrigger
    int searchHintIcon -> searchHintIcon
    int searchIcon -> searchIcon
    int searchViewStyle -> searchViewStyle
    int seekBarStyle -> seekBarStyle
    int selectableItemBackground -> selectableItemBackground
    int selectableItemBackgroundBorderless -> selectableItemBackgroundBorderless
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int showText -> showText
    int singleChoiceItemLayout -> singleChoiceItemLayout
    int spanCount -> spanCount
    int spinBars -> spinBars
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerStyle -> spinnerStyle
    int splitTrack -> splitTrack
    int srcCompat -> srcCompat
    int stackFromEnd -> stackFromEnd
    int state_above_anchor -> state_above_anchor
    int state_collapsed -> state_collapsed
    int state_collapsible -> state_collapsible
    int statusBarBackground -> statusBarBackground
    int statusBarScrim -> statusBarScrim
    int subMenuArrow -> subMenuArrow
    int submitBackground -> submitBackground
    int subtitle -> subtitle
    int subtitleTextAppearance -> subtitleTextAppearance
    int subtitleTextColor -> subtitleTextColor
    int subtitleTextStyle -> subtitleTextStyle
    int suggestionRowLayout -> suggestionRowLayout
    int switchMinWidth -> switchMinWidth
    int switchPadding -> switchPadding
    int switchStyle -> switchStyle
    int switchTextAppearance -> switchTextAppearance
    int tabBackground -> tabBackground
    int tabContentStart -> tabContentStart
    int tabGravity -> tabGravity
    int tabIndicatorColor -> tabIndicatorColor
    int tabIndicatorHeight -> tabIndicatorHeight
    int tabMaxWidth -> tabMaxWidth
    int tabMinWidth -> tabMinWidth
    int tabMode -> tabMode
    int tabPadding -> tabPadding
    int tabPaddingBottom -> tabPaddingBottom
    int tabPaddingEnd -> tabPaddingEnd
    int tabPaddingStart -> tabPaddingStart
    int tabPaddingTop -> tabPaddingTop
    int tabSelectedTextColor -> tabSelectedTextColor
    int tabTextAppearance -> tabTextAppearance
    int tabTextColor -> tabTextColor
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearancePopupMenuHeader -> textAppearancePopupMenuHeader
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorAlertDialogListItem -> textColorAlertDialogListItem
    int textColorError -> textColorError
    int textColorSearchUrl -> textColorSearchUrl
    int theme -> theme
    int thickness -> thickness
    int thumbTextPadding -> thumbTextPadding
    int thumbTint -> thumbTint
    int thumbTintMode -> thumbTintMode
    int tickMark -> tickMark
    int tickMarkTint -> tickMarkTint
    int tickMarkTintMode -> tickMarkTintMode
    int title -> title
    int titleEnabled -> titleEnabled
    int titleMargin -> titleMargin
    int titleMarginBottom -> titleMarginBottom
    int titleMarginEnd -> titleMarginEnd
    int titleMarginStart -> titleMarginStart
    int titleMarginTop -> titleMarginTop
    int titleMargins -> titleMargins
    int titleTextAppearance -> titleTextAppearance
    int titleTextColor -> titleTextColor
    int titleTextStyle -> titleTextStyle
    int toolbarId -> toolbarId
    int toolbarNavigationButtonStyle -> toolbarNavigationButtonStyle
    int toolbarStyle -> toolbarStyle
    int track -> track
    int trackTint -> trackTint
    int trackTintMode -> trackTintMode
    int useCompatPadding -> useCompatPadding
    int voiceIcon -> voiceIcon
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    void <init>() -> <init>
android.support.v4.view.WindowInsetsCompat -> android.support.v4.a.ai:
    android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatImpl IMPL -> a
    java.lang.Object mInsets -> b
    void <init>(java.lang.Object) -> <init>
    int getSystemWindowInsetLeft() -> a
    int getSystemWindowInsetTop() -> b
    int getSystemWindowInsetRight() -> c
    int getSystemWindowInsetBottom() -> d
    boolean isConsumed() -> e
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    android.support.v4.view.WindowInsetsCompat wrap(java.lang.Object) -> g
    java.lang.Object unwrap(android.support.v4.view.WindowInsetsCompat) -> h
    void <init>(java.lang.Object,android.support.v4.view.WindowInsetsCompat$1) -> <init>
    void <clinit>() -> <clinit>
android.support.v7.widget.RecyclerView$2 -> android.support.v7.widget.hf:
    android.support.v7.widget.RecyclerView this$0 -> a
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void run() -> run
android.support.v7.widget.AppCompatSpinner$DropdownPopup -> android.support.v7.widget.eq:
    java.lang.CharSequence mHintText -> a
    android.widget.ListAdapter mAdapter -> b
    android.graphics.Rect mVisibleRect -> c
    android.support.v7.widget.AppCompatSpinner this$0 -> d
    void <init>(android.support.v7.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    void setAdapter(android.widget.ListAdapter) -> a
    java.lang.CharSequence getHintText() -> a
    void setPromptText(java.lang.CharSequence) -> b
    void computeContentWidth() -> c
    void show() -> t
    boolean isVisibleToUser(android.view.View) -> d
    android.widget.ListAdapter access$200(android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> e
    boolean access$600(android.support.v7.widget.AppCompatSpinner$DropdownPopup,android.view.View) -> f
    void access$701(android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> g
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.a.k:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> b
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> c
    android.view.View getActionView(android.view.MenuItem) -> d
    boolean expandActionView(android.view.MenuItem) -> a
    boolean isActionViewExpanded(android.view.MenuItem) -> b
android.support.v7.widget.ActionMenuView$OnMenuItemClickListener -> android.support.v7.widget.bc:
    boolean onMenuItemClick(android.view.MenuItem) -> a
android.support.v7.widget.AppCompatTextView -> android.support.v7.widget.ai:
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> b
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void drawableStateChanged() -> drawableStateChanged
android.support.design.R$drawable -> android.support.design.d:
    int abc_ab_share_pack_mtrl_alpha -> abc_ab_share_pack_mtrl_alpha
    int abc_action_bar_item_background_material -> abc_action_bar_item_background_material
    int abc_btn_borderless_material -> abc_btn_borderless_material
    int abc_btn_check_material -> abc_btn_check_material
    int abc_btn_check_to_on_mtrl_000 -> abc_btn_check_to_on_mtrl_000
    int abc_btn_check_to_on_mtrl_015 -> abc_btn_check_to_on_mtrl_015
    int abc_btn_colored_material -> abc_btn_colored_material
    int abc_btn_default_mtrl_shape -> abc_btn_default_mtrl_shape
    int abc_btn_radio_material -> abc_btn_radio_material
    int abc_btn_radio_to_on_mtrl_000 -> abc_btn_radio_to_on_mtrl_000
    int abc_btn_radio_to_on_mtrl_015 -> abc_btn_radio_to_on_mtrl_015
    int abc_btn_switch_to_on_mtrl_00001 -> abc_btn_switch_to_on_mtrl_00001
    int abc_btn_switch_to_on_mtrl_00012 -> abc_btn_switch_to_on_mtrl_00012
    int abc_cab_background_internal_bg -> abc_cab_background_internal_bg
    int abc_cab_background_top_material -> abc_cab_background_top_material
    int abc_cab_background_top_mtrl_alpha -> abc_cab_background_top_mtrl_alpha
    int abc_control_background_material -> abc_control_background_material
    int abc_dialog_material_background -> abc_dialog_material_background
    int abc_edit_text_material -> abc_edit_text_material
    int abc_ic_ab_back_material -> abc_ic_ab_back_material
    int abc_ic_arrow_drop_right_black_24dp -> abc_ic_arrow_drop_right_black_24dp
    int abc_ic_clear_material -> abc_ic_clear_material
    int abc_ic_commit_search_api_mtrl_alpha -> abc_ic_commit_search_api_mtrl_alpha
    int abc_ic_go_search_api_material -> abc_ic_go_search_api_material
    int abc_ic_menu_copy_mtrl_am_alpha -> abc_ic_menu_copy_mtrl_am_alpha
    int abc_ic_menu_cut_mtrl_alpha -> abc_ic_menu_cut_mtrl_alpha
    int abc_ic_menu_overflow_material -> abc_ic_menu_overflow_material
    int abc_ic_menu_paste_mtrl_am_alpha -> abc_ic_menu_paste_mtrl_am_alpha
    int abc_ic_menu_selectall_mtrl_alpha -> abc_ic_menu_selectall_mtrl_alpha
    int abc_ic_menu_share_mtrl_alpha -> abc_ic_menu_share_mtrl_alpha
    int abc_ic_search_api_material -> abc_ic_search_api_material
    int abc_ic_star_black_16dp -> abc_ic_star_black_16dp
    int abc_ic_star_black_36dp -> abc_ic_star_black_36dp
    int abc_ic_star_black_48dp -> abc_ic_star_black_48dp
    int abc_ic_star_half_black_16dp -> abc_ic_star_half_black_16dp
    int abc_ic_star_half_black_36dp -> abc_ic_star_half_black_36dp
    int abc_ic_star_half_black_48dp -> abc_ic_star_half_black_48dp
    int abc_ic_voice_search_api_material -> abc_ic_voice_search_api_material
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_mtrl_alpha -> abc_list_divider_mtrl_alpha
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_hardkey_panel_mtrl_mult -> abc_menu_hardkey_panel_mtrl_mult
    int abc_popup_background_mtrl_mult -> abc_popup_background_mtrl_mult
    int abc_ratingbar_indicator_material -> abc_ratingbar_indicator_material
    int abc_ratingbar_material -> abc_ratingbar_material
    int abc_ratingbar_small_material -> abc_ratingbar_small_material
    int abc_scrubber_control_off_mtrl_alpha -> abc_scrubber_control_off_mtrl_alpha
    int abc_scrubber_control_to_pressed_mtrl_000 -> abc_scrubber_control_to_pressed_mtrl_000
    int abc_scrubber_control_to_pressed_mtrl_005 -> abc_scrubber_control_to_pressed_mtrl_005
    int abc_scrubber_primary_mtrl_alpha -> abc_scrubber_primary_mtrl_alpha
    int abc_scrubber_track_mtrl_alpha -> abc_scrubber_track_mtrl_alpha
    int abc_seekbar_thumb_material -> abc_seekbar_thumb_material
    int abc_seekbar_tick_mark_material -> abc_seekbar_tick_mark_material
    int abc_seekbar_track_material -> abc_seekbar_track_material
    int abc_spinner_mtrl_am_alpha -> abc_spinner_mtrl_am_alpha
    int abc_spinner_textfield_background_material -> abc_spinner_textfield_background_material
    int abc_switch_thumb_material -> abc_switch_thumb_material
    int abc_switch_track_mtrl_alpha -> abc_switch_track_mtrl_alpha
    int abc_tab_indicator_material -> abc_tab_indicator_material
    int abc_tab_indicator_mtrl_alpha -> abc_tab_indicator_mtrl_alpha
    int abc_text_cursor_material -> abc_text_cursor_material
    int abc_text_select_handle_left_mtrl_alpha -> abc_text_select_handle_left_mtrl_alpha
    int abc_text_select_handle_middle_mtrl_alpha -> abc_text_select_handle_middle_mtrl_alpha
    int abc_text_select_handle_right_mtrl_alpha -> abc_text_select_handle_right_mtrl_alpha
    int abc_textfield_activated_mtrl_alpha -> abc_textfield_activated_mtrl_alpha
    int abc_textfield_default_mtrl_alpha -> abc_textfield_default_mtrl_alpha
    int abc_textfield_search_activated_mtrl_alpha -> abc_textfield_search_activated_mtrl_alpha
    int abc_textfield_search_default_mtrl_alpha -> abc_textfield_search_default_mtrl_alpha
    int abc_textfield_search_material -> abc_textfield_search_material
    int abc_vector_test -> abc_vector_test
    int design_fab_background -> design_fab_background
    int design_ic_visibility -> design_ic_visibility
    int design_snackbar_background -> design_snackbar_background
    int navigation_empty_icon -> navigation_empty_icon
    int notification_template_icon_bg -> notification_template_icon_bg
    void <init>() -> <init>
android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> android.support.a.a.d:
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> a
    void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
    boolean canApplyTheme() -> canApplyTheme
    int getChangingConfigurations() -> getChangingConfigurations
android.support.v7.widget.ForwardingListener -> android.support.v7.widget.di:
    float mScaledTouchSlop -> a
    int mTapTimeout -> b
    int mLongPressTimeout -> c
    android.view.View mSrc -> d
    java.lang.Runnable mDisallowIntercept -> e
    java.lang.Runnable mTriggerLongPress -> f
    boolean mForwarding -> g
    int mActivePointerId -> h
    int[] mTmpLocation -> i
    void <init>(android.view.View) -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onForwardingStarted() -> b
    boolean onForwardingStopped() -> c
    boolean onTouchObserved(android.view.MotionEvent) -> a
    void clearCallbacks() -> d
    void onLongPress() -> e
    boolean onTouchForwarded(android.view.MotionEvent) -> f
    boolean pointInView(android.view.View,float,float,float) -> g
    boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> h
    boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> i
    android.view.View access$200(android.support.v7.widget.ForwardingListener) -> j
    void access$300(android.support.v7.widget.ForwardingListener) -> k
android.support.v4.app.ActivityCompatApi23$RequestPermissionsRequestCodeValidator -> android.support.v4.b.p:
    void validateRequestPermissionsRequestCode(int) -> s
android.support.annotation.Keep -> android.support.annotation.Keep:
android.support.v7.widget.ToolbarWidgetWrapper$1 -> android.support.v7.widget.bi:
    android.support.v7.view.menu.ActionMenuItem mNavItem -> a
    android.support.v7.widget.ToolbarWidgetWrapper this$0 -> b
    void <init>(android.support.v7.widget.ToolbarWidgetWrapper) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.widget.AppCompatCompoundButtonHelper -> android.support.v7.widget.ff:
    android.widget.CompoundButton mView -> a
    android.content.res.ColorStateList mButtonTintList -> b
    android.graphics.PorterDuff$Mode mButtonTintMode -> c
    boolean mHasButtonTint -> d
    boolean mHasButtonTintMode -> e
    boolean mSkipNextApply -> f
    void <init>(android.widget.CompoundButton) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> a
    void setSupportButtonTintList(android.content.res.ColorStateList) -> b
    android.content.res.ColorStateList getSupportButtonTintList() -> c
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> d
    android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> e
    void onSetButtonDrawable() -> f
    void applyButtonTint() -> g
    int getCompoundPaddingLeft(int) -> h
android.support.v7.widget.LinearLayoutManager$AnchorInfo -> android.support.v7.widget.ao:
    int mPosition -> a
    int mCoordinate -> b
    boolean mLayoutFromEnd -> c
    boolean mValid -> d
    android.support.v7.widget.LinearLayoutManager this$0 -> e
    void <init>(android.support.v7.widget.LinearLayoutManager) -> <init>
    void reset() -> a
    void assignCoordinateFromPadding() -> b
    java.lang.String toString() -> toString
    boolean isViewValidAsAnchor(android.view.View,android.support.v7.widget.RecyclerView$State) -> c
    void assignFromViewAndKeepVisibleRect(android.view.View) -> d
    void assignFromView(android.view.View) -> e
    boolean access$000(android.support.v7.widget.LinearLayoutManager$AnchorInfo,android.view.View,android.support.v7.widget.RecyclerView$State) -> f
android.support.annotation.VisibleForTesting -> android.support.annotation.a:
android.support.v7.widget.ToolbarWidgetWrapper$2 -> android.support.v7.widget.fn:
    boolean mCanceled -> a
    int val$visibility -> b
    android.support.v7.widget.ToolbarWidgetWrapper this$0 -> c
    void <init>(android.support.v7.widget.ToolbarWidgetWrapper,int) -> <init>
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi23Impl -> android.support.v4.a.a.au:
    void <init>() -> <init>
android.support.v4.widget.CursorFilter -> android.support.v4.widget.ax:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    void <init>(android.support.v4.widget.CursorFilter$CursorFilterClient) -> <init>
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v7.app.AppCompatDialog -> android.support.v7.c.i:
    android.support.v7.app.AppCompatDelegate mDelegate -> a
    void <init>(android.content.Context,int) -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    android.view.View findViewById(int) -> findViewById
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onStop() -> onStop
    boolean supportRequestWindowFeature(int) -> a
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    android.support.v7.app.AppCompatDelegate getDelegate() -> b
    int getThemeResId(android.content.Context,int) -> c
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> k
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> l
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> m
com.squareup.picasso.Utils$ActivityManagerHoneycomb -> com.squareup.a.x:
    void <init>() -> <init>
    int getLargeMemoryClass(android.app.ActivityManager) -> a
com.squareup.picasso.StatsSnapshot -> com.squareup.a.m:
    int maxSize -> a
    int size -> b
    long cacheHits -> c
    long cacheMisses -> d
    long totalDownloadSize -> e
    long totalOriginalBitmapSize -> f
    long totalTransformedBitmapSize -> g
    long averageDownloadSize -> h
    long averageOriginalBitmapSize -> i
    long averageTransformedBitmapSize -> j
    int downloadCount -> k
    int originalBitmapCount -> l
    int transformedBitmapCount -> m
    long timeStamp -> n
    void <init>(int,int,long,long,long,long,long,long,long,long,int,int,int,long) -> <init>
    void dump(java.io.PrintWriter) -> a
    java.lang.String toString() -> toString
android.support.v7.view.SupportMenuInflater -> android.support.v7.view.d:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> b
    java.lang.Object[] mActionViewConstructorArguments -> c
    java.lang.Object[] mActionProviderConstructorArguments -> d
    android.content.Context mContext -> e
    java.lang.Object mRealOwner -> f
    void <init>(android.content.Context) -> <init>
    void inflate(int,android.view.Menu) -> inflate
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> a
    java.lang.Object getRealOwner() -> b
    java.lang.Object findRealOwner(java.lang.Object) -> c
    android.content.Context access$100(android.support.v7.view.SupportMenuInflater) -> d
    java.lang.Class[] access$200() -> e
    java.lang.Object[] access$300(android.support.v7.view.SupportMenuInflater) -> f
    java.lang.Object access$400(android.support.v7.view.SupportMenuInflater) -> g
    java.lang.Class[] access$500() -> h
    java.lang.Object[] access$600(android.support.v7.view.SupportMenuInflater) -> i
    void <clinit>() -> <clinit>
android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> android.support.a.a.a:
    int mChangingConfigurations -> a
    android.support.graphics.drawable.VectorDrawableCompat mVectorDrawable -> b
    java.util.ArrayList mAnimators -> c
    android.support.v4.util.ArrayMap mTargetNameMap -> d
    void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    int getChangingConfigurations() -> getChangingConfigurations
android.support.design.widget.AnimationUtils$AnimationListenerAdapter -> android.support.design.widget.bw:
    void <init>() -> <init>
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.squareup.picasso.Picasso$RequestTransformer -> com.squareup.a.g:
    com.squareup.picasso.Picasso$RequestTransformer IDENTITY -> a
    com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> a
    void <clinit>() -> <clinit>
android.support.design.widget.SnackbarManager$1 -> android.support.design.widget.cz:
    android.support.design.widget.SnackbarManager this$0 -> a
    void <init>(android.support.design.widget.SnackbarManager) -> <init>
    boolean handleMessage(android.os.Message) -> handleMessage
android.support.design.widget.ViewGroupUtils -> android.support.design.widget.ay:
    android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImpl IMPL -> a
    void <init>() -> <init>
    void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> a
    void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> b
    void <clinit>() -> <clinit>
android.support.v4.content.ModernAsyncTask -> android.support.v4.d.i:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> c
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> d
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    android.os.Handler getHandler() -> a
    void <init>() -> <init>
    void postResultIfNotInvoked(java.lang.Object) -> d
    java.lang.Object postResult(java.lang.Object) -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> d
    void onPreExecute() -> f
    void onPostExecute(java.lang.Object) -> b
    void onProgressUpdate(java.lang.Object[]) -> g
    void onCancelled(java.lang.Object) -> c
    void onCancelled() -> h
    boolean isCancelled() -> i
    boolean cancel(boolean) -> j
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> k
    void finish(java.lang.Object) -> l
    java.util.concurrent.atomic.AtomicBoolean access$100(android.support.v4.content.ModernAsyncTask) -> m
    java.lang.Object access$200(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> n
    void access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> o
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> p
    void <clinit>() -> <clinit>
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ba:
    void <init>() -> <init>
    void onViewDragStateChanged(int) -> c
    void onViewPositionChanged(android.view.View,int,int,int,int) -> i
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> d
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> c
    int getOrderedChildIndex(int) -> d
    int getViewHorizontalDragRange(android.view.View) -> f
    int getViewVerticalDragRange(android.view.View) -> a
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> g
    int clampViewPositionVertical(android.view.View,int,int) -> h
com.android.volley.toolbox.DiskBasedCache -> com.android.a.a.h:
    java.util.Map mEntries -> a
    long mTotalSize -> b
    java.io.File mRootDirectory -> c
    int mMaxCacheSizeInBytes -> d
    void <init>(java.io.File,int) -> <init>
    void <init>(java.io.File) -> <init>
    com.android.volley.Cache$Entry get(java.lang.String) -> a
    void initialize() -> b
    void put(java.lang.String,com.android.volley.Cache$Entry) -> c
    void remove(java.lang.String) -> d
    java.lang.String getFilenameForKey(java.lang.String) -> e
    java.io.File getFileForKey(java.lang.String) -> f
    void pruneIfNeeded(int) -> g
    void putEntry(java.lang.String,com.android.volley.toolbox.DiskBasedCache$CacheHeader) -> h
    void removeEntry(java.lang.String) -> i
    byte[] streamToBytes(java.io.InputStream,int) -> j
    int read(java.io.InputStream) -> k
    void writeInt(java.io.OutputStream,int) -> l
    int readInt(java.io.InputStream) -> m
    void writeLong(java.io.OutputStream,long) -> n
    long readLong(java.io.InputStream) -> o
    void writeString(java.io.OutputStream,java.lang.String) -> p
    java.lang.String readString(java.io.InputStream) -> q
    void writeStringStringMap(java.util.Map,java.io.OutputStream) -> r
    java.util.Map readStringStringMap(java.io.InputStream) -> s
android.support.design.widget.CircularBorderDrawable -> android.support.design.widget.q:
    android.graphics.Paint mPaint -> a
    android.graphics.Rect mRect -> b
    android.graphics.RectF mRectF -> c
    float mBorderWidth -> d
    int mTopOuterStrokeColor -> e
    int mTopInnerStrokeColor -> f
    int mBottomOuterStrokeColor -> g
    int mBottomInnerStrokeColor -> h
    android.content.res.ColorStateList mBorderTint -> i
    int mCurrentBorderTintColor -> j
    boolean mInvalidateShader -> k
    float mRotation -> l
    void <init>() -> <init>
    void draw(android.graphics.Canvas) -> draw
    boolean getPadding(android.graphics.Rect) -> getPadding
    void setAlpha(int) -> setAlpha
    void setBorderTint(android.content.res.ColorStateList) -> a
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void setRotation(float) -> b
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean isStateful() -> isStateful
    boolean onStateChange(int[]) -> onStateChange
    android.graphics.Shader createGradientShader() -> c
android.support.v4.os.AsyncTaskCompat -> android.support.v4.f.i:
    android.os.AsyncTask executeParallel(android.os.AsyncTask,java.lang.Object[]) -> a
    void <init>() -> <init>
android.support.v4.util.LongSparseArray -> android.support.v4.c.l:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    long[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void <init>() -> <init>
    void <init>(int) -> <init>
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> a
    java.lang.Object get(long,java.lang.Object) -> b
    void delete(long) -> c
    void removeAt(int) -> d
    void gc() -> e
    void put(long,java.lang.Object) -> f
    int size() -> g
    long keyAt(int) -> h
    java.lang.Object valueAt(int) -> i
    void clear() -> j
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
    void <clinit>() -> <clinit>
com.murrayc.galaxyzoo.app.SettingsFragment -> com.murrayc.galaxyzoo.app.SettingsFragment:
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    void showUserDescriptionAsSummary(android.preference.Preference) -> a
android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> android.support.a.a.k:
    int mChangingConfigurations -> a
    android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer -> b
    android.content.res.ColorStateList mTint -> c
    android.graphics.PorterDuff$Mode mTintMode -> d
    boolean mAutoMirrored -> e
    android.graphics.Bitmap mCachedBitmap -> f
    android.content.res.ColorStateList mCachedTint -> g
    android.graphics.PorterDuff$Mode mCachedTintMode -> h
    int mCachedRootAlpha -> i
    boolean mCachedAutoMirrored -> j
    boolean mCacheDirty -> k
    android.graphics.Paint mTempPaint -> l
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> a
    boolean hasTranslucentRoot() -> b
    android.graphics.Paint getPaint(android.graphics.ColorFilter) -> c
    void updateCachedBitmap(int,int) -> d
    void createCachedBitmapIfNeeded(int,int) -> e
    boolean canReuseBitmap(int,int) -> f
    boolean canReuseCache() -> g
    void updateCacheStates() -> h
    void <init>() -> <init>
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    int getChangingConfigurations() -> getChangingConfigurations
android.support.v7.widget.ActivityChooserView$2 -> android.support.v7.widget.cp:
    android.support.v7.widget.ActivityChooserView this$0 -> a
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.view.CollapsibleActionView -> android.support.v7.view.h:
    void onActionViewExpanded() -> u
    void onActionViewCollapsed() -> t
android.support.v7.widget.LinearLayoutCompat$LayoutParams -> android.support.v7.widget.cg:
    float weight -> a
    int gravity -> b
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
com.murrayc.galaxyzoo.app.provider.ItemsContentProvider$UriParts -> com.murrayc.galaxyzoo.app.provider.i:
    java.lang.String itemId -> a
    void <init>() -> <init>
    void <init>(com.murrayc.galaxyzoo.app.provider.ItemsContentProvider$UriParts) -> <init>
android.support.v7.widget.AppCompatSeekBarHelper -> android.support.v7.widget.dh:
    android.widget.SeekBar mView -> a
    android.graphics.drawable.Drawable mTickMark -> b
    android.content.res.ColorStateList mTickMarkTintList -> c
    android.graphics.PorterDuff$Mode mTickMarkTintMode -> d
    boolean mHasTickMarkTint -> e
    boolean mHasTickMarkTintMode -> f
    void <init>(android.widget.SeekBar) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> a
    void setTickMark(android.graphics.drawable.Drawable) -> a
    void applyTickMarkTint() -> b
    void jumpDrawablesToCurrentState() -> c
    void drawableStateChanged() -> d
    void drawTickMarks(android.graphics.Canvas) -> e
android.support.v4.widget.NestedScrollView$AccessibilityDelegate -> android.support.v4.widget.av:
    void <init>() -> <init>
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$1 -> android.support.design.widget.cx:
    android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy val$updateListener -> a
    android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 this$0 -> b
    void <init>(android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1,android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.a.z:
    void <init>() -> <init>
    boolean hasTransientState(android.view.View) -> o
    void postInvalidateOnAnimation(android.view.View) -> p
    void postOnAnimation(android.view.View,java.lang.Runnable) -> q
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> r
    int getImportantForAccessibility(android.view.View) -> s
    void setImportantForAccessibility(android.view.View,int) -> d
    int getMinimumWidth(android.view.View) -> t
    int getMinimumHeight(android.view.View) -> u
    void requestApplyInsets(android.view.View) -> b
    boolean getFitsSystemWindows(android.view.View) -> v
    boolean hasOverlappingRendering(android.view.View) -> w
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 -> android.support.v4.a.ch:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.b.af:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> c
    void navigateUpTo(android.app.Activity,android.content.Intent) -> d
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> e
android.support.v7.view.WindowCallbackWrapper -> android.support.v7.view.c:
    android.view.Window$Callback mWrapped -> a
    void <init>(android.view.Window$Callback) -> <init>
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    void onContentChanged() -> onContentChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    boolean onSearchRequested() -> onSearchRequested
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener -> android.support.v7.c.bn:
    void onPrepareListView(android.widget.ListView) -> a
android.support.design.widget.Snackbar$6 -> android.support.design.widget.ci:
    android.support.design.widget.Snackbar this$0 -> a
    void <init>(android.support.design.widget.Snackbar) -> <init>
    void onLayoutChange(android.view.View,int,int,int,int) -> a
android.support.design.widget.ValueAnimatorCompat$AnimatorUpdateListener -> android.support.design.widget.ca:
    void onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat) -> d
android.support.v7.widget.AppCompatSpinner$DropDownAdapter -> android.support.v7.widget.fy:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
com.android.volley.NetworkDispatcher -> com.android.a.q:
    java.util.concurrent.BlockingQueue mQueue -> a
    com.android.volley.Network mNetwork -> b
    com.android.volley.Cache mCache -> c
    com.android.volley.ResponseDelivery mDelivery -> d
    boolean mQuit -> e
    void <init>(java.util.concurrent.BlockingQueue,com.android.volley.Network,com.android.volley.Cache,com.android.volley.ResponseDelivery) -> <init>
    void quit() -> a
    void addTrafficStatsTag(com.android.volley.Request) -> b
    void run() -> run
    void parseAndDeliverNetworkError(com.android.volley.Request,com.android.volley.VolleyError) -> c
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.a.cy:
    void <init>() -> <init>
    boolean isCtrlPressed(android.view.KeyEvent) -> a
android.support.v7.widget.ActionBarOverlayLayout$3 -> android.support.v7.widget.fp:
    android.support.v7.widget.ActionBarOverlayLayout this$0 -> a
    void <init>(android.support.v7.widget.ActionBarOverlayLayout) -> <init>
    void run() -> run
android.support.design.widget.FloatingActionButtonIcs$1 -> android.support.design.widget.bc:
    boolean mCancelled -> a
    boolean val$fromUser -> b
    android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener -> c
    android.support.design.widget.FloatingActionButtonIcs this$0 -> d
    void <init>(android.support.design.widget.FloatingActionButtonIcs,boolean,android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.widget.SnackbarManager -> android.support.design.widget.ag:
    android.support.design.widget.SnackbarManager sSnackbarManager -> a
    java.lang.Object mLock -> b
    android.os.Handler mHandler -> c
    android.support.design.widget.SnackbarManager$SnackbarRecord mCurrentSnackbar -> d
    android.support.design.widget.SnackbarManager$SnackbarRecord mNextSnackbar -> e
    android.support.design.widget.SnackbarManager getInstance() -> a
    void <init>() -> <init>
    void show(int,android.support.design.widget.SnackbarManager$Callback) -> b
    void dismiss(android.support.design.widget.SnackbarManager$Callback,int) -> c
    void onDismissed(android.support.design.widget.SnackbarManager$Callback) -> d
    void onShown(android.support.design.widget.SnackbarManager$Callback) -> e
    void cancelTimeout(android.support.design.widget.SnackbarManager$Callback) -> f
    void restoreTimeout(android.support.design.widget.SnackbarManager$Callback) -> g
    boolean isCurrentOrNext(android.support.design.widget.SnackbarManager$Callback) -> h
    void showNextSnackbarLocked() -> i
    boolean cancelSnackbarLocked(android.support.design.widget.SnackbarManager$SnackbarRecord,int) -> j
    boolean isCurrentSnackbarLocked(android.support.design.widget.SnackbarManager$Callback) -> k
    boolean isNextSnackbarLocked(android.support.design.widget.SnackbarManager$Callback) -> l
    void scheduleTimeoutLocked(android.support.design.widget.SnackbarManager$SnackbarRecord) -> m
    void handleTimeout(android.support.design.widget.SnackbarManager$SnackbarRecord) -> n
    void access$000(android.support.design.widget.SnackbarManager,android.support.design.widget.SnackbarManager$SnackbarRecord) -> o
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 -> android.support.v7.widget.bn:
    android.support.v7.widget.ActionMenuPresenter val$this$0 -> a
    android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton this$1 -> b
    void <init>(android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,android.support.v7.widget.ActionMenuPresenter) -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> a
    boolean onForwardingStarted() -> b
    boolean onForwardingStopped() -> c
android.support.v4.content.Loader -> android.support.v4.d.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    android.support.v4.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener -> c
    android.content.Context mContext -> d
    boolean mStarted -> e
    boolean mAbandoned -> f
    boolean mReset -> g
    boolean mContentChanged -> h
    boolean mProcessingChange -> i
    void <init>(android.content.Context) -> <init>
    void deliverResult(java.lang.Object) -> a
    void deliverCancellation() -> b
    android.content.Context getContext() -> c
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> d
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> e
    void registerOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener) -> f
    void unregisterOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener) -> g
    boolean isStarted() -> h
    boolean isAbandoned() -> i
    boolean isReset() -> j
    void startLoading() -> k
    void onStartLoading() -> l
    boolean cancelLoad() -> m
    boolean onCancelLoad() -> n
    void forceLoad() -> o
    void onForceLoad() -> p
    void stopLoading() -> q
    void onStopLoading() -> r
    void abandon() -> s
    void onAbandon() -> t
    void reset() -> u
    void onReset() -> v
    boolean takeContentChanged() -> w
    void commitContentChanged() -> x
    void rollbackContentChanged() -> y
    void onContentChanged() -> z
    java.lang.String dataToString(java.lang.Object) -> aa
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> ab
com.murrayc.galaxyzoo.app.QuestionFragment$1 -> com.murrayc.galaxyzoo.app.bs:
    void <init>() -> <init>
    void onClassificationFinished() -> g
android.support.v4.widget.PopupWindowCompatApi21 -> android.support.v4.widget.h:
    java.lang.reflect.Field sOverlapAnchorField -> a
    void <init>() -> <init>
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
    void <clinit>() -> <clinit>
android.support.v7.widget.ListPopupWindow -> android.support.v7.widget.bw:
    java.lang.reflect.Method sClipToWindowEnabledMethod -> a
    java.lang.reflect.Method sGetMaxAvailableHeightMethod -> b
    java.lang.reflect.Method sSetEpicenterBoundsMethod -> c
    android.content.Context mContext -> d
    android.widget.ListAdapter mAdapter -> e
    android.support.v7.widget.DropDownListView mDropDownList -> f
    int mDropDownHeight -> g
    int mDropDownWidth -> h
    int mDropDownHorizontalOffset -> i
    int mDropDownVerticalOffset -> j
    int mDropDownWindowLayoutType -> k
    boolean mDropDownVerticalOffsetSet -> l
    boolean mIsAnimatedFromAnchor -> m
    int mDropDownGravity -> n
    boolean mDropDownAlwaysVisible -> o
    boolean mForceIgnoreOutsideTouch -> p
    int mListItemExpandMaximum -> q
    android.view.View mPromptView -> r
    int mPromptPosition -> s
    android.database.DataSetObserver mObserver -> t
    android.view.View mDropDownAnchorView -> u
    android.graphics.drawable.Drawable mDropDownListHighlight -> v
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> w
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> x
    android.support.v7.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> y
    android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> z
    android.support.v7.widget.ListPopupWindow$PopupScrollListener mScrollListener -> aa
    android.support.v7.widget.ListPopupWindow$ListSelectorHider mHideSelector -> ab
    java.lang.Runnable mShowDropDownRunnable -> ac
    android.os.Handler mHandler -> ad
    android.graphics.Rect mTempRect -> ae
    android.graphics.Rect mEpicenterBounds -> af
    boolean mModal -> ag
    android.widget.PopupWindow mPopup -> ah
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptPosition(int) -> b
    void setModal(boolean) -> c
    boolean isModal() -> d
    android.graphics.drawable.Drawable getBackground() -> e
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> f
    void setAnimationStyle(int) -> g
    android.view.View getAnchorView() -> h
    void setAnchorView(android.view.View) -> i
    int getHorizontalOffset() -> j
    void setHorizontalOffset(int) -> k
    int getVerticalOffset() -> l
    void setVerticalOffset(int) -> m
    void setEpicenterBounds(android.graphics.Rect) -> n
    void setDropDownGravity(int) -> o
    int getWidth() -> p
    void setWidth(int) -> q
    void setContentWidth(int) -> r
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> s
    void show() -> t
    void dismiss() -> u
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> v
    void removePromptView() -> w
    void setInputMethodMode(int) -> x
    void setSelection(int) -> y
    void clearListSelection() -> z
    boolean isShowing() -> aa
    boolean isInputMethodNotNeeded() -> ab
    android.widget.ListView getListView() -> ac
    android.support.v7.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> ad
    int buildDropDown() -> ae
    void setPopupClipToScreenEnabled(boolean) -> af
    int getMaxAvailableHeight(android.view.View,int,boolean) -> ag
    android.support.v7.widget.DropDownListView access$500(android.support.v7.widget.ListPopupWindow) -> ah
    android.support.v7.widget.ListPopupWindow$ResizePopupRunnable access$600(android.support.v7.widget.ListPopupWindow) -> ai
    android.os.Handler access$700(android.support.v7.widget.ListPopupWindow) -> aj
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.a.a.b:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    void <init>() -> <init>
    void <init>(java.lang.Object) -> <init>
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> b
    boolean performAction(int,int,android.os.Bundle) -> c
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> d
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> e
    void <clinit>() -> <clinit>
android.support.v4.app.ActivityOptionsCompat23 -> android.support.v4.b.al:
    android.app.ActivityOptions mActivityOptions -> a
    android.support.v4.app.ActivityOptionsCompat23 makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> a
    void <init>(android.app.ActivityOptions) -> <init>
    android.os.Bundle toBundle() -> b
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.a.bs:
    void <init>() -> <init>
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> b
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> e
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> f
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> g
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> h
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> i
android.support.v7.widget.ViewStubCompat -> android.support.v7.widget.ViewStubCompat:
    int mLayoutResource -> a
    int mInflatedId -> b
    java.lang.ref.WeakReference mInflatedViewRef -> c
    android.view.LayoutInflater mInflater -> d
    android.support.v7.widget.ViewStubCompat$OnInflateListener mInflateListener -> e
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getInflatedId() -> getInflatedId
    void setInflatedId(int) -> setInflatedId
    int getLayoutResource() -> getLayoutResource
    void setLayoutResource(int) -> setLayoutResource
    void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    void onMeasure(int,int) -> onMeasure
    void draw(android.graphics.Canvas) -> draw
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void setVisibility(int) -> setVisibility
    android.view.View inflate() -> a
    void setOnInflateListener(android.support.v7.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.a.a.i:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> b
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> c
android.support.v4.view.ViewCompat$LollipopViewCompatImpl$1 -> android.support.v4.a.dl:
    android.support.v4.view.OnApplyWindowInsetsListener val$listener -> a
    android.support.v4.view.ViewCompat$LollipopViewCompatImpl this$0 -> b
    void <init>(android.support.v4.view.ViewCompat$LollipopViewCompatImpl,android.support.v4.view.OnApplyWindowInsetsListener) -> <init>
    java.lang.Object onApplyWindowInsets(android.view.View,java.lang.Object) -> a
android.support.design.widget.VisibilityAwareImageButton -> android.support.design.widget.an:
    int mUserSetVisibility -> a
    void setVisibility(int) -> setVisibility
    void internalSetVisibility(int,boolean) -> a
    int getUserSetVisibility() -> getUserSetVisibility
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.a.w:
    void <init>() -> <init>
    void setAccessibilityLiveRegion(android.view.View,int) -> a
    void setImportantForAccessibility(android.view.View,int) -> d
    boolean isLaidOut(android.view.View) -> f
    boolean isAttachedToWindow(android.view.View) -> i
android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl -> android.support.v4.a.co:
    void <init>() -> <init>
com.squareup.picasso.BitmapHunter$1 -> com.squareup.a.aj:
    void <init>() -> <init>
    java.lang.StringBuilder initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl -> android.support.v4.a.dn:
    void <init>() -> <init>
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> c
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> d
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> e
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> f
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> g
android.support.v7.widget.ListPopupWindow$PopupDataSetObserver -> android.support.v7.widget.fw:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void <init>(android.support.v7.widget.ListPopupWindow,android.support.v7.widget.ListPopupWindow$1) -> <init>
android.support.v7.widget.ListPopupWindow$3 -> android.support.v7.widget.ec:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v4.view.LayoutInflaterFactory -> android.support.v4.a.bi:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> z
android.support.design.widget.SwipeDismissBehavior$OnDismissListener -> android.support.design.widget.t:
    void onDismiss(android.view.View) -> a
    void onDragStateChanged(int) -> b
android.support.design.widget.ViewGroupUtilsHoneycomb -> android.support.design.widget.n:
    java.lang.ThreadLocal sMatrix -> a
    java.lang.ThreadLocal sRectF -> b
    void <init>() -> <init>
    void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> a
    void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> b
    void <clinit>() -> <clinit>
com.murrayc.galaxyzoo.app.LoginUtils -> com.murrayc.galaxyzoo.app.aa:
    void copyPrefToAccount(android.content.Context,java.lang.String,java.lang.String) -> a
    void removeAnonymousAccount(android.content.Context) -> b
    void removeAccount(android.content.Context,java.lang.String) -> c
    void copyPrefsToAccount(android.content.Context,android.accounts.AccountManager,android.accounts.Account) -> d
    void setAutomaticAccountSync(android.content.Context,android.accounts.Account) -> e
    boolean getUseWifiOnly(android.content.Context) -> f
    void <init>() -> <init>
    void addAnonymousAccount(android.content.Context) -> g
    void copyPrefToAccount(android.accounts.AccountManager,android.accounts.Account,java.lang.String,java.lang.String) -> h
    android.accounts.Account getAccount(android.accounts.AccountManager) -> i
    android.accounts.Account getAccount(android.content.Context) -> j
    com.murrayc.galaxyzoo.app.LoginUtils$LoginDetails getAccountLoginDetails(android.content.Context) -> k
    boolean getBooleanPref(android.content.Context,int) -> l
    int getIntPref(android.content.Context,int) -> m
    boolean getLoggedIn(android.content.Context) -> n
    boolean getLoggedIn(com.murrayc.galaxyzoo.app.LoginUtils$LoginDetails) -> o
    java.lang.String getStringPref(android.content.Context,int) -> p
    void logOut(com.murrayc.galaxyzoo.app.ZooFragment) -> q
    com.murrayc.galaxyzoo.app.LoginUtils$LoginResult parseLoginResponseContent(java.io.InputStream) -> r
    void -wrap0(android.content.Context) -> s
android.support.v7.app.AlertController$CheckedItemAdapter -> android.support.v7.c.al:
    void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
    boolean hasStableIds() -> hasStableIds
    long getItemId(int) -> getItemId
android.support.v4.app.BackStackRecord -> android.support.v4.b.bp:
    boolean SUPPORTS_TRANSITIONS -> a
    android.support.v4.app.FragmentManagerImpl mManager -> b
    android.support.v4.app.BackStackRecord$Op mHead -> c
    android.support.v4.app.BackStackRecord$Op mTail -> d
    int mNumOp -> e
    int mEnterAnim -> f
    int mExitAnim -> g
    int mPopEnterAnim -> h
    int mPopExitAnim -> i
    int mTransition -> j
    int mTransitionStyle -> k
    boolean mAddToBackStack -> l
    boolean mAllowAddToBackStack -> m
    java.lang.String mName -> n
    boolean mCommitted -> o
    int mIndex -> p
    int mBreadCrumbTitleRes -> q
    java.lang.CharSequence mBreadCrumbTitleText -> r
    int mBreadCrumbShortTitleRes -> s
    java.lang.CharSequence mBreadCrumbShortTitleText -> t
    java.util.ArrayList mSharedElementSourceNames -> u
    java.util.ArrayList mSharedElementTargetNames -> v
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> b
    void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    void addOp(android.support.v4.app.BackStackRecord$Op) -> c
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> d
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> e
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> c
    void bumpBackStackNesting(int) -> f
    int commit() -> d
    int commitInternal(boolean) -> g
    void run() -> run
    void setFirstOut(android.util.SparseArray,android.util.SparseArray,android.support.v4.app.Fragment) -> h
    void setLastIn(android.util.SparseArray,android.util.SparseArray,android.support.v4.app.Fragment) -> i
    void calculateFragments(android.util.SparseArray,android.util.SparseArray) -> j
    void calculateBackFragments(android.util.SparseArray,android.util.SparseArray) -> k
    android.support.v4.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray) -> l
    java.lang.String getName() -> m
    android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean) -> n
    java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean) -> o
    java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean) -> p
    java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> q
    java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap,android.view.View) -> r
    android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> s
    boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray) -> t
    void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,java.lang.Object) -> u
    void callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> v
    void setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> w
    android.support.v4.util.ArrayMap mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> x
    android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap) -> y
    android.support.v4.util.ArrayMap mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> z
    void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> aa
    void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> ab
    void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String) -> ac
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList) -> ad
    void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> ae
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> af
    android.support.v4.util.ArrayMap access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> ag
    void access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> ah
    void access$200(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> ai
    void access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> aj
    void <clinit>() -> <clinit>
android.support.v4.widget.ListViewCompatGingerbread -> android.support.v4.widget.n:
    void <init>() -> <init>
    void scrollListBy(android.widget.ListView,int) -> a
android.support.graphics.drawable.AndroidResources -> android.support.a.a.g:
    int[] styleable_VectorDrawableTypeArray -> a
    int[] styleable_VectorDrawableGroup -> b
    int[] styleable_VectorDrawablePath -> c
    int[] styleable_VectorDrawableClipPath -> d
    int[] styleable_AnimatedVectorDrawable -> e
    int[] styleable_AnimatedVectorDrawableTarget -> f
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.graphics.drawable.VectorDrawableCompat$VPath -> android.support.a.a.h:
    android.support.graphics.drawable.PathParser$PathDataNode[] mNodes -> a
    java.lang.String mPathName -> b
    int mChangingConfigurations -> c
    void <init>() -> <init>
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    void toPath(android.graphics.Path) -> a
    java.lang.String getPathName() -> b
    boolean isClipPath() -> c
android.support.v4.os.OperationCanceledException -> android.support.v4.f.j:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.a.a.w:
    void <init>() -> <init>
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> a
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> b
android.support.v4.app.LoaderManagerImpl -> android.support.v4.b.f:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    boolean mStarted -> e
    boolean mRetaining -> f
    boolean mCreatingLoader -> g
    android.support.v4.app.FragmentHostCallback mHost -> h
    void <init>(java.lang.String,android.support.v4.app.FragmentHostCallback,boolean) -> <init>
    void updateHostController(android.support.v4.app.FragmentHostCallback) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> c
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> d
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> e
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> f
    void destroyLoader(int) -> g
    void doStart() -> h
    void doStop() -> i
    void doRetain() -> j
    void finishRetain() -> k
    void doReportNextStart() -> l
    void doReportStart() -> m
    void doDestroy() -> n
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> o
    boolean hasRunningLoaders() -> p
    android.support.v4.app.FragmentHostCallback access$000(android.support.v4.app.LoaderManagerImpl) -> q
    void <clinit>() -> <clinit>
android.support.v7.appcompat.R$id -> android.support.v7.a.f:
    int action0 -> action0
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_root -> action_bar_root
    int action_bar_spinner -> action_bar_spinner
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_divider -> action_divider
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar -> action_mode_bar
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int add -> add
    int alertTitle -> alertTitle
    int always -> always
    int beginning -> beginning
    int bottom -> bottom
    int buttonPanel -> buttonPanel
    int cancel_action -> cancel_action
    int checkbox -> checkbox
    int chronometer -> chronometer
    int collapseActionView -> collapseActionView
    int contentPanel -> contentPanel
    int custom -> custom
    int customPanel -> customPanel
    int decor_content_parent -> decor_content_parent
    int default_activity_button -> default_activity_button
    int disableHome -> disableHome
    int edit_query -> edit_query
    int end -> end
    int end_padder -> end_padder
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int home -> home
    int homeAsUp -> homeAsUp
    int icon -> icon
    int ifRoom -> ifRoom
    int image -> image
    int info -> info
    int line1 -> line1
    int line3 -> line3
    int listMode -> listMode
    int list_item -> list_item
    int media_actions -> media_actions
    int middle -> middle
    int multiply -> multiply
    int never -> never
    int none -> none
    int normal -> normal
    int parentPanel -> parentPanel
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int radio -> radio
    int screen -> screen
    int scrollIndicatorDown -> scrollIndicatorDown
    int scrollIndicatorUp -> scrollIndicatorUp
    int scrollView -> scrollView
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int select_dialog_listview -> select_dialog_listview
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int spacer -> spacer
    int split_action_bar -> split_action_bar
    int src_atop -> src_atop
    int src_in -> src_in
    int src_over -> src_over
    int status_bar_latest_event_content -> status_bar_latest_event_content
    int submenuarrow -> submenuarrow
    int submit_area -> submit_area
    int tabMode -> tabMode
    int text -> text
    int text2 -> text2
    int textSpacerNoButtons -> textSpacerNoButtons
    int time -> time
    int title -> title
    int title_template -> title_template
    int top -> top
    int topPanel -> topPanel
    int up -> up
    int useLogo -> useLogo
    int withText -> withText
    int wrap_content -> wrap_content
    void <init>() -> <init>
android.support.v7.view.menu.MenuBuilder$Callback -> android.support.v7.view.menu.b:
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> b
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.e:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.a.a.r:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    void <init>(java.lang.Object) -> <init>
    void setScrollable(boolean) -> a
    void setItemCount(int) -> b
    void setFromIndex(int) -> c
    void setToIndex(int) -> d
    void setScrollX(int) -> e
    void setScrollY(int) -> f
    void setMaxScrollX(int) -> g
    void setMaxScrollY(int) -> h
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
android.support.v4.app.AppOpsManagerCompat23 -> android.support.v4.b.bs:
    void <init>() -> <init>
    java.lang.String permissionToOp(java.lang.String) -> a
    int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> b
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.a.ae:
    boolean canScrollHorizontally(android.view.View,int) -> e
    boolean canScrollVertically(android.view.View,int) -> f
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> g
    boolean hasAccessibilityDelegate(android.view.View) -> r
    boolean hasTransientState(android.view.View) -> o
    void postInvalidateOnAnimation(android.view.View) -> p
    void postOnAnimation(android.view.View,java.lang.Runnable) -> q
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> r
    int getImportantForAccessibility(android.view.View) -> s
    void setImportantForAccessibility(android.view.View,int) -> d
    float getAlpha(android.view.View) -> y
    void setLayerType(android.view.View,int,android.graphics.Paint) -> z
    int getLayerType(android.view.View) -> aa
    int getLayoutDirection(android.view.View) -> a
    int resolveSizeAndState(int,int,int) -> ab
    int getMeasuredWidthAndState(android.view.View) -> ac
    int getMeasuredState(android.view.View) -> ad
    void setAccessibilityLiveRegion(android.view.View,int) -> a
    int getPaddingStart(android.view.View) -> c
    int getPaddingEnd(android.view.View) -> j
    void setPaddingRelative(android.view.View,int,int,int,int) -> k
    float getTranslationX(android.view.View) -> ae
    float getTranslationY(android.view.View) -> af
    android.graphics.Matrix getMatrix(android.view.View) -> ag
    int getMinimumWidth(android.view.View) -> t
    int getMinimumHeight(android.view.View) -> u
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> x
    void setTranslationX(android.view.View,float) -> ah
    void setTranslationY(android.view.View,float) -> ai
    void setAlpha(android.view.View,float) -> aj
    void setElevation(android.view.View,float) -> c
    void setTransitionName(android.view.View,java.lang.String) -> a
    int getWindowSystemUiVisibility(android.view.View) -> l
    void requestApplyInsets(android.view.View) -> b
    boolean getFitsSystemWindows(android.view.View) -> v
    boolean hasOverlappingRendering(android.view.View) -> w
    void setFitsSystemWindows(android.view.View,boolean) -> y
    void jumpDrawablesToCurrentState(android.view.View) -> ak
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> f
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> l
    void setSaveFromParentEnabled(android.view.View,boolean) -> al
    void setActivated(android.view.View,boolean) -> am
    boolean isPaddingRelative(android.view.View) -> n
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> h
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> i
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> k
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> j
    void stopNestedScroll(android.view.View) -> g
    boolean isLaidOut(android.view.View) -> f
    int combineMeasuredStates(int,int) -> an
    float getZ(android.view.View) -> m
    boolean isAttachedToWindow(android.view.View) -> i
    boolean hasOnClickListeners(android.view.View) -> q
    void setScrollIndicators(android.view.View,int,int) -> a
    void offsetTopAndBottom(android.view.View,int) -> c
    void offsetLeftAndRight(android.view.View,int) -> b
com.murrayc.galaxyzoo.app.ClassifyActivity$CheckLoginTask -> com.murrayc.galaxyzoo.app.av:
    java.lang.ref.WeakReference mContextReference -> a
    void <init>(android.content.Context) -> <init>
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v7.widget.SearchView$SavedState -> android.support.v7.widget.bl:
    boolean isIconified -> a
    android.os.Parcelable$Creator CREATOR -> b
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
android.support.v7.app.AppCompatViewInflater$DeclaredOnClickListener -> android.support.v7.c.ax:
    android.view.View mHostView -> a
    java.lang.String mMethodName -> b
    java.lang.reflect.Method mResolvedMethod -> c
    android.content.Context mResolvedContext -> d
    void <init>(android.view.View,java.lang.String) -> <init>
    void onClick(android.view.View) -> onClick
    void resolveMethod(android.content.Context,java.lang.String) -> a
android.support.v4.view.NestedScrollingChild -> android.support.v4.a.b:
    void stopNestedScroll() -> stopNestedScroll
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.au:
    java.lang.CharSequence convertToString(android.database.Cursor) -> l
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> b
    android.database.Cursor getCursor() -> a
    void changeCursor(android.database.Cursor) -> d
android.support.v7.widget.AppCompatCheckBox -> android.support.v7.widget.by:
    android.support.v7.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> a
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    void setButtonDrawable(int) -> setButtonDrawable
    int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
com.squareup.picasso.ResourceRequestHandler -> com.squareup.a.an:
    android.content.Context context -> a
    void <init>(android.content.Context) -> <init>
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> b
    android.graphics.Bitmap decodeResource(android.content.res.Resources,int,com.squareup.picasso.Request) -> a
android.support.design.widget.MathUtils -> android.support.design.widget.cw:
    void <init>() -> <init>
    int constrain(int,int,int) -> a
    float constrain(float,float,float) -> b
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.a.m:
    void onActionProviderVisibilityChanged(boolean) -> a
android.support.v4.app.FragmentTransitionCompat21$ViewRetriever -> android.support.v4.b.as:
    android.view.View getView() -> a
android.support.v4.content.ContentResolverCompatJellybean -> android.support.v4.d.n:
    void <init>() -> <init>
    android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object) -> a
    boolean isFrameworkOperationCanceledException(java.lang.Exception) -> b
android.support.v4.content.ContentResolverCompat$ContentResolverCompatImpl -> android.support.v4.d.p:
    android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal) -> a
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.a.j:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> a
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> b
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable -> com.android.a.u:
    com.android.volley.Request mRequest -> a
    com.android.volley.Response mResponse -> b
    java.lang.Runnable mRunnable -> c
    com.android.volley.ExecutorDelivery this$0 -> d
    void <init>(com.android.volley.ExecutorDelivery,com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> <init>
    void run() -> run
android.support.v4.animation.AnimatorCompatHelper -> android.support.v4.g.d:
    android.support.v4.animation.AnimatorProvider IMPL -> a
    void <init>() -> <init>
    void clearInterpolator(android.view.View) -> a
    void <clinit>() -> <clinit>
android.support.v4.widget.CompoundButtonCompat$Api23CompoundButtonImpl -> android.support.v4.widget.ac:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> c
android.support.v4.app.BackStackRecord$TransitionState -> android.support.v4.b.bg:
    android.support.v4.util.ArrayMap nameOverrides -> a
    java.util.ArrayList hiddenFragmentViews -> b
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView enteringEpicenterView -> c
    android.view.View nonExistentView -> d
    android.support.v4.app.BackStackRecord this$0 -> e
    void <init>(android.support.v4.app.BackStackRecord) -> <init>
android.support.v7.appcompat.R$string -> android.support.v7.a.h:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_home_description_format -> abc_action_bar_home_description_format
    int abc_action_bar_home_subtitle_description_format -> abc_action_bar_home_subtitle_description_format
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_capital_off -> abc_capital_off
    int abc_capital_on -> abc_capital_on
    int abc_font_family_body_1_material -> abc_font_family_body_1_material
    int abc_font_family_body_2_material -> abc_font_family_body_2_material
    int abc_font_family_button_material -> abc_font_family_button_material
    int abc_font_family_caption_material -> abc_font_family_caption_material
    int abc_font_family_display_1_material -> abc_font_family_display_1_material
    int abc_font_family_display_2_material -> abc_font_family_display_2_material
    int abc_font_family_display_3_material -> abc_font_family_display_3_material
    int abc_font_family_display_4_material -> abc_font_family_display_4_material
    int abc_font_family_headline_material -> abc_font_family_headline_material
    int abc_font_family_menu_material -> abc_font_family_menu_material
    int abc_font_family_subhead_material -> abc_font_family_subhead_material
    int abc_font_family_title_material -> abc_font_family_title_material
    int abc_search_hint -> abc_search_hint
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
    int abc_toolbar_collapse_description -> abc_toolbar_collapse_description
    int search_menu_title -> search_menu_title
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
    void <init>() -> <init>
android.support.v7.app.ActionBar$LayoutParams -> android.support.v7.c.e:
    int gravity -> a
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.support.v7.app.ActionBar$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
android.support.v7.view.menu.StandardMenuPopup$1 -> android.support.v7.view.menu.o:
    android.support.v7.view.menu.StandardMenuPopup this$0 -> a
    void <init>(android.support.v7.view.menu.StandardMenuPopup) -> <init>
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.app.AlertDialog -> android.support.v7.c.h:
    android.support.v7.app.AlertController mAlert -> a
    void <init>(android.content.Context,int) -> <init>
    int resolveDialogTheme(android.content.Context,int) -> a
    void setTitle(java.lang.CharSequence) -> setTitle
    void setIcon(int) -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    int access$000(android.content.Context,int) -> c
    android.support.v7.app.AlertController access$100(android.support.v7.app.AlertDialog) -> d
android.support.v4.widget.TextViewCompat$JbTextViewCompatImpl -> android.support.v4.widget.aj:
    void <init>() -> <init>
android.support.v7.app.TwilightManager$1 -> android.support.v7.c.w:
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.o.a.b:
com.android.volley.Request$1 -> com.android.a.x:
    java.lang.String val$tag -> a
    long val$threadId -> b
    com.android.volley.Request this$0 -> c
    void <init>(com.android.volley.Request,java.lang.String,long) -> <init>
    void run() -> run
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.as:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void <init>(android.support.v4.widget.ViewDragHelper) -> <init>
    void run() -> run
android.support.v4.view.accessibility.AccessibilityEventCompatKitKat -> android.support.v4.a.a.n:
    void <init>() -> <init>
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> a
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> b
android.support.v4.util.LogWriter -> android.support.v4.c.o:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void <init>(java.lang.String) -> <init>
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v7.graphics.drawable.DrawableWrapper -> android.support.v7.d.a.a:
    android.graphics.drawable.Drawable mDrawable -> a
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void draw(android.graphics.Canvas) -> draw
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    void jumpToCurrentState() -> jumpToCurrentState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    boolean onLevelChange(int) -> onLevelChange
    void setAutoMirrored(boolean) -> setAutoMirrored
    boolean isAutoMirrored() -> isAutoMirrored
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    android.graphics.drawable.Drawable getWrappedDrawable() -> a
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> b
android.support.v7.widget.ViewInfoStore -> android.support.v7.widget.z:
    android.support.v4.util.ArrayMap mLayoutHolderMap -> a
    android.support.v4.util.LongSparseArray mOldChangedHolders -> b
    void <init>() -> <init>
    void clear() -> a
    void addToPreLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    boolean isDisappearing(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> d
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> e
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(android.support.v7.widget.RecyclerView$ViewHolder,int) -> f
    void addToOldChangeHolders(long,android.support.v7.widget.RecyclerView$ViewHolder) -> g
    void addToAppearedInPreLayoutHolders(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> h
    boolean isInPreLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> i
    android.support.v7.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> j
    void addToPostLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> k
    void addToDisappearedInLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> l
    void removeFromDisappearedInLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> m
    void process(android.support.v7.widget.ViewInfoStore$ProcessCallback) -> n
    void removeViewHolder(android.support.v7.widget.RecyclerView$ViewHolder) -> o
    void onDetach() -> p
    void onViewDetached(android.support.v7.widget.RecyclerView$ViewHolder) -> q
android.support.v7.widget.AppCompatImageHelper -> android.support.v7.widget.cc:
    android.widget.ImageView mView -> a
    void <init>(android.widget.ImageView) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> a
    void setImageResource(int) -> b
    boolean hasOverlappingRendering() -> c
com.murrayc.galaxyzoo.app.SubjectFragment$1 -> com.murrayc.galaxyzoo.app.bl:
    com.murrayc.galaxyzoo.app.SubjectFragment this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.SubjectFragment) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.widget.ScrollingTabContainerView$TabView -> android.support.v7.widget.el:
    int[] BG_ATTRS -> a
    android.support.v7.app.ActionBar$Tab mTab -> b
    android.widget.TextView mTextView -> c
    android.widget.ImageView mIconView -> d
    android.view.View mCustomView -> e
    android.support.v7.widget.ScrollingTabContainerView this$0 -> f
    void <init>(android.support.v7.widget.ScrollingTabContainerView,android.content.Context,android.support.v7.app.ActionBar$Tab,boolean) -> <init>
    void bindTab(android.support.v7.app.ActionBar$Tab) -> a
    void setSelected(boolean) -> setSelected
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onMeasure(int,int) -> onMeasure
    void update() -> b
    boolean onLongClick(android.view.View) -> onLongClick
    android.support.v7.app.ActionBar$Tab getTab() -> c
android.support.v4.os.TraceJellybeanMR2 -> android.support.v4.f.c:
    void <init>() -> <init>
    void beginSection(java.lang.String) -> a
    void endSection() -> b
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.d.t:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void <init>(android.support.v4.content.ModernAsyncTask) -> <init>
    java.lang.Object call() -> call
android.support.v7.appcompat.R$bool -> android.support.v7.a.b:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    int abc_allow_stacked_button_bar -> abc_allow_stacked_button_bar
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_closeDialogWhenTouchOutside -> abc_config_closeDialogWhenTouchOutside
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
    void <init>() -> <init>
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.f:
    android.support.v4.util.MapCollections this$0 -> a
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener -> android.support.design.widget.cs:
    void onShown() -> a
    void onHidden() -> b
android.support.design.widget.Snackbar$Behavior -> android.support.design.widget.b:
    android.support.design.widget.Snackbar this$0 -> a
    void <init>(android.support.design.widget.Snackbar) -> <init>
    boolean canSwipeDismissView(android.view.View) -> a
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.support.design.widget.Snackbar$SnackbarLayout,android.view.MotionEvent) -> b
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> c
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.a.bb:
    void <init>() -> <init>
    boolean expandActionView(android.view.MenuItem) -> a
    boolean isActionViewExpanded(android.view.MenuItem) -> b
com.squareup.picasso.UrlConnectionDownloader$1 -> com.squareup.a.ah:
    void <init>() -> <init>
    java.lang.StringBuilder initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v7.widget.AppCompatButton -> android.support.v7.widget.ga:
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> b
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void setSupportAllCaps(boolean) -> setSupportAllCaps
com.murrayc.galaxyzoo.app.SubjectExtrasFragment$1 -> com.murrayc.galaxyzoo.app.bj:
    com.murrayc.galaxyzoo.app.SubjectExtrasFragment this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.SubjectExtrasFragment) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.widget.AbsActionBarView -> android.support.v7.widget.dz:
    android.support.v7.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> a
    android.content.Context mPopupContext -> b
    android.support.v7.widget.ActionMenuView mMenuView -> c
    android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter -> d
    int mContentHeight -> e
    android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim -> f
    boolean mEatingTouch -> g
    boolean mEatingHover -> h
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    int getAnimatedVisibility() -> getAnimatedVisibility
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> g
    void setVisibility(int) -> setVisibility
    int measureChildView(android.view.View,int,int,int) -> a
    int next(int,int,boolean) -> b
    int positionChild(android.view.View,int,int,int,boolean) -> c
    void access$001(android.support.v7.widget.AbsActionBarView,int) -> d
    void access$101(android.support.v7.widget.AbsActionBarView,int) -> e
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.a.i:
    void <init>() -> <init>
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> b
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> c
    android.view.View getActionView(android.view.MenuItem) -> d
    boolean expandActionView(android.view.MenuItem) -> a
    boolean isActionViewExpanded(android.view.MenuItem) -> b
android.support.design.widget.SwipeDismissBehavior -> android.support.design.widget.SwipeDismissBehavior:
    android.support.v4.widget.ViewDragHelper mViewDragHelper -> a
    android.support.design.widget.SwipeDismissBehavior$OnDismissListener mListener -> b
    boolean mInterceptingEvents -> c
    float mSensitivity -> d
    boolean mSensitivitySet -> e
    int mSwipeDirection -> f
    float mDragDismissThreshold -> g
    float mAlphaStartSwipeDistance -> h
    float mAlphaEndSwipeDistance -> i
    android.support.v4.widget.ViewDragHelper$Callback mDragCallback -> j
    void <init>() -> <init>
    void setListener(android.support.design.widget.SwipeDismissBehavior$OnDismissListener) -> a
    void setSwipeDirection(int) -> b
    void setStartAlphaSwipeDistance(float) -> c
    void setEndAlphaSwipeDistance(float) -> d
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> c
    boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> e
    boolean canSwipeDismissView(android.view.View) -> a
    void ensureViewDragHelper(android.view.ViewGroup) -> f
    float clamp(float,float,float) -> g
    int clamp(int,int,int) -> h
    float fraction(float,float,float) -> i
    android.support.design.widget.SwipeDismissBehavior$OnDismissListener access$000(android.support.design.widget.SwipeDismissBehavior) -> j
    android.support.v4.widget.ViewDragHelper access$100(android.support.design.widget.SwipeDismissBehavior) -> k
    int access$200(android.support.design.widget.SwipeDismissBehavior) -> l
    float access$300(android.support.design.widget.SwipeDismissBehavior) -> m
    int access$400(int,int,int) -> n
    float access$500(android.support.design.widget.SwipeDismissBehavior) -> o
    float access$600(android.support.design.widget.SwipeDismissBehavior) -> p
    float access$700(float,float,float) -> q
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.b.ae:
    void <init>() -> <init>
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> c
    void navigateUpTo(android.app.Activity,android.content.Intent) -> d
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> e
android.support.v7.widget.AppCompatBackgroundHelper -> android.support.v7.widget.aj:
    android.view.View mView -> a
    android.support.v7.widget.AppCompatDrawableManager mDrawableManager -> b
    int mBackgroundResId -> c
    android.support.v7.widget.AppCompatBackgroundHelper$BackgroundTintInfo mInternalBackgroundTint -> d
    android.support.v7.widget.AppCompatBackgroundHelper$BackgroundTintInfo mBackgroundTint -> e
    android.support.v7.widget.AppCompatBackgroundHelper$BackgroundTintInfo mTmpInfo -> f
    void <init>(android.view.View) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> a
    void onSetBackgroundResource(int) -> b
    void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> c
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> d
    boolean updateBackgroundTint() -> e
    android.content.res.ColorStateList getSupportBackgroundTintList() -> f
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> g
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> h
    void applySupportBackgroundTint() -> i
    void setInternalBackgroundTint(android.content.res.ColorStateList) -> j
    boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> k
android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl -> android.support.v4.widget.ae:
    java.lang.reflect.Method sSetWindowLayoutTypeMethod -> a
    boolean sSetWindowLayoutTypeMethodAttempted -> b
    void <init>() -> <init>
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
    void setWindowLayoutType(android.widget.PopupWindow,int) -> b
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.f.h:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.android.volley.Response$Listener -> com.android.a.l:
    void onResponse(java.lang.Object) -> b
android.support.v4.widget.PopupWindowCompat -> android.support.v4.widget.ai:
    android.support.v4.widget.PopupWindowCompat$PopupWindowImpl IMPL -> a
    void <init>() -> <init>
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> b
    void setWindowLayoutType(android.widget.PopupWindow,int) -> c
    void <clinit>() -> <clinit>
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.a.br:
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.aq:
    int mLayout -> a
    int mDropDownLayout -> b
    android.view.LayoutInflater mInflater -> c
    void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> e
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
android.support.v4.view.animation.LookupTableInterpolator -> android.support.v4.a.b.a:
    float[] mValues -> a
    float mStepSize -> b
    void <init>(float[]) -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v7.app.AppCompatDelegate -> android.support.v7.c.c:
    int sDefaultNightMode -> a
    boolean sCompatVectorFromResourcesEnabled -> b
    android.support.v7.app.AppCompatDelegate create(android.app.Activity,android.support.v7.app.AppCompatCallback) -> a
    android.support.v7.app.AppCompatDelegate create(android.app.Dialog,android.support.v7.app.AppCompatCallback) -> b
    android.support.v7.app.AppCompatDelegate create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> c
    void <init>() -> <init>
    android.support.v7.app.ActionBar getSupportActionBar() -> d
    void setSupportActionBar(android.support.v7.widget.Toolbar) -> e
    android.view.MenuInflater getMenuInflater() -> f
    void onCreate(android.os.Bundle) -> g
    void onPostCreate(android.os.Bundle) -> h
    void onConfigurationChanged(android.content.res.Configuration) -> i
    void onStart() -> j
    void onStop() -> k
    void onPostResume() -> l
    android.view.View findViewById(int) -> m
    void setContentView(android.view.View) -> n
    void setContentView(int) -> o
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> p
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> q
    void setTitle(java.lang.CharSequence) -> r
    void invalidateOptionsMenu() -> s
    void onDestroy() -> t
    boolean requestWindowFeature(int) -> u
    void installViewFactory() -> v
    void onSaveInstanceState(android.os.Bundle) -> w
    boolean applyDayNight() -> x
    int getDefaultNightMode() -> y
    boolean isCompatVectorFromResourcesEnabled() -> z
    void <clinit>() -> <clinit>
android.support.v7.widget.ThemedSpinnerAdapter -> android.support.v7.widget.fk:
    void setDropDownViewTheme(android.content.res.Resources$Theme) -> a
    android.content.res.Resources$Theme getDropDownViewTheme() -> b
com.squareup.picasso.LruCache -> com.squareup.a.az:
    java.util.LinkedHashMap map -> a
    int maxSize -> b
    int size -> c
    int putCount -> d
    int evictionCount -> e
    int hitCount -> f
    int missCount -> g
    void <init>(android.content.Context) -> <init>
    void <init>(int) -> <init>
    android.graphics.Bitmap get(java.lang.String) -> a
    void set(java.lang.String,android.graphics.Bitmap) -> b
    void trimToSize(int) -> a
    int size() -> c
    int maxSize() -> d
android.support.v4.view.MenuItemCompat -> android.support.v4.a.f:
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> a
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> b
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> c
    android.view.View getActionView(android.view.MenuItem) -> d
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> e
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> f
    boolean expandActionView(android.view.MenuItem) -> g
    boolean isActionViewExpanded(android.view.MenuItem) -> h
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatApi21Impl -> android.support.v4.a.dt:
    void <init>() -> <init>
    boolean isConsumed(java.lang.Object) -> e
    void <init>(android.support.v4.view.WindowInsetsCompat$1) -> <init>
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.a.dh:
    void <init>() -> <init>
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.app.BackStackRecord$3 -> android.support.v4.b.bq:
    android.view.View val$sceneRoot -> a
    android.support.v4.app.BackStackRecord$TransitionState val$state -> b
    int val$containerId -> c
    java.lang.Object val$transition -> d
    android.support.v4.app.BackStackRecord this$0 -> e
    void <init>(android.support.v4.app.BackStackRecord,android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.v7.app.AppCompatDelegateImplN -> android.support.v7.c.r:
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> a
android.support.v7.widget.ActivityChooserView$4 -> android.support.v7.widget.fz:
    android.support.v7.widget.ActivityChooserView this$0 -> a
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
    void onChanged() -> onChanged
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.a.aj:
    void <init>() -> <init>
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> b
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> c
com.murrayc.galaxyzoo.app.QuestionFragment$ClassificationInProgress$QuestionAnswer$1 -> com.murrayc.galaxyzoo.app.bq:
    void <init>() -> <init>
    com.murrayc.galaxyzoo.app.QuestionFragment$ClassificationInProgress$QuestionAnswer createFromParcel(android.os.Parcel) -> createFromParcel
    com.murrayc.galaxyzoo.app.QuestionFragment$ClassificationInProgress$QuestionAnswer[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.murrayc.galaxyzoo.app.QuestionFragment$ClassificationInProgress$1 -> com.murrayc.galaxyzoo.app.br:
    void <init>() -> <init>
    com.murrayc.galaxyzoo.app.QuestionFragment$ClassificationInProgress createFromParcel(android.os.Parcel) -> createFromParcel
    com.murrayc.galaxyzoo.app.QuestionFragment$ClassificationInProgress[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.design.widget.AppBarLayout$Behavior$SavedState -> android.support.design.widget.af:
    int firstVisibleChildIndex -> a
    float firstVisibleChildPercentageShown -> b
    boolean firstVisibleChildAtMinimumHeight -> c
    android.os.Parcelable$Creator CREATOR -> d
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.content.ContextCompatJellybean -> android.support.v4.d.l:
    void <init>() -> <init>
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
com.squareup.picasso.UrlConnectionDownloader$ResponseCacheIcs -> com.squareup.a.ab:
    void <init>() -> <init>
    java.lang.Object install(android.content.Context) -> a
com.murrayc.galaxyzoo.app.provider.client.ZooniverseClient$UploadException -> com.murrayc.galaxyzoo.app.provider.a.g:
    void <init>(java.lang.String,java.lang.Exception) -> <init>
com.squareup.picasso.Utils -> com.squareup.a.ba:
    java.lang.StringBuilder MAIN_THREAD_KEY_BUILDER -> a
    void <init>() -> <init>
    int getBitmapBytes(android.graphics.Bitmap) -> a
    java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> b
    void checkMain() -> c
    boolean isMain() -> d
    java.lang.String getLogIdsForHunter(com.squareup.picasso.BitmapHunter) -> e
    java.lang.String getLogIdsForHunter(com.squareup.picasso.BitmapHunter,java.lang.String) -> f
    void log(java.lang.String,java.lang.String,java.lang.String) -> g
    void log(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> h
    java.lang.String createKey(com.squareup.picasso.Request) -> i
    java.lang.String createKey(com.squareup.picasso.Request,java.lang.StringBuilder) -> j
    void closeQuietly(java.io.InputStream) -> k
    boolean parseResponseSourceHeader(java.lang.String) -> l
    com.squareup.picasso.Downloader createDefaultDownloader(android.content.Context) -> m
    java.io.File createDefaultCacheDir(android.content.Context) -> n
    long calculateDiskCacheSize(java.io.File) -> o
    int calculateMemoryCacheSize(android.content.Context) -> p
    boolean isAirplaneModeOn(android.content.Context) -> q
    java.lang.Object getService(android.content.Context,java.lang.String) -> r
    boolean hasPermission(android.content.Context,java.lang.String) -> s
    byte[] toByteArray(java.io.InputStream) -> t
    boolean isWebPFile(java.io.InputStream) -> u
    int getResourceId(android.content.res.Resources,com.squareup.picasso.Request) -> v
    android.content.res.Resources getResources(android.content.Context,com.squareup.picasso.Request) -> w
    void flushStackLocalLeaks(android.os.Looper) -> x
    void <clinit>() -> <clinit>
android.support.v7.app.WindowDecorActionBar$2 -> android.support.v7.c.bi:
    android.support.v7.app.WindowDecorActionBar this$0 -> a
    void <init>(android.support.v7.app.WindowDecorActionBar) -> <init>
    void onAnimationEnd(android.view.View) -> b
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.d.ae:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void <init>(android.support.v4.content.ModernAsyncTask,java.util.concurrent.Callable) -> <init>
    void done() -> done
com.murrayc.galaxyzoo.app.ListCursorAdapter$OnItemClickedListener -> com.murrayc.galaxyzoo.app.c:
    void onItemClicked(int,android.view.View) -> a
com.murrayc.galaxyzoo.app.SubjectExtrasFragment -> com.murrayc.galaxyzoo.app.o:
    java.lang.String[] mColumns -> a
    android.database.Cursor mCursor -> b
    boolean mLoaderFinished -> c
    android.view.View mRootView -> d
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>() -> <init>
    void setItemId(java.lang.String) -> d
    void update() -> b
    void doDiscuss() -> h
    void doExamine() -> i
    void onCreate(android.os.Bundle) -> c
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> d
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> j
    void onLoaderReset(android.support.v4.content.Loader) -> f
    void onSingletonInitialized() -> g
    void updateFromCursor() -> k
    void updateIfReady() -> l
    void <clinit>() -> <clinit>
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> k
    void -wrap0(com.murrayc.galaxyzoo.app.SubjectExtrasFragment) -> m
    void -wrap1(com.murrayc.galaxyzoo.app.SubjectExtrasFragment) -> n
android.support.v7.view.menu.MenuPresenter -> android.support.v7.view.menu.d:
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> c
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> d
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> e
    boolean flagActionItems() -> f
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> g
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> h
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.an:
    android.widget.ListView mTarget -> a
    void <init>(android.widget.ListView) -> <init>
    void scrollTargetBy(int,int) -> a
    boolean canTargetScrollHorizontally(int) -> b
    boolean canTargetScrollVertically(int) -> c
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.a.dv:
    void <init>() -> <init>
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> b
android.support.design.R$anim -> android.support.design.a:
    int abc_fade_in -> abc_fade_in
    int abc_fade_out -> abc_fade_out
    int abc_grow_fade_in_from_bottom -> abc_grow_fade_in_from_bottom
    int abc_popup_enter -> abc_popup_enter
    int abc_popup_exit -> abc_popup_exit
    int abc_shrink_fade_out_from_bottom -> abc_shrink_fade_out_from_bottom
    int abc_slide_in_bottom -> abc_slide_in_bottom
    int abc_slide_in_top -> abc_slide_in_top
    int abc_slide_out_bottom -> abc_slide_out_bottom
    int abc_slide_out_top -> abc_slide_out_top
    int design_appbar_state_list_animator -> design_appbar_state_list_animator
    int design_bottom_sheet_slide_in -> design_bottom_sheet_slide_in
    int design_bottom_sheet_slide_out -> design_bottom_sheet_slide_out
    int design_fab_in -> design_fab_in
    int design_fab_out -> design_fab_out
    int design_snackbar_in -> design_snackbar_in
    int design_snackbar_out -> design_snackbar_out
    void <init>() -> <init>
android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer -> android.support.a.a.m:
    android.graphics.Path mPath -> a
    android.graphics.Path mRenderPath -> b
    android.graphics.Matrix IDENTITY_MATRIX -> c
    android.graphics.Matrix mFinalPathMatrix -> d
    android.graphics.Paint mStrokePaint -> e
    android.graphics.Paint mFillPaint -> f
    android.graphics.PathMeasure mPathMeasure -> g
    int mChangingConfigurations -> h
    android.support.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup -> i
    float mBaseWidth -> j
    float mBaseHeight -> k
    float mViewportWidth -> l
    float mViewportHeight -> m
    int mRootAlpha -> n
    java.lang.String mRootName -> o
    android.support.v4.util.ArrayMap mVGTargetsMap -> p
    void <init>() -> <init>
    void setRootAlpha(int) -> a
    int getRootAlpha() -> b
    void setAlpha(float) -> c
    float getAlpha() -> d
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> e
    void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> f
    void drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> g
    float cross(float,float,float,float) -> h
    float getMatrixScale(android.graphics.Matrix) -> i
    android.support.graphics.drawable.VectorDrawableCompat$VGroup access$000(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> j
    android.graphics.Paint access$400(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> k
    android.graphics.Paint access$402(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer,android.graphics.Paint) -> l
    android.graphics.Paint access$500(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> m
    android.graphics.Paint access$502(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer,android.graphics.Paint) -> n
    void <clinit>() -> <clinit>
android.support.v4.view.GravityCompat -> android.support.v4.a.dg:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
    int getAbsoluteGravity(int,int) -> b
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.design.widget.SnackbarManager$Callback -> android.support.design.widget.d:
    void show() -> a
    void dismiss(int) -> b
android.support.v7.widget.AppCompatAutoCompleteTextView -> android.support.v7.widget.ez:
    int[] TINT_ATTRS -> a
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> c
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void <clinit>() -> <clinit>
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl -> android.support.v4.a.cx:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
    android.support.v4.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater) -> a
android.support.v7.app.AppCompatDelegateImplV11 -> android.support.v7.c.v:
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    android.view.View callActivityOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
android.support.v7.app.AppCompatDelegateImplV9$2 -> android.support.v7.c.aj:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
com.murrayc.galaxyzoo.app.provider.client.MoreItemsJsonParser -> com.murrayc.galaxyzoo.app.provider.a.a:
    java.util.List parseMoreItemsResponseContent(java.lang.String) -> a
    void <init>() -> <init>
    com.murrayc.galaxyzoo.app.provider.client.ZooniverseClient$Subject parseMoreItemsJsonObjectSubject(android.util.JsonReader) -> b
    com.murrayc.galaxyzoo.app.provider.client.MoreItemsJsonParser$Locations parseMoreItemsJsonObjectSubjectLocation(android.util.JsonReader) -> c
    java.util.List parseMoreItemsResponseContent(java.io.Reader) -> d
android.support.v7.widget.RecyclerView$AdapterDataObserver -> android.support.v7.widget.i:
    void <init>() -> <init>
    void onChanged() -> a
android.support.v7.widget.RecyclerView$SmoothScroller -> android.support.v7.widget.h:
    int mTargetPosition -> a
    android.support.v7.widget.RecyclerView mRecyclerView -> b
    android.support.v7.widget.RecyclerView$LayoutManager mLayoutManager -> c
    boolean mPendingInitialRun -> d
    boolean mRunning -> e
    android.view.View mTargetView -> f
    android.support.v7.widget.RecyclerView$SmoothScroller$Action mRecyclingAction -> g
    void <init>() -> <init>
    void setTargetPosition(int) -> a
    void stop() -> b
    boolean isPendingInitialRun() -> c
    boolean isRunning() -> d
    int getTargetPosition() -> e
    void onAnimation(int,int) -> f
    int getChildPosition(android.view.View) -> g
    void onChildAttachedToWindow(android.view.View) -> h
    void onStop() -> i
    void onSeekTargetStep(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> j
    void onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> k
    void access$3500(android.support.v7.widget.RecyclerView$SmoothScroller,int,int) -> l
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.a.ag:
    java.lang.ref.WeakReference mView -> a
    java.lang.Runnable mStartAction -> b
    java.lang.Runnable mEndAction -> c
    int mOldLayerType -> d
    android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl IMPL -> e
    void <init>(android.view.View) -> <init>
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> a
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> b
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> c
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> d
    long getDuration() -> e
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> f
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> g
    void cancel() -> h
    void start() -> i
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> j
    android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> k
    java.lang.Runnable access$002(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> l
    java.lang.Runnable access$102(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> m
    java.lang.Runnable access$100(android.support.v4.view.ViewPropertyAnimatorCompat) -> n
    java.lang.Runnable access$000(android.support.v4.view.ViewPropertyAnimatorCompat) -> o
    int access$402(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> p
    int access$400(android.support.v4.view.ViewPropertyAnimatorCompat) -> q
    void <clinit>() -> <clinit>
android.support.design.widget.SwipeDismissBehavior$SettleRunnable -> android.support.design.widget.ce:
    android.view.View mView -> a
    boolean mDismiss -> b
    android.support.design.widget.SwipeDismissBehavior this$0 -> c
    void <init>(android.support.design.widget.SwipeDismissBehavior,android.view.View,boolean) -> <init>
    void run() -> run
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    void <init>(android.support.v4.util.MapCollections,int) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v7.view.menu.CascadingMenuPopup$2 -> android.support.v7.view.menu.w:
    android.support.v7.view.menu.CascadingMenuPopup this$0 -> a
    void <init>(android.support.v7.view.menu.CascadingMenuPopup) -> <init>
    void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> b
android.support.v7.view.menu.MenuItemWrapperJB -> android.support.v7.view.menu.v:
    void <init>(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> <init>
    android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> a
android.support.design.widget.Snackbar$10 -> android.support.design.widget.s:
    int val$event -> a
    android.support.design.widget.Snackbar this$0 -> b
    void <init>(android.support.design.widget.Snackbar,int) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.view.ViewCompat$LollipopViewCompatImpl -> android.support.v4.a.v:
    void <init>() -> <init>
    void setTransitionName(android.view.View,java.lang.String) -> a
    void requestApplyInsets(android.view.View) -> b
    void setElevation(android.view.View,float) -> c
    float getElevation(android.view.View) -> d
    float getTranslationZ(android.view.View) -> e
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> f
    void stopNestedScroll(android.view.View) -> g
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> h
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> i
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> j
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> k
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> l
    float getZ(android.view.View) -> m
    void offsetLeftAndRight(android.view.View,int) -> b
    void offsetTopAndBottom(android.view.View,int) -> c
android.support.design.widget.CoordinatorLayout$LayoutParams -> android.support.design.widget.cm:
    android.support.design.widget.CoordinatorLayout$Behavior mBehavior -> a
    boolean mBehaviorResolved -> b
    int gravity -> c
    int anchorGravity -> d
    int keyline -> e
    int mAnchorId -> f
    int insetEdge -> g
    int dodgeInsetEdges -> h
    int mInsetOffsetX -> i
    int mInsetOffsetY -> j
    android.view.View mAnchorView -> k
    android.view.View mAnchorDirectChild -> l
    boolean mDidBlockInteraction -> m
    boolean mDidAcceptNestedScroll -> n
    boolean mDidChangeAfterNestedScroll -> o
    android.graphics.Rect mLastChildRect -> p
    java.lang.Object mBehaviorTag -> q
    void <init>(int,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.support.design.widget.CoordinatorLayout$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    int getAnchorId() -> a
    android.support.design.widget.CoordinatorLayout$Behavior getBehavior() -> b
    void setBehavior(android.support.design.widget.CoordinatorLayout$Behavior) -> c
    void setLastChildRect(android.graphics.Rect) -> d
    android.graphics.Rect getLastChildRect() -> e
    boolean checkAnchorChanged() -> f
    boolean didBlockInteraction() -> g
    boolean isBlockingInteractionBelow(android.support.design.widget.CoordinatorLayout,android.view.View) -> h
    void resetTouchBehaviorTracking() -> i
    void resetNestedScroll() -> j
    void acceptNestedScroll(boolean) -> k
    boolean isNestedScrollAccepted() -> l
    boolean getChangedAfterNestedScroll() -> m
    void setChangedAfterNestedScroll(boolean) -> n
    void resetChangedAfterNestedScroll() -> o
    boolean dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> p
    android.view.View findAnchorView(android.support.design.widget.CoordinatorLayout,android.view.View) -> q
    void resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout) -> r
    boolean verifyAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout) -> s
    boolean shouldDodge(android.view.View,int) -> t
    int access$100(android.support.design.widget.CoordinatorLayout$LayoutParams) -> u
    int access$200(android.support.design.widget.CoordinatorLayout$LayoutParams) -> v
    int access$102(android.support.design.widget.CoordinatorLayout$LayoutParams,int) -> w
    int access$202(android.support.design.widget.CoordinatorLayout$LayoutParams,int) -> x
android.support.v7.app.AppCompatDelegateImplBase$1 -> android.support.v7.c.ba:
    java.lang.Thread$UncaughtExceptionHandler val$defHandler -> a
    void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean shouldWrapException(java.lang.Throwable) -> a
android.support.v7.widget.ActivityChooserModel$1 -> android.support.v7.widget.cf:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.a.a.u:
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> c
    void setFromIndex(java.lang.Object,int) -> d
    void setToIndex(java.lang.Object,int) -> e
    void setScrollX(java.lang.Object,int) -> f
    void setScrollY(java.lang.Object,int) -> g
    void setMaxScrollX(java.lang.Object,int) -> a
    void setMaxScrollY(java.lang.Object,int) -> b
android.support.v7.app.ActionBar -> android.support.v7.c.d:
    void <init>() -> <init>
    void setDisplayHomeAsUpEnabled(boolean) -> a
    void setDisplayShowTitleEnabled(boolean) -> b
    int getDisplayOptions() -> d
    boolean isShowing() -> g
    android.content.Context getThemedContext() -> h
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> i
    void setShowHideAnimationEnabled(boolean) -> j
    void onConfigurationChanged(android.content.res.Configuration) -> k
    void dispatchMenuVisibilityChanged(boolean) -> l
    android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback) -> m
    boolean invalidateOptionsMenu() -> n
    boolean onKeyShortcut(int,android.view.KeyEvent) -> o
    boolean collapseActionView() -> p
    void setWindowTitle(java.lang.CharSequence) -> q
    boolean requestFocus() -> r
    void onDestroy() -> s
android.support.design.widget.AppBarLayout$ScrollingViewBehavior -> android.support.design.widget.AppBarLayout$ScrollingViewBehavior:
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> a
    boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> l
    boolean onRequestChildRectangleOnScreen(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> b
    void offsetChildAsNeeded(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> c
    float getOverlapRatioForOffset(android.view.View) -> d
    int getAppBarLayoutOffset(android.support.design.widget.AppBarLayout) -> e
    android.support.design.widget.AppBarLayout findFirstDependency(java.util.List) -> f
    int getScrollRange(android.view.View) -> g
    android.view.View findFirstDependency(java.util.List) -> f
    boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> h
    int getTopAndBottomOffset() -> i
    boolean setTopAndBottomOffset(int) -> j
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> k
android.support.v7.content.res.AppCompatResources$ColorStateListCacheEntry -> android.support.v7.f.a.c:
    android.content.res.ColorStateList value -> a
    android.content.res.Configuration configuration -> b
    void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
android.support.v7.widget.ActionBarOverlayLayout -> android.support.v7.widget.ActionBarOverlayLayout:
    int mActionBarHeight -> a
    int mWindowVisibility -> b
    android.support.v7.widget.ContentFrameLayout mContent -> c
    android.support.v7.widget.ActionBarContainer mActionBarTop -> d
    android.support.v7.widget.DecorToolbar mDecorToolbar -> e
    android.graphics.drawable.Drawable mWindowContentOverlay -> f
    boolean mIgnoreWindowContentOverlay -> g
    boolean mOverlayMode -> h
    boolean mHasNonEmbeddedTabs -> i
    boolean mHideOnContentScroll -> j
    boolean mAnimatingForFling -> k
    int mHideOnContentScrollReference -> l
    int mLastSystemUiVisibility -> m
    android.graphics.Rect mBaseContentInsets -> n
    android.graphics.Rect mLastBaseContentInsets -> o
    android.graphics.Rect mContentInsets -> p
    android.graphics.Rect mBaseInnerInsets -> q
    android.graphics.Rect mInnerInsets -> r
    android.graphics.Rect mLastInnerInsets -> s
    android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback -> t
    int ACTION_BAR_ANIMATE_DELAY -> u
    android.support.v4.widget.ScrollerCompat mFlingEstimator -> v
    android.support.v4.view.ViewPropertyAnimatorCompat mCurrentActionBarTopAnimator -> w
    android.support.v4.view.ViewPropertyAnimatorListener mTopAnimatorListener -> x
    java.lang.Runnable mRemoveActionBarHideOffset -> y
    java.lang.Runnable mAddActionBarHideOffset -> z
    int[] ATTRS -> aa
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> ab
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void init(android.content.Context) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setActionBarVisibilityCallback(android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    void setOverlayMode(boolean) -> setOverlayMode
    boolean isInOverlayMode() -> b
    void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    void setShowingForActionMode(boolean) -> setShowingForActionMode
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> c
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    android.support.v7.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.v7.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void draw(android.graphics.Canvas) -> draw
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
    void pullChildren() -> d
    android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View) -> e
    void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    int getActionBarHideOffset() -> getActionBarHideOffset
    void setActionBarHideOffset(int) -> setActionBarHideOffset
    void haltActionBarHideOffsetAnimations() -> f
    void postRemoveActionBarHideOffset() -> g
    void postAddActionBarHideOffset() -> h
    void removeActionBarHideOffset() -> i
    void addActionBarHideOffset() -> j
    boolean shouldHideActionBarOnFling(float,float) -> k
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    java.lang.CharSequence getTitle() -> getTitle
    void initFeature(int) -> l
    void setUiOptions(int) -> setUiOptions
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    boolean canShowOverflowMenu() -> m
    boolean isOverflowMenuShowing() -> n
    boolean isOverflowMenuShowPending() -> o
    boolean showOverflowMenu() -> p
    boolean hideOverflowMenu() -> q
    void setMenuPrepared() -> setMenuPrepared
    void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> setMenu
    void dismissPopups() -> r
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v4.view.ViewPropertyAnimatorCompat access$002(android.support.v7.widget.ActionBarOverlayLayout,android.support.v4.view.ViewPropertyAnimatorCompat) -> s
    boolean access$102(android.support.v7.widget.ActionBarOverlayLayout,boolean) -> t
    void access$200(android.support.v7.widget.ActionBarOverlayLayout) -> u
    android.support.v4.view.ViewPropertyAnimatorListener access$300(android.support.v7.widget.ActionBarOverlayLayout) -> v
    android.support.v7.widget.ActionBarContainer access$400(android.support.v7.widget.ActionBarOverlayLayout) -> w
    void <clinit>() -> <clinit>
com.murrayc.galaxyzoo.app.Utils$NetworkConnected -> com.murrayc.galaxyzoo.app.s:
    boolean connected -> a
    boolean notConnectedBecauseNotOnWifi -> b
    void <init>(boolean,boolean) -> <init>
android.support.v4.content.ContentResolverCompat -> android.support.v4.d.af:
    android.support.v4.content.ContentResolverCompat$ContentResolverCompatImpl IMPL -> a
    void <init>() -> <init>
    android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal) -> a
    void <clinit>() -> <clinit>
android.support.v4.app.ActivityOptionsCompat21 -> android.support.v4.b.am:
    android.app.ActivityOptions mActivityOptions -> a
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> a
    void <init>(android.app.ActivityOptions) -> <init>
    android.os.Bundle toBundle() -> b
android.support.v7.widget.Toolbar$OnMenuItemClickListener -> android.support.v7.widget.ba:
    boolean onMenuItemClick(android.view.MenuItem) -> a
com.squareup.picasso.Utils$1 -> com.squareup.a.ao:
    void <init>(android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.murrayc.galaxyzoo.app.SettingsActivity -> com.murrayc.galaxyzoo.app.SettingsActivity:
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.d.h:
    java.util.concurrent.CountDownLatch mDone -> a
    boolean waiting -> b
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    void <init>(android.support.v4.content.AsyncTaskLoader) -> <init>
    java.lang.Object doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> b
    void onCancelled(java.lang.Object) -> c
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> d
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.a.a.v:
    void <init>() -> <init>
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    java.lang.CharSequence getClassName(java.lang.Object) -> e
    java.lang.CharSequence getContentDescription(java.lang.Object) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> g
    java.lang.CharSequence getText(java.lang.Object) -> h
    boolean isCheckable(java.lang.Object) -> i
    boolean isChecked(java.lang.Object) -> j
    boolean isClickable(java.lang.Object) -> k
    boolean isEnabled(java.lang.Object) -> l
    boolean isFocusable(java.lang.Object) -> m
    boolean isFocused(java.lang.Object) -> n
    boolean isLongClickable(java.lang.Object) -> o
    boolean isPassword(java.lang.Object) -> p
    boolean isScrollable(java.lang.Object) -> q
    boolean isSelected(java.lang.Object) -> r
    void setCheckable(java.lang.Object,boolean) -> s
    void setChecked(java.lang.Object,boolean) -> t
    void setClassName(java.lang.Object,java.lang.CharSequence) -> u
    void setScrollable(java.lang.Object,boolean) -> v
android.support.v4.util.Pools$Pool -> android.support.v4.c.i:
    java.lang.Object acquire() -> a
    boolean release(java.lang.Object) -> b
android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo -> android.support.v7.widget.bm:
    android.content.pm.ResolveInfo resolveInfo -> a
    float weight -> b
    android.support.v7.widget.ActivityChooserModel this$0 -> c
    void <init>(android.support.v7.widget.ActivityChooserModel,android.content.pm.ResolveInfo) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo) -> a
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.d.x:
    void <init>() -> <init>
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v7.widget.DefaultItemAnimator$ChangeInfo -> android.support.v7.widget.gp:
    android.support.v7.widget.RecyclerView$ViewHolder oldHolder -> a
    android.support.v7.widget.RecyclerView$ViewHolder newHolder -> b
    int fromX -> c
    int fromY -> d
    int toX -> e
    int toY -> f
    void <init>(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> <init>
    void <init>(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    java.lang.String toString() -> toString
    void <init>(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int,android.support.v7.widget.DefaultItemAnimator$1) -> <init>
android.support.v7.widget.AppCompatImageButton -> android.support.v7.widget.do:
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    android.support.v7.widget.AppCompatImageHelper mImageHelper -> b
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setImageResource(int) -> setImageResource
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    boolean hasOverlappingRendering() -> hasOverlappingRendering
android.support.v7.app.ToolbarActionBar$MenuBuilderCallback -> android.support.v7.c.bc:
    android.support.v7.app.ToolbarActionBar this$0 -> a
    void <init>(android.support.v7.app.ToolbarActionBar) -> <init>
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> b
    void <init>(android.support.v7.app.ToolbarActionBar,android.support.v7.app.ToolbarActionBar$1) -> <init>
android.support.v7.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB -> android.support.v7.view.menu.s:
    android.support.v4.view.ActionProvider$VisibilityListener mListener -> a
    android.support.v7.view.menu.MenuItemWrapperJB this$0 -> b
    void <init>(android.support.v7.view.menu.MenuItemWrapperJB,android.content.Context,android.view.ActionProvider) -> <init>
    android.view.View onCreateActionView(android.view.MenuItem) -> a
    boolean overridesItemVisibility() -> c
    boolean isVisible() -> d
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> e
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.widget.RecyclerView$SmoothScroller$Action -> android.support.v7.widget.ag:
    int mDx -> a
    int mDy -> b
    int mDuration -> c
    int mJumpToPosition -> d
    android.view.animation.Interpolator mInterpolator -> e
    boolean changed -> f
    int consecutiveUpdates -> g
    void <init>(int,int) -> <init>
    void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    boolean hasJumpTarget() -> a
    void runIfNecessary(android.support.v7.widget.RecyclerView) -> b
    void validate() -> c
    void access$6100(android.support.v7.widget.RecyclerView$SmoothScroller$Action,android.support.v7.widget.RecyclerView) -> d
android.support.design.widget.FloatingActionButtonGingerbread$1 -> android.support.design.widget.v:
    boolean val$fromUser -> a
    android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener -> b
    android.support.design.widget.FloatingActionButtonGingerbread this$0 -> c
    void <init>(android.support.design.widget.FloatingActionButtonGingerbread,boolean,android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.app.NavUtils -> android.support.v4.b.ac:
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpFromSameTask(android.app.Activity) -> b
    void navigateUpTo(android.app.Activity,android.content.Intent) -> c
    android.content.Intent getParentActivityIntent(android.app.Activity) -> d
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> e
    java.lang.String getParentActivityName(android.app.Activity) -> f
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> g
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.squareup.picasso.MediaStoreRequestHandler$PicassoKind -> com.squareup.a.am:
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind MICRO -> a
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind MINI -> b
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind FULL -> c
    int androidKind -> d
    int width -> e
    int height -> f
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind[] $VALUES -> g
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind[] values() -> values
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int,int,int) -> <init>
    void <clinit>() -> <clinit>
com.murrayc.galaxyzoo.app.QuestionHelpActivity -> com.murrayc.galaxyzoo.app.QuestionHelpActivity:
    java.lang.String mGroupId -> a
    java.lang.String mQuestionId -> b
    void <init>() -> <init>
    void abandonItem() -> c
    java.lang.String getGroupId() -> a
    java.lang.String getQuestionId() -> b
    void navigateToList() -> d
    void onCreate(android.os.Bundle) -> onCreate
    void setGroupId(java.lang.String) -> c
    void setQuestionId(java.lang.String) -> d
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.murrayc.galaxyzoo.app.Singleton$LocaleDetails -> com.murrayc.galaxyzoo.app.y:
    java.lang.String countryCode -> a
    java.lang.String language -> b
    void <init>() -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void <init>(com.murrayc.galaxyzoo.app.Singleton$LocaleDetails) -> <init>
android.support.v4.view.AbsSavedState$2 -> android.support.v4.a.eg:
    void <init>() -> <init>
    android.support.v4.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    android.support.v4.view.AbsSavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> b
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.animation.LinearOutSlowInInterpolator -> android.support.v4.a.b.c:
    float[] VALUES -> a
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
    void <clinit>() -> <clinit>
android.support.v7.widget.ActionMenuView$ActionMenuChildView -> android.support.v7.widget.bu:
    boolean needsDividerBefore() -> a
    boolean needsDividerAfter() -> b
android.support.design.widget.FloatingActionButtonGingerbread$ShadowAnimatorImpl -> android.support.design.widget.cn:
    boolean mValidValues -> a
    float mShadowSizeStart -> b
    float mShadowSizeEnd -> c
    android.support.design.widget.FloatingActionButtonGingerbread this$0 -> d
    void <init>(android.support.design.widget.FloatingActionButtonGingerbread) -> <init>
    void onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat) -> d
    void onAnimationEnd(android.support.design.widget.ValueAnimatorCompat) -> a
    float getTargetShadowSize() -> a
    void <init>(android.support.design.widget.FloatingActionButtonGingerbread,android.support.design.widget.FloatingActionButtonGingerbread$1) -> <init>
com.murrayc.galaxyzoo.app.ListFragment$2 -> com.murrayc.galaxyzoo.app.bf:
    com.murrayc.galaxyzoo.app.ListFragment this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.ListFragment) -> <init>
    void onItemClicked(int,android.view.View) -> a
android.support.v7.widget.DecorContentParent -> android.support.v7.widget.fm:
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void initFeature(int) -> l
    boolean canShowOverflowMenu() -> m
    boolean isOverflowMenuShowing() -> n
    boolean isOverflowMenuShowPending() -> o
    boolean showOverflowMenu() -> p
    boolean hideOverflowMenu() -> q
    void setMenuPrepared() -> setMenuPrepared
    void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> setMenu
    void dismissPopups() -> r
com.squareup.picasso.Picasso$Priority -> com.squareup.a.f:
    com.squareup.picasso.Picasso$Priority LOW -> a
    com.squareup.picasso.Picasso$Priority NORMAL -> b
    com.squareup.picasso.Picasso$Priority HIGH -> c
    com.squareup.picasso.Picasso$Priority[] $VALUES -> d
    com.squareup.picasso.Picasso$Priority[] values() -> values
    com.squareup.picasso.Picasso$Priority valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
android.support.v7.widget.TintContextWrapper -> android.support.v7.widget.eb:
    java.util.ArrayList sCache -> a
    android.content.res.Resources mResources -> b
    android.content.res.Resources$Theme mTheme -> c
    android.content.Context wrap(android.content.Context) -> a
    boolean shouldWrap(android.content.Context) -> b
    void <init>(android.content.Context) -> <init>
    android.content.res.Resources$Theme getTheme() -> getTheme
    void setTheme(int) -> setTheme
    android.content.res.Resources getResources() -> getResources
    void <clinit>() -> <clinit>
android.support.annotation.NonNull -> android.support.annotation.c:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.a.a.an:
    void <init>() -> <init>
    void setFromIndex(java.lang.Object,int) -> d
    void setItemCount(java.lang.Object,int) -> c
    void setScrollX(java.lang.Object,int) -> f
    void setScrollY(java.lang.Object,int) -> g
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> e
android.support.design.widget.CoordinatorLayout$SavedState -> android.support.design.widget.i:
    android.util.SparseArray behaviorStates -> a
    android.os.Parcelable$Creator CREATOR -> b
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
com.squareup.picasso.MediaStoreRequestHandler -> com.squareup.a.al:
    java.lang.String[] CONTENT_ORIENTATION -> a
    void <init>(android.content.Context) -> <init>
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> b
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind getPicassoKind(int,int) -> a
    int getExifOrientation(android.content.ContentResolver,android.net.Uri) -> b
    void <clinit>() -> <clinit>
android.support.v4.widget.PopupWindowCompat$Api23PopupWindowImpl -> android.support.v4.widget.x:
    void <init>() -> <init>
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
    void setWindowLayoutType(android.widget.PopupWindow,int) -> b
android.support.design.widget.Snackbar$SnackbarLayout$OnLayoutChangeListener -> android.support.design.widget.f:
    void onLayoutChange(android.view.View,int,int,int,int) -> a
com.squareup.picasso.PicassoDrawable -> com.squareup.a.as:
    android.graphics.Paint DEBUG_PAINT -> a
    boolean debugging -> b
    float density -> c
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> d
    android.graphics.drawable.Drawable placeholder -> e
    long startTimeMillis -> f
    boolean animating -> g
    int alpha -> h
    void setBitmap(android.widget.ImageView,android.content.Context,android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom,boolean,boolean) -> a
    void setPlaceholder(android.widget.ImageView,android.graphics.drawable.Drawable) -> b
    void <init>(android.content.Context,android.graphics.Bitmap,android.graphics.drawable.Drawable,com.squareup.picasso.Picasso$LoadedFrom,boolean,boolean) -> <init>
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void drawDebugIndicator(android.graphics.Canvas) -> c
    android.graphics.Path getTrianglePath(android.graphics.Point,int) -> d
    void <clinit>() -> <clinit>
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.d.d:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> i
android.support.v4.view.ViewCompat$MarshmallowViewCompatImpl -> android.support.v4.a.u:
    void <init>() -> <init>
    void setScrollIndicators(android.view.View,int,int) -> a
    void offsetLeftAndRight(android.view.View,int) -> b
    void offsetTopAndBottom(android.view.View,int) -> c
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.a.bj:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    void <init>(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> <init>
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.ao:
    android.support.v4.widget.AutoScrollHelper this$0 -> a
    void <init>(android.support.v4.widget.AutoScrollHelper) -> <init>
    void run() -> run
    void <init>(android.support.v4.widget.AutoScrollHelper,android.support.v4.widget.AutoScrollHelper$1) -> <init>
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.a.a.ab:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl,android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    boolean performAction(int,int,android.os.Bundle) -> b
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> c
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate -> android.support.v7.widget.fh:
    void <init>() -> <init>
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    void <init>(android.support.v7.widget.AppCompatDrawableManager$1) -> <init>
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$1 -> android.support.v4.a.a.aq:
android.support.v4.view.ViewCompatHC -> android.support.v4.a.bc:
    void <init>() -> <init>
    long getFrameTime() -> a
    float getAlpha(android.view.View) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> c
    int getLayerType(android.view.View) -> d
    int resolveSizeAndState(int,int,int) -> e
    int getMeasuredWidthAndState(android.view.View) -> f
    int getMeasuredState(android.view.View) -> g
    float getTranslationX(android.view.View) -> h
    float getTranslationY(android.view.View) -> i
    void setTranslationX(android.view.View,float) -> j
    void setTranslationY(android.view.View,float) -> k
    android.graphics.Matrix getMatrix(android.view.View) -> l
    void setAlpha(android.view.View,float) -> m
    void jumpDrawablesToCurrentState(android.view.View) -> n
    void setSaveFromParentEnabled(android.view.View,boolean) -> o
    void setActivated(android.view.View,boolean) -> p
    int combineMeasuredStates(int,int) -> q
    void offsetTopAndBottom(android.view.View,int) -> r
    void offsetLeftAndRight(android.view.View,int) -> s
    void tickleInvalidationFlag(android.view.View) -> t
com.android.volley.toolbox.PoolingByteArrayOutputStream -> com.android.a.a.i:
    com.android.volley.toolbox.ByteArrayPool mPool -> a
    void <init>(com.android.volley.toolbox.ByteArrayPool,int) -> <init>
    void close() -> close
    void finalize() -> finalize
    void expand(int) -> a
    void write(byte[],int,int) -> write
    void write(int) -> write
android.support.v7.view.menu.ShowableListMenu -> android.support.v7.view.menu.r:
    void show() -> t
    void dismiss() -> u
    boolean isShowing() -> aa
    android.widget.ListView getListView() -> ac
android.support.v4.widget.EdgeEffectCompatLollipop -> android.support.v4.widget.f:
    void <init>() -> <init>
    boolean onPull(java.lang.Object,float,float) -> a
android.support.design.widget.ValueAnimatorCompat$AnimatorListener -> android.support.design.widget.y:
    void onAnimationStart(android.support.design.widget.ValueAnimatorCompat) -> b
    void onAnimationEnd(android.support.design.widget.ValueAnimatorCompat) -> a
    void onAnimationCancel(android.support.design.widget.ValueAnimatorCompat) -> c
android.support.v7.widget.RecyclerView$ViewHolder -> android.support.v7.widget.k:
    android.view.View itemView -> a
    int mPosition -> b
    int mOldPosition -> c
    long mItemId -> d
    int mItemViewType -> e
    int mPreLayoutPosition -> f
    android.support.v7.widget.RecyclerView$ViewHolder mShadowedHolder -> g
    android.support.v7.widget.RecyclerView$ViewHolder mShadowingHolder -> h
    int mFlags -> i
    java.util.List FULLUPDATE_PAYLOADS -> j
    java.util.List mPayloads -> k
    java.util.List mUnmodifiedPayloads -> l
    int mIsRecyclableCount -> m
    android.support.v7.widget.RecyclerView$Recycler mScrapContainer -> n
    boolean mInChangeScrap -> o
    int mWasImportantForAccessibilityBeforeHidden -> p
    android.support.v7.widget.RecyclerView mOwnerRecyclerView -> q
    void <init>(android.view.View) -> <init>
    void flagRemovedAndOffsetPosition(int,int,boolean) -> a
    void offsetPosition(int,boolean) -> b
    void clearOldPosition() -> c
    void saveOldPosition() -> d
    boolean shouldIgnore() -> e
    int getLayoutPosition() -> f
    int getAdapterPosition() -> g
    int getOldPosition() -> h
    long getItemId() -> i
    int getItemViewType() -> j
    boolean isScrap() -> k
    void unScrap() -> l
    boolean wasReturnedFromScrap() -> m
    void clearReturnedFromScrapFlag() -> n
    void clearTmpDetachFlag() -> o
    void setScrapContainer(android.support.v7.widget.RecyclerView$Recycler,boolean) -> p
    boolean isInvalid() -> q
    boolean needsUpdate() -> r
    boolean isBound() -> s
    boolean isRemoved() -> t
    boolean hasAnyOfTheFlags(int) -> u
    boolean isTmpDetached() -> v
    boolean isAdapterPositionUnknown() -> w
    void setFlags(int,int) -> x
    void addFlags(int) -> y
    void addChangePayload(java.lang.Object) -> z
    void createPayloadsIfNeeded() -> aa
    void clearPayload() -> ab
    java.util.List getUnmodifiedPayloads() -> ac
    void resetInternal() -> ad
    void onEnteredHiddenState() -> ae
    void onLeftHiddenState() -> af
    java.lang.String toString() -> toString
    void setIsRecyclable(boolean) -> ag
    boolean isRecyclable() -> ah
    boolean shouldBeKeptAsChild() -> ai
    boolean doesTransientStatePreventRecycling() -> aj
    boolean isUpdated() -> ak
    void access$1500(android.support.v7.widget.RecyclerView$ViewHolder) -> al
    void access$1600(android.support.v7.widget.RecyclerView$ViewHolder) -> am
    boolean access$4800(android.support.v7.widget.RecyclerView$ViewHolder) -> an
    android.support.v7.widget.RecyclerView$Recycler access$4902(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$Recycler) -> ao
    boolean access$5002(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> ap
    boolean access$5000(android.support.v7.widget.RecyclerView$ViewHolder) -> aq
    boolean access$6300(android.support.v7.widget.RecyclerView$ViewHolder) -> ar
    int access$6500(android.support.v7.widget.RecyclerView$ViewHolder) -> as
    void <clinit>() -> <clinit>
android.support.design.widget.StateListAnimator$Tuple -> android.support.design.widget.cd:
    int[] mSpecs -> a
    android.support.design.widget.ValueAnimatorCompat mAnimator -> b
    void <init>(int[],android.support.design.widget.ValueAnimatorCompat) -> <init>
    void <init>(int[],android.support.design.widget.ValueAnimatorCompat,android.support.design.widget.StateListAnimator$1) -> <init>
android.support.v7.widget.DefaultItemAnimator$VpaListenerAdapter -> android.support.v7.widget.hm:
    void <init>() -> <init>
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
    void <init>(android.support.v7.widget.DefaultItemAnimator$1) -> <init>
android.support.v7.app.AlertController$AlertParams$2 -> android.support.v7.c.s:
    int mLabelIndex -> a
    int mIsCheckedIndex -> b
    android.widget.ListView val$listView -> c
    android.support.v7.app.AlertController val$dialog -> d
    android.support.v7.app.AlertController$AlertParams this$0 -> e
    void <init>(android.support.v7.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,android.widget.ListView,android.support.v7.app.AlertController) -> <init>
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
android.support.v7.widget.AppCompatSpinner -> android.support.v7.widget.fq:
    boolean IS_AT_LEAST_M -> a
    boolean IS_AT_LEAST_JB -> b
    int[] ATTRS_ANDROID_SPINNERMODE -> c
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> d
    android.content.Context mPopupContext -> e
    android.support.v7.widget.ForwardingListener mForwardingListener -> f
    android.widget.SpinnerAdapter mTempAdapter -> g
    boolean mPopupSet -> h
    android.support.v7.widget.AppCompatSpinner$DropdownPopup mPopup -> i
    int mDropDownWidth -> j
    android.graphics.Rect mTempRect -> k
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    android.content.Context getPopupContext() -> getPopupContext
    void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    void setDropDownWidth(int) -> setDropDownWidth
    int getDropDownWidth() -> getDropDownWidth
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onMeasure(int,int) -> onMeasure
    boolean performClick() -> performClick
    void setPrompt(java.lang.CharSequence) -> setPrompt
    java.lang.CharSequence getPrompt() -> getPrompt
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.support.v7.widget.AppCompatSpinner$DropdownPopup access$000(android.support.v7.widget.AppCompatSpinner) -> b
    boolean access$100() -> c
    android.graphics.Rect access$300(android.support.v7.widget.AppCompatSpinner) -> d
    int access$400(android.support.v7.widget.AppCompatSpinner) -> e
    int access$500(android.support.v7.widget.AppCompatSpinner,android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> f
    void <clinit>() -> <clinit>
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl23 -> android.support.v4.b.ai:
    android.support.v4.app.ActivityOptionsCompat23 mImpl -> a
    void <init>(android.support.v4.app.ActivityOptionsCompat23) -> <init>
    android.os.Bundle toBundle() -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.d.y:
    void <init>() -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.a.da:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl,android.support.v4.view.AccessibilityDelegateCompat) -> <init>
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> c
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> e
    void sendAccessibilityEvent(android.view.View,int) -> f
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> g
com.murrayc.galaxyzoo.app.QuestionFragment$2 -> com.murrayc.galaxyzoo.app.bt:
    com.murrayc.galaxyzoo.app.QuestionFragment this$0 -> a
    java.lang.String val$questionId -> b
    java.lang.String val$answerId -> c
    void <init>(com.murrayc.galaxyzoo.app.QuestionFragment,java.lang.String,java.lang.String) -> <init>
    void onClick(android.view.View) -> onClick
com.squareup.picasso.Picasso$Builder -> com.squareup.a.d:
    android.content.Context context -> a
    com.squareup.picasso.Downloader downloader -> b
    java.util.concurrent.ExecutorService service -> c
    com.squareup.picasso.Cache cache -> d
    com.squareup.picasso.Picasso$Listener listener -> e
    com.squareup.picasso.Picasso$RequestTransformer transformer -> f
    java.util.List requestHandlers -> g
    android.graphics.Bitmap$Config defaultBitmapConfig -> h
    boolean indicatorsEnabled -> i
    boolean loggingEnabled -> j
    void <init>(android.content.Context) -> <init>
    com.squareup.picasso.Picasso$Builder listener(com.squareup.picasso.Picasso$Listener) -> a
    com.squareup.picasso.Picasso build() -> b
android.support.v4.widget.TintableCompoundButton -> android.support.v4.widget.m:
    void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.a.cg:
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> b
android.support.v7.widget.MenuItemHoverListener -> android.support.v7.widget.dt:
    void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> b
com.murrayc.galaxyzoo.app.ListFragment$1 -> com.murrayc.galaxyzoo.app.be:
    void <init>() -> <init>
    void navigateToNextAvailable() -> a
    void onItemSelected(java.lang.String,boolean,android.view.View) -> b
android.support.design.widget.FloatingActionButtonImpl$1 -> android.support.design.widget.co:
    android.support.design.widget.FloatingActionButtonImpl this$0 -> a
    void <init>(android.support.design.widget.FloatingActionButtonImpl) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentState -> android.support.v4.b.bl:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    boolean mHidden -> j
    android.os.Bundle mSavedFragmentState -> k
    android.support.v4.app.Fragment mInstance -> l
    android.os.Parcelable$Creator CREATOR -> m
    void <init>(android.support.v4.app.Fragment) -> <init>
    void <init>(android.os.Parcel) -> <init>
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentHostCallback,android.support.v4.app.Fragment,android.support.v4.app.FragmentManagerNonConfig) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache -> android.support.v7.widget.bv:
    void <init>(int) -> <init>
    android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> a
    android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> b
    int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> c
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.b.ax:
    android.view.ViewGroup wrap(android.view.View) -> a
    void <init>(android.content.Context) -> <init>
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v7.content.res.AppCompatColorStateListInflater -> android.support.v7.f.a.b:
    void <init>() -> <init>
    android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> a
    android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> b
    android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> c
    android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> d
    int modulateColorAlpha(int,float) -> e
android.support.v7.app.AlertController -> android.support.v7.c.k:
    android.content.Context mContext -> a
    android.support.v7.app.AppCompatDialog mDialog -> b
    android.view.Window mWindow -> c
    java.lang.CharSequence mTitle -> d
    java.lang.CharSequence mMessage -> e
    android.widget.ListView mListView -> f
    android.view.View mView -> g
    int mViewLayoutResId -> h
    int mViewSpacingLeft -> i
    int mViewSpacingTop -> j
    int mViewSpacingRight -> k
    int mViewSpacingBottom -> l
    boolean mViewSpacingSpecified -> m
    android.widget.Button mButtonPositive -> n
    java.lang.CharSequence mButtonPositiveText -> o
    android.os.Message mButtonPositiveMessage -> p
    android.widget.Button mButtonNegative -> q
    java.lang.CharSequence mButtonNegativeText -> r
    android.os.Message mButtonNegativeMessage -> s
    android.widget.Button mButtonNeutral -> t
    java.lang.CharSequence mButtonNeutralText -> u
    android.os.Message mButtonNeutralMessage -> v
    android.support.v4.widget.NestedScrollView mScrollView -> w
    int mIconId -> x
    android.graphics.drawable.Drawable mIcon -> y
    android.widget.ImageView mIconView -> z
    android.widget.TextView mTitleView -> aa
    android.widget.TextView mMessageView -> ab
    android.view.View mCustomTitleView -> ac
    android.widget.ListAdapter mAdapter -> ad
    int mCheckedItem -> ae
    int mAlertDialogLayout -> af
    int mButtonPanelSideLayout -> ag
    int mListLayout -> ah
    int mMultiChoiceItemLayout -> ai
    int mSingleChoiceItemLayout -> aj
    int mListItemLayout -> ak
    int mButtonPanelLayoutHint -> al
    android.os.Handler mHandler -> am
    android.view.View$OnClickListener mButtonHandler -> an
    void <init>(android.content.Context,android.support.v7.app.AppCompatDialog,android.view.Window) -> <init>
    boolean canTextInput(android.view.View) -> a
    void installContent() -> b
    int selectContentView() -> c
    void setTitle(java.lang.CharSequence) -> d
    void setCustomTitle(android.view.View) -> e
    void setMessage(java.lang.CharSequence) -> f
    void setView(int) -> g
    void setView(android.view.View) -> h
    void setView(android.view.View,int,int,int,int) -> i
    void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message) -> j
    void setIcon(int) -> k
    void setIcon(android.graphics.drawable.Drawable) -> l
    int getIconAttributeResId(int) -> m
    boolean onKeyDown(int,android.view.KeyEvent) -> n
    boolean onKeyUp(int,android.view.KeyEvent) -> o
    android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> p
    void setupView() -> q
    void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> r
    void setupCustomContent(android.view.ViewGroup) -> s
    void setupTitle(android.view.ViewGroup) -> t
    void setupContent(android.view.ViewGroup) -> u
    void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> v
    void setupButtons(android.view.ViewGroup) -> w
    android.widget.Button access$000(android.support.v7.app.AlertController) -> x
    android.os.Message access$100(android.support.v7.app.AlertController) -> y
    android.widget.Button access$200(android.support.v7.app.AlertController) -> z
    android.os.Message access$300(android.support.v7.app.AlertController) -> aa
    android.widget.Button access$400(android.support.v7.app.AlertController) -> ab
    android.os.Message access$500(android.support.v7.app.AlertController) -> ac
    android.support.v7.app.AppCompatDialog access$600(android.support.v7.app.AlertController) -> ad
    android.os.Handler access$700(android.support.v7.app.AlertController) -> ae
    void access$800(android.view.View,android.view.View,android.view.View) -> af
    android.support.v4.widget.NestedScrollView access$900(android.support.v7.app.AlertController) -> ag
    android.widget.ListView access$1000(android.support.v7.app.AlertController) -> ah
    int access$1100(android.support.v7.app.AlertController) -> ai
    int access$1200(android.support.v7.app.AlertController) -> aj
    int access$1300(android.support.v7.app.AlertController) -> ak
    int access$1400(android.support.v7.app.AlertController) -> al
    android.widget.ListAdapter access$1502(android.support.v7.app.AlertController,android.widget.ListAdapter) -> am
    int access$1602(android.support.v7.app.AlertController,int) -> an
    android.widget.ListView access$1002(android.support.v7.app.AlertController,android.widget.ListView) -> ao
android.support.v7.view.menu.StandardMenuPopup -> android.support.v7.view.menu.i:
    android.content.Context mContext -> a
    android.support.v7.view.menu.MenuBuilder mMenu -> b
    android.support.v7.view.menu.MenuAdapter mAdapter -> c
    boolean mOverflowOnly -> d
    int mPopupMaxWidth -> e
    int mPopupStyleAttr -> f
    int mPopupStyleRes -> g
    android.support.v7.widget.MenuPopupWindow mPopup -> h
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> i
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> j
    android.view.View mAnchorView -> k
    android.view.View mShownAnchorView -> l
    android.support.v7.view.menu.MenuPresenter$Callback mPresenterCallback -> m
    android.view.ViewTreeObserver mTreeObserver -> n
    boolean mWasDismissed -> o
    boolean mHasContentWidth -> p
    int mContentWidth -> q
    int mDropDownGravity -> r
    boolean mShowTitle -> s
    void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    void setForceShowIcon(boolean) -> a
    void setGravity(int) -> b
    boolean tryShow() -> c
    void show() -> t
    void dismiss() -> u
    void addMenu(android.support.v7.view.menu.MenuBuilder) -> d
    boolean isShowing() -> aa
    void onDismiss() -> onDismiss
    void updateMenuView(boolean) -> b
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> c
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> d
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> e
    boolean flagActionItems() -> f
    void setAnchorView(android.view.View) -> e
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> f
    android.widget.ListView getListView() -> ac
    void setHorizontalOffset(int) -> g
    void setVerticalOffset(int) -> h
    void setShowTitle(boolean) -> i
    android.support.v7.widget.MenuPopupWindow access$000(android.support.v7.view.menu.StandardMenuPopup) -> j
    android.view.View access$100(android.support.v7.view.menu.StandardMenuPopup) -> k
android.support.v7.transition.ActionBarTransition -> android.support.v7.g.a:
    void <init>() -> <init>
    void beginDelayedTransition(android.view.ViewGroup) -> a
android.support.v7.widget.OpReorderer$Callback -> android.support.v7.widget.gf:
    android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> t
    void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp) -> u
android.support.v7.widget.RecyclerView$RecyclerListener -> android.support.v7.widget.m:
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> a
android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter -> android.support.v7.widget.bz:
    android.support.v7.widget.ActivityChooserModel mDataModel -> a
    int mMaxActivityCount -> b
    boolean mShowDefaultActivity -> c
    boolean mHighlightDefaultActivity -> d
    boolean mShowFooterView -> e
    android.support.v7.widget.ActivityChooserView this$0 -> f
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
    void setDataModel(android.support.v7.widget.ActivityChooserModel) -> a
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int measureContentWidth() -> b
    void setMaxActivityCount(int) -> c
    android.content.pm.ResolveInfo getDefaultActivity() -> d
    void setShowFooterView(boolean) -> e
    int getActivityCount() -> f
    int getHistorySize() -> g
    android.support.v7.widget.ActivityChooserModel getDataModel() -> h
    void setShowDefaultActivity(boolean,boolean) -> i
    boolean getShowDefaultActivity() -> j
    void <init>(android.support.v7.widget.ActivityChooserView,android.support.v7.widget.ActivityChooserView$1) -> <init>
com.squareup.picasso.Stats -> com.squareup.a.k:
    android.os.HandlerThread statsThread -> a
    com.squareup.picasso.Cache cache -> b
    android.os.Handler handler -> c
    long cacheHits -> d
    long cacheMisses -> e
    long totalDownloadSize -> f
    long totalOriginalBitmapSize -> g
    long totalTransformedBitmapSize -> h
    long averageDownloadSize -> i
    long averageOriginalBitmapSize -> j
    long averageTransformedBitmapSize -> k
    int downloadCount -> l
    int originalBitmapCount -> m
    int transformedBitmapCount -> n
    void <init>(com.squareup.picasso.Cache) -> <init>
    void dispatchBitmapDecoded(android.graphics.Bitmap) -> a
    void dispatchBitmapTransformed(android.graphics.Bitmap) -> b
    void dispatchDownloadFinished(long) -> c
    void dispatchCacheHit() -> d
    void dispatchCacheMiss() -> e
    void performCacheHit() -> f
    void performCacheMiss() -> g
    void performDownloadFinished(java.lang.Long) -> h
    void performBitmapDecoded(long) -> i
    void performBitmapTransformed(long) -> j
    com.squareup.picasso.StatsSnapshot createSnapshot() -> k
    void processBitmap(android.graphics.Bitmap,int) -> l
    long getAverage(int,long) -> m
android.support.v7.app.TwilightManager$TwilightState -> android.support.v7.c.ah:
    boolean isNight -> a
    long yesterdaySunset -> b
    long todaySunrise -> c
    long todaySunset -> d
    long tomorrowSunrise -> e
    long nextUpdate -> f
    void <init>() -> <init>
    void <init>(android.support.v7.app.TwilightManager$1) -> <init>
android.support.v4.widget.TextViewCompat -> android.support.v4.widget.w:
    android.support.v4.widget.TextViewCompat$TextViewCompatImpl IMPL -> a
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    void <clinit>() -> <clinit>
android.support.design.widget.Snackbar$5$1 -> android.support.design.widget.cq:
    android.support.design.widget.Snackbar$5 this$1 -> a
    void <init>(android.support.design.widget.Snackbar$5) -> <init>
    void run() -> run
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> android.support.v7.widget.hb:
    void <init>() -> <init>
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.os.ParcelableCompat -> android.support.v4.f.k:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
    void <init>() -> <init>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.a.a.af:
    void <init>() -> <init>
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> a
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> b
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> c
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> d
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.b.x:
    void <init>() -> <init>
android.support.v7.widget.ActionBarOverlayLayout$LayoutParams -> android.support.v7.widget.ft:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> android.support.v4.a.a.ah:
    void <init>() -> <init>
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> b
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> c
com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter$UploadTask -> com.murrayc.galaxyzoo.app.syncadapter.c:
    java.lang.String mAuthApiKey -> a
    java.lang.String mAuthName -> b
    java.lang.String mGroupId -> c
    java.lang.String mItemId -> d
    java.lang.String mSubjectId -> e
    com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter this$0 -> f
    void <init>(com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    void onPostExecute(boolean) -> a
    void run() -> run
android.support.graphics.drawable.AnimatedVectorDrawableCompat$1 -> android.support.a.a.c:
    android.support.graphics.drawable.AnimatedVectorDrawableCompat this$0 -> a
    void <init>(android.support.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl -> android.support.v4.a.cl:
    void <init>() -> <init>
android.support.v4.app.BaseFragmentActivityJB -> android.support.v4.b.n:
    boolean mStartedActivityFromFragment -> a
    void <init>() -> <init>
    void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
android.support.v7.widget.AppCompatCheckedTextView -> android.support.v7.widget.eg:
    int[] TINT_ATTRS -> a
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> b
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void drawableStateChanged() -> drawableStateChanged
    void <clinit>() -> <clinit>
com.murrayc.galaxyzoo.app.Log -> com.murrayc.galaxyzoo.app.af:
    void error(java.lang.String) -> a
    void info(java.lang.String) -> b
    void error(java.lang.String,java.lang.Throwable) -> c
    void <init>() -> <init>
    java.lang.String defaultString(java.lang.String) -> d
    void info(java.lang.String,java.lang.Throwable) -> e
com.squareup.picasso.Utils$PicassoThreadFactory -> com.squareup.a.aq:
    void <init>() -> <init>
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v7.widget.ScrollingTabContainerView$TabClickListener -> android.support.v7.widget.dk:
    android.support.v7.widget.ScrollingTabContainerView this$0 -> a
    void <init>(android.support.v7.widget.ScrollingTabContainerView) -> <init>
    void onClick(android.view.View) -> onClick
    void <init>(android.support.v7.widget.ScrollingTabContainerView,android.support.v7.widget.ScrollingTabContainerView$1) -> <init>
com.murrayc.galaxyzoo.app.ClassifyFragment$Callbacks -> com.murrayc.galaxyzoo.app.k:
    void listenForNetworkReconnection() -> a
    void warnAboutNetworkProblemWithRetry() -> b
android.support.v7.view.menu.MenuWrapperICS -> android.support.v7.view.menu.ae:
    void <init>(android.content.Context,android.support.v4.internal.view.SupportMenu) -> <init>
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr1Impl -> android.support.v4.a.a.ac:
    void <init>() -> <init>
com.android.volley.toolbox.HttpStack -> com.android.a.a.e:
    HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> a
android.support.v7.app.AppCompatDelegateImplBase -> android.support.v7.c.ab:
    boolean sInstalledExceptionHandler -> a
    boolean SHOULD_INSTALL_EXCEPTION_HANDLER -> b
    int[] sWindowBackgroundStyleable -> c
    android.content.Context mContext -> d
    android.view.Window mWindow -> e
    android.view.Window$Callback mOriginalWindowCallback -> f
    android.view.Window$Callback mAppCompatWindowCallback -> g
    android.support.v7.app.AppCompatCallback mAppCompatCallback -> h
    android.support.v7.app.ActionBar mActionBar -> i
    android.view.MenuInflater mMenuInflater -> j
    boolean mHasActionBar -> k
    boolean mOverlayActionBar -> l
    boolean mOverlayActionMode -> m
    boolean mIsFloating -> n
    boolean mWindowNoTitle -> o
    java.lang.CharSequence mTitle -> p
    boolean mIsStarted -> q
    boolean mIsDestroyed -> r
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    void initWindowDecorActionBar() -> b
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> a
    android.support.v7.app.ActionBar getSupportActionBar() -> d
    android.support.v7.app.ActionBar peekSupportActionBar() -> c
    android.view.MenuInflater getMenuInflater() -> f
    void onPanelClosed(int,android.view.Menu) -> d
    boolean onMenuOpened(int,android.view.Menu) -> e
    boolean dispatchKeyEvent(android.view.KeyEvent) -> f
    boolean onKeyShortcut(int,android.view.KeyEvent) -> g
    android.content.Context getActionBarThemedContext() -> h
    void onStart() -> j
    void onStop() -> k
    void onDestroy() -> t
    boolean applyDayNight() -> x
    boolean isDestroyed() -> i
    android.view.Window$Callback getWindowCallback() -> m
    void setTitle(java.lang.CharSequence) -> r
    void onSaveInstanceState(android.os.Bundle) -> w
    void onTitleChanged(java.lang.CharSequence) -> n
    java.lang.CharSequence getTitle() -> o
    void <clinit>() -> <clinit>
android.support.v4.graphics.drawable.DrawableCompatApi23 -> android.support.v4.j.a.j:
    void <init>() -> <init>
    boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> a
    int getLayoutDirection(android.graphics.drawable.Drawable) -> b
com.murrayc.galaxyzoo.app.SubjectFragment$2 -> com.murrayc.galaxyzoo.app.bm:
    com.murrayc.galaxyzoo.app.SubjectFragment this$0 -> a
    void <init>(com.murrayc.galaxyzoo.app.SubjectFragment) -> <init>
    void onError() -> b
    void onSuccess() -> c
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.a.h:
    void <init>() -> <init>
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> b
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> c
    android.view.View getActionView(android.view.MenuItem) -> d
    boolean expandActionView(android.view.MenuItem) -> a
    boolean isActionViewExpanded(android.view.MenuItem) -> b
android.support.v7.widget.AdapterHelper$Callback -> android.support.v7.widget.gu:
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int) -> a
    void offsetPositionsForRemovingInvisible(int,int) -> b
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> c
    void markViewHoldersUpdated(int,int,java.lang.Object) -> d
    void onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> e
    void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> f
    void offsetPositionsForAdd(int,int) -> g
    void offsetPositionsForMove(int,int) -> h
android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager -> android.support.v7.c.ay:
    android.support.v7.app.TwilightManager mTwilightManager -> a
    boolean mIsNight -> b
    android.content.BroadcastReceiver mAutoTimeChangeReceiver -> c
    android.content.IntentFilter mAutoTimeChangeReceiverFilter -> d
    android.support.v7.app.AppCompatDelegateImplV14 this$0 -> e
    void <init>(android.support.v7.app.AppCompatDelegateImplV14,android.support.v7.app.TwilightManager) -> <init>
    int getApplyableNightMode() -> a
    void dispatchTimeChanged() -> b
    void setup() -> c
    void cleanup() -> d
android.support.v7.widget.LinearLayoutManager$LayoutState -> android.support.v7.widget.ap:
    boolean mRecycle -> a
    int mOffset -> b
    int mAvailable -> c
    int mCurrentPosition -> d
    int mItemDirection -> e
    int mLayoutDirection -> f
    int mScrollingOffset -> g
    int mExtra -> h
    boolean mIsPreLayout -> i
    int mLastScrollDelta -> j
    java.util.List mScrapList -> k
    boolean mInfinite -> l
    void <init>() -> <init>
    boolean hasMore(android.support.v7.widget.RecyclerView$State) -> a
    android.view.View next(android.support.v7.widget.RecyclerView$Recycler) -> b
    android.view.View nextViewFromScrapList() -> c
    void assignPositionFromScrapList() -> d
    void assignPositionFromScrapList(android.view.View) -> e
    android.view.View nextViewInLimitedList(android.view.View) -> f
com.squareup.picasso.RequestCreator -> com.squareup.a.l:
    java.util.concurrent.atomic.AtomicInteger nextId -> a
    com.squareup.picasso.Picasso picasso -> b
    com.squareup.picasso.Request$Builder data -> c
    boolean noFade -> d
    boolean deferred -> e
    boolean setPlaceholder -> f
    int placeholderResId -> g
    int errorResId -> h
    int memoryPolicy -> i
    int networkPolicy -> j
    android.graphics.drawable.Drawable placeholderDrawable -> k
    android.graphics.drawable.Drawable errorDrawable -> l
    java.lang.Object tag -> m
    void <init>(com.squareup.picasso.Picasso,android.net.Uri,int) -> <init>
    void <init>() -> <init>
    com.squareup.picasso.RequestCreator unfit() -> a
    com.squareup.picasso.RequestCreator resize(int,int) -> b
    void into(android.widget.ImageView,com.squareup.picasso.Callback) -> c
    android.graphics.drawable.Drawable getPlaceholderDrawable() -> d
    com.squareup.picasso.Request createRequest(long) -> e
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.a.a.y:
    void <init>() -> <init>
com.android.volley.Cache -> com.android.a.n:
    com.android.volley.Cache$Entry get(java.lang.String) -> a
    void put(java.lang.String,com.android.volley.Cache$Entry) -> c
    void initialize() -> b
android.support.v4.view.ActionProvider -> android.support.v4.a.l:
    android.content.Context mContext -> a
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> b
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> c
    void <init>(android.content.Context) -> <init>
    android.view.View onCreateActionView() -> a
    android.view.View onCreateActionView(android.view.MenuItem) -> a
    boolean overridesItemVisibility() -> c
    boolean isVisible() -> d
    boolean onPerformDefaultAction() -> e
    boolean hasSubMenu() -> b
    void onPrepareSubMenu(android.view.SubMenu) -> c
    void subUiVisibilityChanged(boolean) -> a
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> b
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> e
    void reset() -> f
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1 -> android.support.v4.b.be:
    android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener this$0 -> a
    void <init>(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener) -> <init>
    void run() -> run
android.support.v7.widget.ActionMenuView$MenuBuilderCallback -> android.support.v7.widget.cl:
    android.support.v7.widget.ActionMenuView this$0 -> a
    void <init>(android.support.v7.widget.ActionMenuView) -> <init>
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> b
    void <init>(android.support.v7.widget.ActionMenuView,android.support.v7.widget.ActionMenuView$1) -> <init>
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.a.r:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> c
com.murrayc.galaxyzoo.app.provider.Config$SubjectGroup -> com.murrayc.galaxyzoo.app.provider.g:
    com.murrayc.galaxyzoo.app.DecisionTree$DiscussQuestion discussQuestion -> a
    java.lang.String filename -> b
    boolean useForNewQueries -> c
    void <init>(java.lang.String,boolean,com.murrayc.galaxyzoo.app.DecisionTree$DiscussQuestion) -> <init>
    com.murrayc.galaxyzoo.app.DecisionTree$DiscussQuestion getDiscussQuestion() -> a
    java.lang.String getFilename() -> b
    boolean getUseForNewQueries() -> c
android.support.v4.content.Loader$OnLoadCanceledListener -> android.support.v4.d.c:
    void onLoadCanceled(android.support.v4.content.Loader) -> h
com.murrayc.galaxyzoo.app.QuestionFragment$ClassificationInProgress$QuestionAnswer -> com.murrayc.galaxyzoo.app.as:
    android.os.Parcelable$Creator CREATOR -> a
    java.lang.String answerId -> b
    java.util.List checkboxIds -> c
    java.lang.String questionId -> d
    void <init>(android.os.Parcel) -> <init>
    void <init>(com.murrayc.galaxyzoo.app.QuestionFragment$ClassificationInProgress$QuestionAnswer) -> <init>
    void <init>(java.lang.String,java.lang.String,java.util.List) -> <init>
    java.util.List deepCopyCheckBoxIds(java.util.List) -> a
    int describeContents() -> describeContents
    boolean equals(java.lang.Object) -> equals
    java.lang.String getAnswerId() -> b
    java.util.List getCheckboxIds() -> c
    java.lang.String getQuestionId() -> d
    int hashCode() -> hashCode
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
    void <init>(android.os.Parcel,com.murrayc.galaxyzoo.app.QuestionFragment$ClassificationInProgress$QuestionAnswer) -> <init>
android.support.v4.app.BackStackRecord$1 -> android.support.v4.b.ay:
    android.support.v4.app.Fragment val$inFragment -> a
    android.support.v4.app.BackStackRecord this$0 -> b
    void <init>(android.support.v4.app.BackStackRecord,android.support.v4.app.Fragment) -> <init>
    android.view.View getView() -> a
android.support.v4.graphics.drawable.DrawableWrapperHoneycomb -> android.support.v4.j.a.g:
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources) -> <init>
    void jumpToCurrentState() -> jumpToCurrentState
    android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState() -> c
android.support.design.widget.Snackbar$9 -> android.support.design.widget.ac:
    int val$event -> a
    android.support.design.widget.Snackbar this$0 -> b
    void <init>(android.support.design.widget.Snackbar,int) -> <init>
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v4.widget.NestedScrollView$OnScrollChangeListener -> android.support.v4.widget.ar:
    void onScrollChange(android.support.v4.widget.NestedScrollView,int,int,int,int) -> a
com.android.volley.NetworkError -> com.android.a.ad:
    void <init>() -> <init>
    void <init>(java.lang.Throwable) -> <init>
    void <init>(com.android.volley.NetworkResponse) -> <init>
android.support.v7.view.menu.MenuItemImpl$1 -> android.support.v7.view.menu.u:
    android.support.v7.view.menu.MenuItemImpl this$0 -> a
    void <init>(android.support.v7.view.menu.MenuItemImpl) -> <init>
    void onActionProviderVisibilityChanged(boolean) -> a
android.support.v4.app.FragmentState$1 -> android.support.v4.b.az:
    void <init>() -> <init>
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener -> android.support.design.widget.bq:
    void <init>() -> <init>
    void onShown(android.support.design.widget.FloatingActionButton) -> a
    void onHidden(android.support.design.widget.FloatingActionButton) -> b
android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener -> android.support.v7.widget.c:
    android.support.v7.widget.RecyclerView this$0 -> a
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void <init>(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$1) -> <init>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.a.a.j:
    void <init>() -> <init>
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    java.lang.CharSequence getClassName(java.lang.Object) -> e
    java.lang.CharSequence getContentDescription(java.lang.Object) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> g
    java.lang.CharSequence getText(java.lang.Object) -> h
    boolean isCheckable(java.lang.Object) -> i
    boolean isChecked(java.lang.Object) -> j
    boolean isClickable(java.lang.Object) -> k
    boolean isEnabled(java.lang.Object) -> l
    boolean isFocusable(java.lang.Object) -> m
    boolean isFocused(java.lang.Object) -> n
    boolean isLongClickable(java.lang.Object) -> o
    boolean isPassword(java.lang.Object) -> p
    boolean isScrollable(java.lang.Object) -> q
    boolean isSelected(java.lang.Object) -> r
    void setCheckable(java.lang.Object,boolean) -> s
    void setChecked(java.lang.Object,boolean) -> t
    void setClassName(java.lang.Object,java.lang.CharSequence) -> u
    void setScrollable(java.lang.Object,boolean) -> v
com.murrayc.galaxyzoo.app.QuestionFragment$ClassificationInProgress -> com.murrayc.galaxyzoo.app.ar:
    android.os.Parcelable$Creator CREATOR -> a
    java.util.List answers -> b
    boolean favorite -> c
    void <init>() -> <init>
    void <init>(com.murrayc.galaxyzoo.app.QuestionFragment$ClassificationInProgress) -> <init>
    void <init>(android.os.Parcel) -> <init>
    void add(java.lang.String,java.lang.String,java.util.List) -> a
    int describeContents() -> describeContents
    boolean equals(java.lang.Object) -> equals
    java.util.List getAnswers() -> b
    boolean hasEnoughAnswers() -> c
    int hashCode() -> hashCode
    boolean isFavorite() -> d
    void setFavorite(boolean) -> e
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v7.widget.ChildHelper$Callback -> android.support.v7.widget.hq:
    int getChildCount() -> a
    void addView(android.view.View,int) -> b
    int indexOfChild(android.view.View) -> c
    void removeViewAt(int) -> d
    android.view.View getChildAt(int) -> e
    void removeAllViews() -> f
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> g
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> h
    void detachViewFromParent(int) -> i
    void onEnteredHiddenState(android.view.View) -> j
    void onLeftHiddenState(android.view.View) -> k
android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl -> android.support.v4.b.by:
    void <init>() -> <init>
    java.lang.String permissionToOp(java.lang.String) -> a
    int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> b
    void <init>(android.support.v4.app.AppOpsManagerCompat$1) -> <init>
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.a.cr:
    void <init>() -> <init>
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> b
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> e
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> f
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> g
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> h
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> i
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> b
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.b.bc:
    void <init>() -> <init>
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.os.TraceCompat -> android.support.v4.f.l:
    void beginSection(java.lang.String) -> a
    void endSection() -> b
    void <init>() -> <init>
android.support.v7.widget.RecyclerView$OnFlingListener -> android.support.v7.widget.d:
    void <init>() -> <init>
    boolean onFling(int,int) -> a
android.support.v7.widget.LayoutState -> android.support.v7.widget.gg:
    boolean mRecycle -> a
    int mAvailable -> b
    int mCurrentPosition -> c
    int mItemDirection -> d
    int mLayoutDirection -> e
    int mStartLine -> f
    int mEndLine -> g
    boolean mStopInFocusable -> h
    boolean mInfinite -> i
    void <init>() -> <init>
    boolean hasMore(android.support.v7.widget.RecyclerView$State) -> a
    android.view.View next(android.support.v7.widget.RecyclerView$Recycler) -> b
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTransitionCompat21$EpicenterView -> android.support.v4.b.aq:
    android.view.View epicenter -> a
    void <init>() -> <init>
android.support.v7.view.menu.MenuView$ItemView -> android.support.v7.view.menu.aa:
    void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> a
    android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    boolean prefersCondensedTitle() -> e
android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener -> android.support.v7.widget.ep:
    void onFitSystemWindows(android.graphics.Rect) -> a
android.support.v7.widget.ContentFrameLayout$OnAttachListener -> android.support.v7.widget.dr:
    void onDetachedFromWindow() -> a
    void onAttachedFromWindow() -> b
android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl -> android.support.v4.widget.al:
    void <init>() -> <init>
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
android.support.v4.view.ViewPropertyAnimatorUpdateListener -> android.support.v4.a.bg:
    void onAnimationUpdate(android.view.View) -> a
android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl -> android.support.v4.j.a.s:
    void <init>() -> <init>
    boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> a
    int getLayoutDirection(android.graphics.drawable.Drawable) -> b
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> c
com.squareup.picasso.Dispatcher$DispatcherHandler -> com.squareup.a.bg:
    com.squareup.picasso.Dispatcher dispatcher -> a
    void <init>(android.os.Looper,com.squareup.picasso.Dispatcher) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.design.widget.CoordinatorLayout$DefaultBehavior -> android.support.design.widget.bg:
    java.lang.Class value() -> a
com.murrayc.galaxyzoo.app.provider.ItemsContentProvider -> com.murrayc.galaxyzoo.app.provider.ItemsContentProvider:
    java.lang.String[] FILE_MIME_TYPES -> a
    java.lang.String[] PROJECTION_FILES_FILE_DATA -> b
    java.lang.String[] PROJECTION_REMOVE_ITEM -> c
    com.murrayc.galaxyzoo.app.provider.ItemsContentProvider$DatabaseHelper mOpenDbHelper -> d
    com.murrayc.galaxyzoo.app.syncadapter.SubjectAdder mSubjectAdder -> e
    com.murrayc.galaxyzoo.app.provider.client.ZooniverseClient mZooniverseClient -> f
    java.util.Map sClassificationAnswersProjectionMap -> g
    java.util.Map sClassificationCheckboxesProjectionMap -> h
    java.util.Map sItemsProjectionMap -> i
    android.content.UriMatcher sUriMatcher -> j
    void <init>() -> <init>
    java.lang.String createCacheFile(java.lang.String) -> a
    android.net.Uri createFileUri() -> b
    boolean createFileUrisForImages(android.content.ContentValues) -> c
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.database.sqlite.SQLiteDatabase getDb() -> d
    android.content.ContentValues getMappedContentValues(android.content.ContentValues,java.util.Map) -> e
    java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String) -> getStreamTypes
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    android.net.Uri insertMappedValues(java.lang.String,android.content.ContentValues,java.util.Map,android.net.Uri) -> f
    boolean onCreate() -> onCreate
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    com.murrayc.galaxyzoo.app.provider.ItemsContentProvider$UriParts parseContentUri(android.net.Uri) -> g
    java.lang.String prependIdToSelection(java.lang.String) -> h
    java.lang.String[] prependToArray(java.lang.String[],long) -> i
    java.lang.String[] prependToArray(java.lang.String[],java.lang.String) -> j
    void putValueInContentValues(android.content.ContentValues,java.lang.String,java.lang.Object) -> k
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    android.database.Cursor queryItemNext(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> l
    void removeItem(java.lang.String) -> m
    void removeItem(java.lang.String,java.lang.String[]) -> n
    void requestSync() -> o
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int updateMappedValues(java.lang.String,android.content.ContentValues,java.util.Map,java.lang.String,java.lang.String[]) -> p
    void <clinit>() -> <clinit>
android.support.v7.widget.ActionMenuPresenter$OverflowPopup -> android.support.v7.widget.cq:
    android.support.v7.widget.ActionMenuPresenter this$0 -> a
    void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    void onDismiss() -> a
android.support.v7.widget.OrientationHelper -> android.support.v7.widget.as:
    android.support.v7.widget.RecyclerView$LayoutManager mLayoutManager -> a
    int mLastTotalSpace -> b
    android.graphics.Rect mTmpRect -> c
    void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    void onLayoutComplete() -> a
    int getTotalSpaceChange() -> b
    int getDecoratedStart(android.view.View) -> c
    int getDecoratedEnd(android.view.View) -> d
    int getTransformedEndWithDecoration(android.view.View) -> e
    int getTransformedStartWithDecoration(android.view.View) -> f
    int getDecoratedMeasurement(android.view.View) -> g
    int getDecoratedMeasurementInOther(android.view.View) -> h
    int getStartAfterPadding() -> i
    int getEndAfterPadding() -> j
    int getEnd() -> k
    void offsetChildren(int) -> l
    int getTotalSpace() -> m
    int getEndPadding() -> n
    int getMode() -> o
    int getModeInOther() -> p
    android.support.v7.widget.OrientationHelper createOrientationHelper(android.support.v7.widget.RecyclerView$LayoutManager,int) -> q
    android.support.v7.widget.OrientationHelper createHorizontalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> r
    android.support.v7.widget.OrientationHelper createVerticalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> s
    void <init>(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.OrientationHelper$1) -> <init>
android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener -> android.support.v7.widget.l:
    void onChildViewAttachedToWindow(android.view.View) -> a
    void onChildViewDetachedFromWindow(android.view.View) -> b
android.support.v7.app.AlertController$4 -> android.support.v7.c.bl:
    android.view.View val$top -> a
    android.view.View val$bottom -> b
    android.support.v7.app.AlertController this$0 -> c
    void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View) -> <init>
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
android.support.v7.widget.RecyclerView$RecycledViewPool -> android.support.v7.widget.u:
    android.util.SparseArray mScrap -> a
    android.util.SparseIntArray mMaxScrap -> b
    int mAttachCount -> c
    void <init>() -> <init>
    void clear() -> a
    android.support.v7.widget.RecyclerView$ViewHolder getRecycledView(int) -> b
    void putRecycledView(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    void attach(android.support.v7.widget.RecyclerView$Adapter) -> d
    void detach() -> e
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean) -> f
    java.util.ArrayList getScrapHeapForType(int) -> g
android.support.design.widget.HeaderBehavior$FlingRunnable -> android.support.design.widget.bu:
    android.support.design.widget.CoordinatorLayout mParent -> a
    android.view.View mLayout -> b
    android.support.design.widget.HeaderBehavior this$0 -> c
    void <init>(android.support.design.widget.HeaderBehavior,android.support.design.widget.CoordinatorLayout,android.view.View) -> <init>
    void run() -> run
android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate -> android.support.v7.widget.fg:
    void <init>() -> <init>
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    void <init>(android.support.v7.widget.AppCompatDrawableManager$1) -> <init>
android.support.v7.widget.ActionBarOverlayLayout$1 -> android.support.v7.widget.cx:
    android.support.v7.widget.ActionBarOverlayLayout this$0 -> a
    void <init>(android.support.v7.widget.ActionBarOverlayLayout) -> <init>
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl -> android.support.v4.j.a.x:
    void <init>() -> <init>
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> e
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> f
    void setTint(android.graphics.drawable.Drawable,int) -> g
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> h
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> i
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> c
    void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> k
    boolean canApplyTheme(android.graphics.drawable.Drawable) -> l
    android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> m
    void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> n
android.support.v7.widget.AppCompatSpinner$DropdownPopup$3 -> android.support.v7.widget.dd:
    android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener -> a
    android.support.v7.widget.AppCompatSpinner$DropdownPopup this$1 -> b
    void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    void onDismiss() -> onDismiss
android.support.v4.util.ArrayMap -> android.support.v4.c.r:
    android.support.v4.util.MapCollections mCollections -> a
    void <init>() -> <init>
    void <init>(int) -> <init>
    android.support.v4.util.MapCollections getCollection() -> a
    void putAll(java.util.Map) -> putAll
    boolean retainAll(java.util.Collection) -> b
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.z:
    void <init>() -> <init>
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> b
    boolean isFinished(java.lang.Object) -> c
    boolean onRelease(java.lang.Object) -> d
    boolean onAbsorb(java.lang.Object,int) -> e
    boolean draw(java.lang.Object,android.graphics.Canvas) -> f
    boolean onPull(java.lang.Object,float,float) -> g
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.b.k:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> b
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> k
    void onLoaderReset(android.support.v4.content.Loader) -> f
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener -> android.support.v4.b.bd:
    android.view.animation.Animation$AnimationListener mOriginalListener -> a
    boolean mShouldRunOnHWLayer -> b
    android.view.View mView -> c
    void <init>(android.view.View,android.view.animation.Animation) -> <init>
    void <init>(android.view.View,android.view.animation.Animation,android.view.animation.Animation$AnimationListener) -> <init>
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    android.view.View access$000(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener) -> a
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener -> android.support.v4.a.ca:
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> a
    boolean mAnimEndCalled -> b
    void <init>(android.support.v4.view.ViewPropertyAnimatorCompat) -> <init>
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v4.view.ViewParentCompatLollipop -> android.support.v4.a.bx:
    void <init>() -> <init>
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> c
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> d
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> e
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> f
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> g
android.support.v7.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> android.support.v7.view.i:
    java.lang.Class[] PARAM_TYPES -> a
    java.lang.Object mRealOwner -> b
    java.lang.reflect.Method mMethod -> c
    void <init>(java.lang.Object,java.lang.String) -> <init>
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    void <clinit>() -> <clinit>
android.support.v7.widget.RecyclerView$5 -> android.support.v7.widget.hh:
    android.support.v7.widget.RecyclerView this$0 -> a
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    int getChildCount() -> a
    void addView(android.view.View,int) -> b
    int indexOfChild(android.view.View) -> c
    void removeViewAt(int) -> d
    android.view.View getChildAt(int) -> e
    void removeAllViews() -> f
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> g
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> h
    void detachViewFromParent(int) -> i
    void onEnteredHiddenState(android.view.View) -> j
    void onLeftHiddenState(android.view.View) -> k
android.support.v7.app.AppCompatDelegateImplV9$5$1 -> android.support.v7.c.bk:
    android.support.v7.app.AppCompatDelegateImplV9$5 this$1 -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplV9$5) -> <init>
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.a.a.l:
    void <init>() -> <init>
    void setMaxScrollX(java.lang.Object,int) -> a
    void setMaxScrollY(java.lang.Object,int) -> b
android.support.v7.widget.ActionMenuPresenter$1 -> android.support.v7.widget.ey:
com.android.volley.ExecutorDelivery$1 -> com.android.a.v:
    android.os.Handler val$handler -> a
    com.android.volley.ExecutorDelivery this$0 -> b
    void <init>(com.android.volley.ExecutorDelivery,android.os.Handler) -> <init>
    void execute(java.lang.Runnable) -> execute
android.support.v4.widget.TextViewCompat$Api23TextViewCompatImpl -> android.support.v4.widget.q:
    void <init>() -> <init>
android.support.v7.view.menu.MenuItemWrapperICS -> android.support.v7.view.menu.ah:
    java.lang.reflect.Method mSetExclusiveCheckableMethod -> a
    void <init>(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> <init>
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    android.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    android.view.SubMenu getSubMenu() -> getSubMenu
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    void setExclusiveCheckable(boolean) -> a
    android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> a
android.support.v7.widget.ActionBarContainer -> android.support.v7.widget.ActionBarContainer:
    boolean mIsTransitioning -> a
    android.view.View mTabContainer -> b
    android.view.View mActionBarView -> c
    android.view.View mContextView -> d
    android.graphics.drawable.Drawable mBackground -> e
    android.graphics.drawable.Drawable mStackedBackground -> f
    android.graphics.drawable.Drawable mSplitBackground -> g
    boolean mIsSplit -> h
    boolean mIsStacked -> i
    int mHeight -> j
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setVisibility(int) -> setVisibility
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setTabContainer(android.support.v7.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    boolean isCollapsed(android.view.View) -> a
    int getMeasuredHeightWithMargins(android.view.View) -> b
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.a.a.at:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> a
    void <init>() -> <init>
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> a
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> b
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> c
    void <clinit>() -> <clinit>
android.support.v4.view.ViewCompatBase -> android.support.v4.a.an:
    java.lang.reflect.Field sMinWidthField -> a
    boolean sMinWidthFieldFetched -> b
    java.lang.reflect.Field sMinHeightField -> c
    boolean sMinHeightFieldFetched -> d
    void <init>() -> <init>
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> a
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> b
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> c
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> d
    boolean isLaidOut(android.view.View) -> e
    int getMinimumWidth(android.view.View) -> f
    int getMinimumHeight(android.view.View) -> g
    boolean isAttachedToWindow(android.view.View) -> h
    void offsetTopAndBottom(android.view.View,int) -> i
    void offsetLeftAndRight(android.view.View,int) -> j
android.support.v7.widget.ActivityChooserModel$ActivitySorter -> android.support.v7.widget.bs:
    void sort(android.content.Intent,java.util.List,java.util.List) -> a
android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback -> android.support.v7.widget.a:
    int onGetChildDrawingOrder(int,int) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.a.ao:
    void <init>() -> <init>
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> c
    void setFitsSystemWindows(android.view.View,boolean) -> d
com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter -> com.murrayc.galaxyzoo.app.syncadapter.b:
    java.lang.String[] PROJECTION_CLASSIFICATION_CHECKBOX_ID -> a
    java.lang.String[] PROJECTION_COUNT_AS_COUNT -> b
    java.lang.String[] PROJECTION_FAVORITE -> c
    java.lang.String[] PROJECTION_ID -> d
    java.lang.String[] PROJECTION_ITEMS_OUTSTANDING -> e
    java.lang.String[] PROJECTION_UPLOAD -> f
    com.murrayc.galaxyzoo.app.provider.client.ZooniverseClient mClient -> g
    android.os.Handler mHandler -> h
    boolean mRequestMoreItemsTaskInProgress -> i
    com.murrayc.galaxyzoo.app.syncadapter.SubjectAdder mSubjectAdder -> j
    int mUploadsInProgress -> k
    void <init>(android.content.Context,boolean) -> <init>
    boolean checkImagesStillExist() -> a
    void doRegularTasks() -> b
    boolean doUploadSync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> c
    boolean downloadMinimumSubjectsAsync() -> d
    boolean downloadMissingImages() -> e
    java.lang.String getAnnotationPart(int) -> f
    android.content.ContentResolver getContentResolver() -> g
    int getKeepCount() -> h
    int getMinCacheSize() -> i
    int getNotDoneCount() -> j
    int getNotDoneNeededForCache() -> k
    int getUploadedCount() -> l
    void markItemAsUploaded(java.lang.String) -> m
    void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult) -> onPerformSync
    void onQueryTaskFinished(java.util.List) -> n
    void onUploadTaskFinished(boolean,java.lang.String) -> o
    void removeItem(java.lang.String) -> p
    boolean removeOldSubjects() -> q
    void requestMoreItemsAsync(int) -> r
    boolean uploadOutstandingClassifications() -> s
    void <clinit>() -> <clinit>
    android.os.Handler -get0(com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter) -> t
    boolean -set0(com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter,boolean) -> u
    boolean -wrap0(com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> v
    void -wrap1(com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter,java.util.List) -> w
    void -wrap2(com.murrayc.galaxyzoo.app.syncadapter.SyncAdapter,boolean,java.lang.String) -> x
android.support.v7.widget.DefaultItemAnimator$4 -> android.support.v7.widget.gd:
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> a
    android.support.v4.view.ViewPropertyAnimatorCompat val$animation -> b
    android.support.v7.widget.DefaultItemAnimator this$0 -> c
    void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v4.view.ViewPropertyAnimatorCompat) -> <init>
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v7.app.ToolbarActionBar$ToolbarCallbackWrapper -> android.support.v7.c.av:
    android.support.v7.app.ToolbarActionBar this$0 -> a
    void <init>(android.support.v7.app.ToolbarActionBar,android.view.Window$Callback) -> <init>
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    android.view.View onCreatePanelView(int) -> onCreatePanelView
android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams -> android.support.v7.widget.ho:
    android.support.v7.widget.StaggeredGridLayoutManager$Span mSpan -> a
    boolean mFullSpan -> b
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    boolean isFullSpan() -> e
    int getSpanIndex() -> f
android.support.v4.util.TimeUtils -> android.support.v4.c.h:
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> b
    int formatDurationLocked(long,int) -> c
    void formatDuration(long,java.io.PrintWriter,int) -> d
    void formatDuration(long,java.io.PrintWriter) -> e
    void formatDuration(long,long,java.io.PrintWriter) -> f
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.murrayc.galaxyzoo.app.ExampleViewerFragment$1 -> com.murrayc.galaxyzoo.app.bo:
    com.murrayc.galaxyzoo.app.ExampleViewerFragment this$0 -> a
    java.lang.String val$strUri -> b
    java.lang.String val$strUriAlternative -> c
    android.widget.ImageView val$imageView -> d
    void <init>(com.murrayc.galaxyzoo.app.ExampleViewerFragment,java.lang.String,java.lang.String,android.widget.ImageView) -> <init>
    void onError() -> b
    void onSuccess() -> c
android.support.design.widget.ValueAnimatorCompat$2 -> android.support.design.widget.j:
    android.support.design.widget.ValueAnimatorCompat$AnimatorListener val$listener -> a
    android.support.design.widget.ValueAnimatorCompat this$0 -> b
    void <init>(android.support.design.widget.ValueAnimatorCompat,android.support.design.widget.ValueAnimatorCompat$AnimatorListener) -> <init>
    void onAnimationStart() -> a
    void onAnimationEnd() -> b
    void onAnimationCancel() -> c
android.support.v7.widget.ChildHelper -> android.support.v7.widget.y:
    android.support.v7.widget.ChildHelper$Callback mCallback -> a
    android.support.v7.widget.ChildHelper$Bucket mBucket -> b
    java.util.List mHiddenViews -> c
    void <init>(android.support.v7.widget.ChildHelper$Callback) -> <init>
    void hideViewInternal(android.view.View) -> a
    boolean unhideViewInternal(android.view.View) -> b
    void addView(android.view.View,boolean) -> c
    void addView(android.view.View,int,boolean) -> d
    int getOffset(int) -> e
    void removeView(android.view.View) -> f
    void removeViewAt(int) -> g
    android.view.View getChildAt(int) -> h
    void removeAllViewsUnfiltered() -> i
    android.view.View findHiddenNonRemovedView(int,int) -> j
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> k
    int getChildCount() -> l
    int getUnfilteredChildCount() -> m
    android.view.View getUnfilteredChildAt(int) -> n
    void detachViewFromParent(int) -> o
    int indexOfChild(android.view.View) -> p
    boolean isHidden(android.view.View) -> q
    void hide(android.view.View) -> r
    void unhide(android.view.View) -> s
    java.lang.String toString() -> toString
    boolean removeViewIfHidden(android.view.View) -> t
com.squareup.picasso.DeferredRequestCreator -> com.squareup.a.o:
    com.squareup.picasso.RequestCreator creator -> a
    java.lang.ref.WeakReference target -> b
    com.squareup.picasso.Callback callback -> c
    void <init>(com.squareup.picasso.RequestCreator,android.widget.ImageView,com.squareup.picasso.Callback) -> <init>
    boolean onPreDraw() -> onPreDraw
    void cancel() -> a
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.a.ax:
    void <init>() -> <init>
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> c
android.support.design.widget.FloatingActionButtonLollipop -> android.support.design.widget.ak:
    android.graphics.drawable.InsetDrawable mInsetDrawable -> a
    void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate,android.support.design.widget.ValueAnimatorCompat$Creator) -> <init>
    void setRippleColor(int) -> c
    void onElevationsChanged(float,float) -> e
    float getElevation() -> d
    void onCompatShadowChanged() -> j
    void onPaddingUpdated(android.graphics.Rect) -> a
    void onDrawableStateChanged(int[]) -> f
    void jumpDrawableToCurrentState() -> g
    boolean requirePreDrawListener() -> b
    void getPadding(android.graphics.Rect) -> k
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.a.ad:
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> a
    void <init>() -> <init>
    boolean canScrollHorizontally(android.view.View,int) -> e
    boolean canScrollVertically(android.view.View,int) -> f
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> g
    boolean hasAccessibilityDelegate(android.view.View) -> r
    boolean hasTransientState(android.view.View) -> o
    void postInvalidateOnAnimation(android.view.View) -> p
    void postOnAnimation(android.view.View,java.lang.Runnable) -> q
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> r
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> s
    void setImportantForAccessibility(android.view.View,int) -> d
    float getAlpha(android.view.View) -> y
    void setLayerType(android.view.View,int,android.graphics.Paint) -> z
    int getLayerType(android.view.View) -> aa
    int getLayoutDirection(android.view.View) -> a
    int resolveSizeAndState(int,int,int) -> ab
    int getMeasuredWidthAndState(android.view.View) -> ac
    int getMeasuredState(android.view.View) -> ad
    void setAccessibilityLiveRegion(android.view.View,int) -> a
    int getPaddingStart(android.view.View) -> c
    int getPaddingEnd(android.view.View) -> j
    void setPaddingRelative(android.view.View,int,int,int,int) -> k
    boolean hasOverlappingRendering(android.view.View) -> w
    float getTranslationX(android.view.View) -> ae
    float getTranslationY(android.view.View) -> af
    android.graphics.Matrix getMatrix(android.view.View) -> ag
    int getMinimumWidth(android.view.View) -> t
    int getMinimumHeight(android.view.View) -> u
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> x
    void setTranslationX(android.view.View,float) -> ah
    void setTranslationY(android.view.View,float) -> ai
    void setAlpha(android.view.View,float) -> aj
    void setTransitionName(android.view.View,java.lang.String) -> a
    int getWindowSystemUiVisibility(android.view.View) -> l
    void requestApplyInsets(android.view.View) -> b
    void setElevation(android.view.View,float) -> c
    float getElevation(android.view.View) -> d
    float getTranslationZ(android.view.View) -> e
    boolean getFitsSystemWindows(android.view.View) -> v
    void setFitsSystemWindows(android.view.View,boolean) -> y
    void jumpDrawablesToCurrentState(android.view.View) -> ak
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> f
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> l
    void setSaveFromParentEnabled(android.view.View,boolean) -> al
    void setActivated(android.view.View,boolean) -> am
    boolean isPaddingRelative(android.view.View) -> n
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> h
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> i
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> j
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> k
    boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int) -> a
    boolean canScrollingViewScrollVertically(android.support.v4.view.ScrollingView,int) -> b
    void stopNestedScroll(android.view.View) -> g
    boolean isLaidOut(android.view.View) -> f
    int combineMeasuredStates(int,int) -> an
    float getZ(android.view.View) -> m
    boolean isAttachedToWindow(android.view.View) -> i
    boolean hasOnClickListeners(android.view.View) -> q
    void setScrollIndicators(android.view.View,int,int) -> a
    void offsetLeftAndRight(android.view.View,int) -> b
    void offsetTopAndBottom(android.view.View,int) -> c
com.murrayc.galaxyzoo.app.ClassifyFragment$1 -> com.murrayc.galaxyzoo.app.bg:
    void <init>() -> <init>
    void abandonItem() -> c
    void listenForNetworkReconnection() -> a
    void navigateToList() -> d
    void warnAboutNetworkProblemWithRetry() -> b
android.support.graphics.drawable.PathParser -> android.support.a.a.q:
    void <init>() -> <init>
    float[] copyOfRange(float[],int,int) -> a
    android.support.graphics.drawable.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> b
    android.support.graphics.drawable.PathParser$PathDataNode[] deepCopyNodes(android.support.graphics.drawable.PathParser$PathDataNode[]) -> c
    int nextStart(java.lang.String,int) -> d
    void addNode(java.util.ArrayList,char,float[]) -> e
    float[] getFloats(java.lang.String) -> f
    void extract(java.lang.String,int,android.support.graphics.drawable.PathParser$ExtractFloatResult) -> g
    float[] access$300(float[],int,int) -> h
android.support.v7.widget.DefaultItemAnimator$2 -> android.support.v7.widget.gl:
    java.util.ArrayList val$changes -> a
    android.support.v7.widget.DefaultItemAnimator this$0 -> b
    void <init>(android.support.v7.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    void run() -> run
android.support.design.widget.SwipeDismissBehavior$1 -> android.support.design.widget.aa:
    int mOriginalCapturedViewLeft -> a
    int mActivePointerId -> b
    android.support.design.widget.SwipeDismissBehavior this$0 -> c
    void <init>(android.support.design.widget.SwipeDismissBehavior) -> <init>
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewDragStateChanged(int) -> c
    void onViewReleased(android.view.View,float,float) -> d
    boolean shouldDismiss(android.view.View,float) -> e
    int getViewHorizontalDragRange(android.view.View) -> f
    int clampViewPositionHorizontal(android.view.View,int,int) -> g
    int clampViewPositionVertical(android.view.View,int,int) -> h
    void onViewPositionChanged(android.view.View,int,int,int,int) -> i
android.support.design.widget.AppBarLayout$Behavior$1 -> android.support.design.widget.ae:
    android.support.design.widget.CoordinatorLayout val$coordinatorLayout -> a
    android.support.design.widget.AppBarLayout val$child -> b
    android.support.design.widget.AppBarLayout$Behavior this$0 -> c
    void <init>(android.support.design.widget.AppBarLayout$Behavior,android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> <init>
    void onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat) -> d
android.support.design.widget.Snackbar$Callback -> android.support.design.widget.c:
    void <init>() -> <init>
    void onDismissed(android.support.design.widget.Snackbar,int) -> a
    void onShown(android.support.design.widget.Snackbar) -> b
android.support.v7.app.AlertController$1 -> android.support.v7.c.n:
    android.support.v7.app.AlertController this$0 -> a
    void <init>(android.support.v7.app.AlertController) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.widget.ListViewCompat -> android.support.v7.widget.db:
    int[] STATE_SET_NOTHING -> a
    android.graphics.Rect mSelectorRect -> b
    int mSelectionLeftPadding -> c
    int mSelectionTopPadding -> d
    int mSelectionRightPadding -> e
    int mSelectionBottomPadding -> f
    int mMotionPosition -> g
    java.lang.reflect.Field mIsChildViewEnabled -> h
    android.support.v7.widget.ListViewCompat$GateKeeperDrawable mSelector -> i
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setSelector(android.graphics.drawable.Drawable) -> setSelector
    void drawableStateChanged() -> drawableStateChanged
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void updateSelectorStateCompat() -> a
    boolean shouldShowSelectorCompat() -> b
    boolean touchModeDrawsInPressedStateCompat() -> c
    void drawSelectorCompat(android.graphics.Canvas) -> d
    void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> e
    void positionSelectorLikeFocusCompat(int,android.view.View) -> f
    void positionSelectorCompat(int,android.view.View) -> g
    int measureHeightOfChildrenCompat(int,int,int,int,int) -> h
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void <clinit>() -> <clinit>
android.support.v4.util.LruCache -> android.support.v4.c.c:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    void <init>(int) -> <init>
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> b
    void trimToSize(int) -> c
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> d
    java.lang.Object create(java.lang.Object) -> e
    int safeSizeOf(java.lang.Object,java.lang.Object) -> f
    int sizeOf(java.lang.Object,java.lang.Object) -> g
    void evictAll() -> h
    java.lang.String toString() -> toString
android.support.v7.app.AppCompatDelegateImplN$AppCompatWindowCallbackN -> android.support.v7.c.ai:
    android.support.v7.app.AppCompatDelegateImplN this$0 -> a
    void <init>(android.support.v7.app.AppCompatDelegateImplN,android.view.Window$Callback) -> <init>
    void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
com.android.volley.toolbox.HurlStack -> com.android.a.a.q:
    com.android.volley.toolbox.HurlStack$UrlRewriter mUrlRewriter -> a
    javax.net.ssl.SSLSocketFactory mSslSocketFactory -> b
    void <init>() -> <init>
    void <init>(com.android.volley.toolbox.HurlStack$UrlRewriter) -> <init>
    void <init>(com.android.volley.toolbox.HurlStack$UrlRewriter,javax.net.ssl.SSLSocketFactory) -> <init>
    HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> a
    boolean hasResponseBody(int,int) -> a
    HttpEntity entityFromConnection(java.net.HttpURLConnection) -> b
    java.net.HttpURLConnection createConnection(java.net.URL) -> c
    java.net.HttpURLConnection openConnection(java.net.URL,com.android.volley.Request) -> d
    void setConnectionParametersForRequest(java.net.HttpURLConnection,com.android.volley.Request) -> e
    void addBodyIfExists(java.net.HttpURLConnection,com.android.volley.Request) -> f
android.support.design.widget.FloatingActionButtonGingerbread$2 -> android.support.design.widget.ba:
    android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener -> a
    android.support.design.widget.FloatingActionButtonGingerbread this$0 -> b
    void <init>(android.support.design.widget.FloatingActionButtonGingerbread,android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.b:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void <init>() -> <init>
    void <init>(int) -> <init>
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> b
    void delete(int) -> c
    void remove(int) -> d
    void removeAt(int) -> e
    void gc() -> f
    void put(int,java.lang.Object) -> g
    int size() -> h
    int keyAt(int) -> i
    java.lang.Object valueAt(int) -> j
    int indexOfKey(int) -> k
    void clear() -> l
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
    void <clinit>() -> <clinit>
android.support.v7.widget.ActivityChooserView$InnerLayout -> android.support.v7.widget.ActivityChooserView$InnerLayout:
    int[] TINT_ATTRS -> a
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <clinit>() -> <clinit>
